<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kriptok</name>
    </assembly>
    <members>
        <member name="T:Kriptok.Audio.Midi.MidiInstrument">
            <summary>
            Representa un instrumento Midi que toca notas en un canal determinado.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Midi.MidiInstrument.#ctor(Kriptok.Audio.MidiInstrumentEnum,System.Byte)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Audio.Midi.MidiInstrument"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Midi.MidiInstrument.Get(System.Byte,Kriptok.Audio.MidiInstrumentEnum)">
            <summary>
            Obtiene una nueva instancia de MidiInstrument, sobreescribiendo la que hubiera en el canal indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Midi.MidiInstrument.Play(System.Byte,System.Byte)">
            <summary>
            Reproduce una nota con el instrumento.
            </summary>        
        </member>
        <member name="T:Kriptok.Audio.Helpers.MidiHelper">
            <summary>
            Funcionalidades de ayuda para la reproducción de archivos "midi".
            
            Los archivos midi se reproducen con una aplicación extra, que corre en paralelo.
            Esto se debe a que es la única forma de que la reproducción de midis tenga su propio control de volumen.
            </summary>
        </member>
        <member name="T:Kriptok.Audio.Helpers.MidiHelper.MidiMessageEnum">
            <summary>
            Tipos de mensaje que se le pueden enviar a la aplicación.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.MidiMessageEnum.Finish">
            <summary>
            Finaliza la aplicación.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.MaxFileName">
            <summary>
            Maxima longitud que puede tener el nombre de un archivo midi para ser reproducido.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.LoopingFlagMask">
            <summary>
            Máscara utilizada para separar en dos la longitud del nombre de archivo a reproducir, y la
            propiedad que indica que la canción debe loopear.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.MemoryMappedFileBaseName">
            <summary>
            Nombre base del "archivo mapeado a memoria" utilizado para reproducir archivos midi.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.memoryMappedFileName">
            <summary>
            Nombre del archivo mapeado a memoria para esta instancia.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.memoryMappedFile">
            <summary>
            Archivo mapeado en memoria utilizado para comunicarse entre procesos.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.midiPlayerProcess">
            <summary>
            Proceso que reproduce los midis.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.midiPlayerThreadId">
            <summary>
            Id del thread del proceso que reproduce archivos midi.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Initialize(System.Boolean)">
            <summary>
            Compila un archivo ".exe" para reproducir midis en un proceso aparte. Esto es necesario
            porque no se puede setear el volumen de reproducción de midis independientemente si 
            está corriendo en el mismo proceso que el que reproduce los sonidos.
            
            https://msdn.microsoft.com/en-us/library/microsoft.visualbasic.vbcodeprovider(v=vs.110).aspx
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.IsInitialized">
            <summary>
            Indica si se puede utilizar el sub-proceso que reproduce midis.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Kill">
            <summary>
            Libera los recursos relacionados a la reproducción de midis.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.SendMidiMessage(Kriptok.Audio.Helpers.MidiHelper.MidiMessageEnum,System.String,System.Int32)">
            <summary>
            Envía un mensaje al proceso reproductor de archivos midi.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Play(System.String,System.Boolean)">
            <summary>
            Indica al sub-proceso reproductor de archivos midi que empiece a reproducir un archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Play(System.String,System.Double,System.Boolean)">
            <summary>
            Indica al sub-proceso reproductor de archivos midi que empiece a reproducir un archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Stop">
            <summary>
            Detiene la reproducción remota de un archivo midi.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Finish">
            <summary>
            Detiene la reproducción remota de un archivo midi.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Pause">
            <summary>
            Pausa una canción que se está reproduciendo.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Resume">
            <summary>
            Reanuda una canción que estaba pausada.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.SetVolume(System.UInt32)">
            <summary>
            Reanuda una canción que estaba pausada.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.NewMidiHandler(System.String)">
            <summary>
            Obtiene un nuevo controlador de mensajes midi para recibir mensajes.
            </summary>        
        </member>
        <member name="T:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter">
            <summary>
            Controlador de mensajes midi.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.memoryMappedFileName">
            <summary>
            Nombre del archivo mapeado a memoria por el que me van a pasar el nombre de las canciones.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.SendMyMainThreadId(System.String)">
            <summary>
            Obtiene el número de thread, y se lo envía al proceso padre.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.Read(System.Int32)">
            <summary>
            Lee del archivo de memoria un string de la longitud indicada.
            </summary>            
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.Play(System.String,System.Boolean)">
            <summary>
            Reproduce un archivo midi.
            </summary>            
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.SetVolume(System.UInt32)">
            <summary>
            Establece el volumen de reproducción de archivos midi.
            </summary>            
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.Pause">
            <summary>
            Detiene momentáneamente la reproducción de un archivo midi.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.Resume">
            <summary>
            Retoma la reproducción de un archivo midi que había sido pausado momentáneamente.
            </summary>            
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.Stop">
            <summary>
            Detiene la ejecución de un archivo midi y libera el recurso.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.Finish">
            <summary>
            Finaliza el proceso de ejecución de midis.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.SoundHelper.PlaySound(Kriptok.Common.Resource)">
            <summary>
            Reproduce un sonido que esté señalado como Recurso Embebido. Este método sólo
            permite reproducir un sonido a la vez.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.SoundHelper.CheckStatus">
            <summary>
            Chequea si tiene que reproducir algún sonido encolado.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.SoundHelper.ClearSounds">
            <summary>
            Limpia la lista de sonidos que haya almacenados.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.SoundHelper.PlayWave(Kriptok.Common.Resource)">
            <summary>
            Reproduce un sonido que esté señalado como Recurso Embebido, pero antes lo descarga del
            ensamblado como un archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.SoundHelper.PlaySoundSync(Kriptok.Common.Resource)">
            <summary>
            Reproduce un sonido de forma sincrónica.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.SoundHelper.ClearCache">
            <summary>
            Libera los sonidos de la memoria.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.Native.mciSendString(System.String,System.Text.StringBuilder,System.UInt32,System.IntPtr)">
            <summary>
            https://docs.microsoft.com/en-us/previous-versions/dd757161(v=vs.85)
            https://msdn.microsoft.com/en-us/library/windows/desktop/dd743646(v=vs.85).aspx
            </summary>            
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.PlayMusic(System.String,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Double)">
            <summary>
            
            </summary>        
            <param name="filePath"></param>
            <param name="repeat"></param>
            <param name="volume">Valor entre 0 y 1 representando la intensidad del volumen.</param>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.IsMidiFile(System.String,System.Boolean)">
            <summary>
            Indica, basándose en la extensión si se trata de un archivo ".mid". Este tipo de archivo, cuando
            se baja desde recurso, se baja con extensión ".dat" (<seealso cref="M:Kriptok.Helpers.ResourcesHelper.ResolveId(Kriptok.Common.Resource)"/>).
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.PlayWave(System.String,System.Boolean,System.Double)">
            <summary>
            Reproduce un archivo de sonido con los parámetros indicados.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.GetWaveDevice(System.String,System.Double)">
            <summary>
            Obtiene el id del dispositivo a reproducir.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.PlayWaveDevice(System.String,System.Boolean)">
            <summary>
            Reproduce un dispositivo indicado desde el principio.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.CheckError(System.Int32,System.String)">
            <summary>
            https://msdn.microsoft.com/en-us/library/aa228215(v=vs.60).aspx
            </summary>
            <param name="result"></param>
            <param name="cmd">Comando ejecutado, necesario para lanzar la excepción.</param>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.CheckStatus">
            <summary>
            Este método es el que se encarga de chequear las instrucciones que llegaron al MidiHelper.
            Ya que las funcionalidades de Midi sólo andan bien cuando las llama el formulario principal.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.StopAll(System.Boolean)">
            <summary>
            Detiene toda la reproducción de música.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.ResumeAll">
            <summary>
            Retoma la reproducción de música.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.PauseAll">
            <summary>
            Pausa toda la reproducicón de música.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiErrorEnum.MMSYSERR_NOERROR">
            <summary>
            Si tiene éxito en cargar el dispositivo.
            </summary>
            
        </member>
        <member name="F:Kriptok.Audio.MidiErrorEnum.MMSYSERR_BADDEVICEID">
            <summary>
            El ID del dispositivo fuera de rango
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiErrorEnum.MMSYSERR_NODRIVER">
            <summary>
            No hay dispositivo detectado.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiErrorEnum.MMSYSERR_NOMEM">
            <summary>
            Error Alojamiento de memoria.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiErrorEnum.MMSYSERR_INVALPARAM">
            <summary>
            Parámetro invalido pasado.
            </summary>
        </member>
        <member name="T:Kriptok.Audio.MidiInstrumentEnum">
            <summary>
            Enumerado de instrumentos midi.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.AcousticGrandPiano">
            <summary>
            Acoustic Grand Piano
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.BrightAcousticPiano">
            <summary>
            Bright Acoustic Piano
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricGrandPiano">
            <summary>
            Electric Grand Piano
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.HonkyTonkPiano">
            <summary>
            Honky-tonk Piano
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricPiano1">
            <summary>
            Electric Piano 1
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricPiano2">
            <summary>
            Electric Piano 2
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Harpsichord">
            <summary>
            Harpsichord
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Clavi">
            <summary>
            Clavi
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Celesta">
            <summary>
            Celesta
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Glockenspiel">
            <summary>
            Glockenspiel
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.MusicBox">
            <summary>
            Music Box
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Vibraphone">
            <summary>
            Vibraphone
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Marimba">
            <summary>
            Marimba
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Xylophone">
            <summary>
            Xylophone
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.TubularBells">
            <summary>
            Tubular Bells
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Dulcimer">
            <summary>
            Dulcimer
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.DrawbarOrgan">
            <summary>
            Drawbar Organ
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.PercussiveOrgan">
            <summary>
            Percussive Organ
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.RockOrgan">
            <summary>
            Rock Organ
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ChurchOrgan">
            <summary>
            Church Organ
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ReedOrgan">
            <summary>
            Reed Organ
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Accordion">
            <summary>
            Accordion
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Harmonica">
            <summary>
            Harmonica
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.TangoAccordion">
            <summary>
            Tango Accordion
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.AcousticGuitarNylon">
            <summary>
            Acoustic Guitar (nylon)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.AcousticGuitarSteel">
            <summary>
            Acoustic Guitar (steel)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricGuitarJazz">
            <summary>
            Electric Guitar (jazz)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricGuitarClean">
            <summary>
            Electric Guitar (clean)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricGuitarMuted">
            <summary>
            Electric Guitar (muted)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.OverdrivenGuitar">
            <summary>
            Overdriven Guitar
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.DistortionGuitar">
            <summary>
            Distortion Guitar
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.GuitarHarmonics">
            <summary>
            Guitar harmonics
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.AcousticBass">
            <summary>
            Acoustic Bass
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricBassFinger">
            <summary>
            Electric Bass (finger)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricBassPick">
            <summary>
            Electric Bass (pick)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FretlessBass">
            <summary>
            Fretless Bass
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SlapBass1">
            <summary>
            Slap Bass 1
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SlapBass2">
            <summary>
            Slap Bass 2
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthBass1">
            <summary>
            Synth Bass 1
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthBass2">
            <summary>
            Synth Bass 2
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Violin">
            <summary>
            Violin
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Viola">
            <summary>
            Viola
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Cello">
            <summary>
            Cello
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Contrabass">
            <summary>
            Contrabass
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.TremoloStrings">
            <summary>
            Tremolo Strings
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.PizzicatoStrings">
            <summary>
            Pizzicato Strings
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.OrchestralHarp">
            <summary>
            Orchestral Harp
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Timpani">
            <summary>
            Timpani
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.StringEnsemble1">
            <summary>
            String Ensemble 1
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.StringEnsemble2">
            <summary>
            String Ensemble 2
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthStrings1">
            <summary>
            SynthStrings 1
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthStrings2">
            <summary>
            SynthStrings 2
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ChoirAahs">
            <summary>
            Choir Aahs
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.VoiceOohs">
            <summary>
            Voice Oohs
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthVoice">
            <summary>
            Synth Voice
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.OrchestraHit">
            <summary>
            Orchestra Hit
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Trumpet">
            <summary>
            Trumpet
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Trombone">
            <summary>
            Trombone
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Tuba">
            <summary>
            Tuba
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.MutedTrumpet">
            <summary>
            Muted Trumpet
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FrenchHorn">
            <summary>
            French Horn
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.BrassSection">
            <summary>
            Brass Section
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthBrass1">
            <summary>
            SynthBrass 1
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthBrass2">
            <summary>
            SynthBrass 2
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SopranoSax">
            <summary>
            Soprano Sax
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.AltoSax">
            <summary>
            Alto Sax
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.TenorSax">
            <summary>
            Tenor Sax
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.BaritoneSax">
            <summary>
            Baritone Sax
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Oboe">
            <summary>
            Oboe
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.EnglishHorn">
            <summary>
            English Horn
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Bassoon">
            <summary>
            Bassoon
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Clarinet">
            <summary>
            Clarinet
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Piccolo">
            <summary>
            Piccolo
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Flute">
            <summary>
            Flute
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Recorder">
            <summary>
            Recorder
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.PanFlute">
            <summary>
            Pan Flute
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.BlownBottle">
            <summary>
            Blown Bottle
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Shakuhachi">
            <summary>
            Shakuhachi
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Whistle">
            <summary>
            Whistle
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Ocarina">
            <summary>
            Ocarina
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead1Square">
            <summary>
            Lead 1 (square)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead2Sawtooth">
            <summary>
            Lead 2 (sawtooth)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead3Calliope">
            <summary>
            Lead 3 (calliope)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead4Chiff">
            <summary>
            Lead 4 (chiff)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead5Charang">
            <summary>
            Lead 5 (charang)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead6Voice">
            <summary>
            Lead 6 (voice)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead7Fifths">
            <summary>
            Lead 7 (fifths)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead8BassLead">
            <summary>
            Lead 8 (bass + lead)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad1NewAge">
            <summary>
            Pad 1 (new age)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad2Warm">
            <summary>
            Pad 2 (warm)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad3Polysynth">
            <summary>
            Pad 3 (polysynth)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad4Choir">
            <summary>
            Pad 4 (choir)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad5Bowed">
            <summary>
            Pad 5 (bowed)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad6Metallic">
            <summary>
            Pad 6 (metallic)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad7Halo">
            <summary>
            Pad 7 (halo)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad8Sweep">
            <summary>
            Pad 8 (sweep)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX1Rain">
            <summary>
            FX 1 (rain)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX2Soundtrack">
            <summary>
            FX 2 (soundtrack)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX3Crystal">
            <summary>
            FX 3 (crystal)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX4Atmosphere">
            <summary>
            FX 4 (atmosphere)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX5Brightness">
            <summary>
            FX 5 (brightness)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX6Goblins">
            <summary>
            FX 6 (goblins)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX7Echoes">
            <summary>
            FX 7 (echoes)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX8SciFi">
            <summary>
            FX 8 (sci-fi)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Sitar">
            <summary>
            Sitar
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Banjo">
            <summary>
            Banjo
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Shamisen">
            <summary>
            Shamisen
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Koto">
            <summary>
            Koto
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Kalimba">
            <summary>
            Kalimba
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.BagPipe">
            <summary>
            Bag pipe
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Fiddle">
            <summary>
            Fiddle
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Shanai">
            <summary>
            Shanai
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.TinkleBell">
            <summary>
            Tinkle Bell
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Agogo">
            <summary>
            Agogo
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SteelDrums">
            <summary>
            Steel Drums
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Woodblock">
            <summary>
            Woodblock
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.TaikoDrum">
            <summary>
            Taiko Drum
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.MelodicTom">
            <summary>
            Melodic Tom
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthDrum">
            <summary>
            Synth Drum
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ReverseCymbal">
            <summary>
            Reverse Cymbal
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.GuitarFretNoise">
            <summary>
            Guitar Fret Noise
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.BreathNoise">
            <summary>
            Breath Noise
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Seashore">
            <summary>
            Seashore
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.BirdTweet">
            <summary>
            Bird Tweet
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.TelephoneRing">
            <summary>
            Telephone Ring
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Helicopter">
            <summary>
            Helicopter
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Applause">
            <summary>
            Applause
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Gunshot">
            <summary>
            Gunshot
            </summary>
        </member>
        <member name="T:Kriptok.Audio.MidiNotePlayer">
            <summary>
            https://stackoverflow.com/questions/40392382/midioutshortmsg-no-sound
            </summary>
        </member>
        <member name="T:Kriptok.Audio.MidiNotePlayer.MidiOutCaps">
            <summary>
            Esta es la estructura de un dispositivo de salida midi.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.wMid">
            <summary>
            ID del Fabricante.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.wPid">
            <summary>
            ID del Producto.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.vDriverVersion">
            <summary>
            Versión del driver.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.szPname">
            <summary>
            Nombre del Producto.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.wTechnology">
            <summary>
            Tipo de dispositivo.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.wVoices">
            <summary>
            Número de voces (Sólo para el sintetizador interno).
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.wNotes">
            <summary>
            Máximo número de notas (Sólo para el sintetizador interno).
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.wChannelMask">
            <summary>
            Número de canales Midi (Sólo para el sintetizador interno).
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.dwSupport">
            <summary>
            Controles extra permitidos (volumen, etc)
            </summary>
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.midiOutGetNumDevs">
            <summary>
            The midiOutGetNumDevs function retrieves the number of MIDI output devices present in the system.
            </summary>
            <returns></returns>        
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.midiOutGetDevCaps(System.Int32,Kriptok.Audio.MidiNotePlayer.MidiOutCaps@,System.UInt32)">
            <summary>
            Se utiliza para obtener el dispositivo de salida de Midi predeterminado.
            </summary>
            <param name="uDeviceID">identifica al dispositivo de salida midi (-1 es el default), 
            y luego la cuenta empieza desde CERO para el resto.</param>
            <param name="lpMidiOutCaps">es una estructura de tipo <see cref="T:Kriptok.Audio.MidiNotePlayer.MidiOutCaps"/>, declarado arriba, 
            que va a guardar la información del dispositivo de salida Midi.</param>
            <param name="cbMidiOutCaps">es el tamaño en bits de la estructura lbCaps.</param>        
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.midiOutShortMsg(System.Int32,System.Int32)">
            <summary>        
            Se utiliza para enviar mensajes de salida midi, tanto para reproducir notas, 
            como para cambiar el instrumento, etcétera.
            
            https://docs.microsoft.com/en-us/windows/win32/api/mmeapi/nf-mmeapi-midioutshortmsg
            </summary>        
            <param name="handle">Es el código del dispositivo de salida midi, que devuelve midiOutOpen lphMidiOut.</param>
            <param name="message">Mensaje enviado.</param>        
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.midiOutClose(System.Int32)">
            <summary>
            Se utiliza para cerrar el dispositivo de salida Midi.
            </summary>
            <param name="handle">Es el parámetro que devuelve midiOutOpen lphMidiOut</param>        
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.SetInstrument(Kriptok.Audio.MidiInstrumentEnum,System.Int32)">
            <summary>
            Establece el instrumento a reproducir en el canal indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.SetInstrument(System.Int32,System.Int32)">
            <summary>
            Establece el instrumento a reproducir en el canal indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.GetNote(System.Int32)">
            <summary>
            Obtiene la nota y la octava a la que pertenece la nota indicada.
            
            Oct#  C   C#  D   D#  E   F   F#  G   G#  A   A#  B
             -1   0   1   2   3   4   5   6   7   8   9   10  11
              0   12  13  14  15  16  17  18  19  20  21  22  23
              1   24  25  26  27  28  29  30  31  32  33  34  35
              2   36  37  38  39  40  41  42  43  44  45  46  47
              3   48  49  50  51  52  53  54  55  56  57  58  59
              4   60  61  62  63  64  65  66  67  68  69  70  71
              5   72  73  74  75  76  77  78  79  80  81  82  83
              6   84  85  86  87  88  89  90  91  92  93  94  95
              7   96  97  98  99  100 101 102 103 104 105 106 107
              8   108 109 110 111 112 113 114 115 116 117 118 119
              9   120 121 122 123 124 125 126 127
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.GetPercussionInstruments">
            <summary>
            Obtiene una lista de los instrumentos de percusión.
            
            Recordar utilizar los índices a partir del 35
            </summary>       
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.GetInstruments">
            <summary>
            https://softologyblog.wordpress.com/2009/09/30/controlling-midi-output-with-delphi/
            </summary>        
        </member>
        <member name="T:Kriptok.Audio.MciWaveHandler">
            <summary>
            Representa un controlador de sonido que envía una señal a Windows para reproducir el sonido.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MciWaveHandler.fileName">
            <summary>
            Nombre del archivo generado.
            </summary>
        </member>
        <member name="T:Kriptok.Audio.SoundPlayerHandler">
            <summary>
            Representa un controlador de un sonido en particular.
            </summary>
        </member>
        <member name="T:Kriptok.Core.ScreenRegion">
            <summary>
            Esta clase representa una región de la pantalla donde se pueden renderizar vistas.
            </summary>
        </member>
        <member name="F:Kriptok.Core.ScreenRegion.queries">
            <summary>
            Lista de consultas a resolver.
            </summary>
        </member>
        <member name="M:Kriptok.Core.ScreenRegion.ResolveQueries(Kriptok.Modes.Context.Base.IRenderContext)">
            <summary>
            Resuelve todas las colisiones que se indicaron.
            </summary>
        </member>
        <member name="M:Kriptok.Core.ScreenRegion.GetQueryCount">
            <summary>
            Obtiene la cantidad de queries de colisión a resolver por frame.
            </summary>        
        </member>
        <member name="F:Kriptok.Core.ScreenRegion.entities">
            <summary>
            Lista de entidades a renderizar en esta región.
            </summary>
        </member>
        <member name="F:Kriptok.Core.ScreenRegion.Id">
            <summary>
            Id unívoco de la región. Este id puede modificarse a lo largo del programa si una región desaparece.
            </summary>
        </member>
        <member name="F:Kriptok.Core.ScreenRegion.HalfWidthF">
            <summary>
            Mitad de la pantalla horizontalmente.
            </summary>
        </member>
        <member name="F:Kriptok.Core.ScreenRegion.HalfHeightF">
            <summary>
            Mitad de la pantalla verticalmente.
            </summary>
        </member>
        <member name="F:Kriptok.Core.ScreenRegion.Ambience">
            <summary>
            Indica de dónde viene la luz de ambiente.
            </summary>
        </member>
        <member name="P:Kriptok.Core.ScreenRegion.ScrollDepthTranslation">
            <summary>
            Esta propiedad es crucial cuando se quiere tener polígonos en una vista de Scroll. Lo que hace
            es trasladar la coordenada 0 del plano tridimensional, al mapa de scroll.
            </summary>
        </member>
        <member name="P:Kriptok.Core.ScreenRegion.Size">
            <summary>
            La idea de esta propiedad es obtener los valores y después ser casteados y almacenados en memoria.
            No debe formar parte de ningún cálculo que se deba repetir indefinidamente, ya que es lento y 
            puede causar problemas de performance.
            </summary>
        </member>
        <member name="M:Kriptok.Core.ScreenRegion.GetBounds">
            <summary>
            Obtiene los límites de la región en valores de punto flotante.
            </summary>
        </member>
        <member name="M:Kriptok.Core.ScreenRegion.GetBoundsF">
            <summary>
            Obtiene los límites de la región en valores de punto flotante.
            </summary>
        </member>
        <member name="M:Kriptok.Core.ScreenRegion.Clear">
            <summary>
            Limpia la región y libera todos los recursos.
            </summary>
        </member>
        <member name="M:Kriptok.Core.ScreenRegion.GetGdipRotationAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Core.ScreenRegion.GetDirectionAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo en que el objeto está "mirando" o "apuntando" en ambientes bidimensinoales.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.ScreenRegion.AddObject``1(``0)">
            <summary>
            Agrega una entidad para renderizar en la región.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.ScreenRegion.GetEntities">
            <summary>
            Obtiene las entidades para renderizar en esta región.
            </summary>        
        </member>
        <member name="T:Kriptok.Core.Game.Render">
            <summary>
            Funcionalidades generales relacionadas a la renderización y gráficos.
            </summary>
        </member>
        <member name="T:Kriptok.Core.Game.Collisions">
            <summary>
            Clase que se encarga de resolver colisiones entre objetos.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Game.Collisions.queries">
            <summary>
            Lista de consultas de colisión a resolver.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Collisions.Resolve(Kriptok.Entities.Base.EntityBase[])">
            <summary>
            Resuelve todas las colisiones que se indicaron.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Collisions.GetQueryCount">
            <summary>
            Obtiene la cantidad de queries de colisión a resolver por frame.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.Game.ClearGC">
            <summary>
            Limpio el Garbage Collector después de generar mapas y esas cosas.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Lock(System.Action)">
            <summary>
            Este lock se utiliza cuando se desea modificar la lista de objetos vivos.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.Game.Lock``1(System.Func{``0})">
            <summary>
            Este lock se utiliza cuando se desea modificar la lista de objetos vivos.
            </summary>    
        </member>
        <member name="M:Kriptok.Core.Game.GetAliveObjectsCount">
            <summary>
            Obtiene la cantidad de objetos vivos en este momento.
            </summary>        
        </member>
        <member name="T:Kriptok.Core.Camera">
            <summary>
            Estructura que agrupa la información de la cámara al momento de renderizar la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Camera.Distance">
            <summary>
            Para perspectivas tridimencionales, indica a la distancia que se encuentra la cámara del objetivo.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Camera.TiltAngle">
            <summary>
            Inclinación lateral de la cámara (ángulos en radianes).
            </summary>
        </member>
        <member name="F:Kriptok.Core.Camera.DirectionAngle">
            <summary>
            Dirección en la que apunta la cámara (ángulos en radianes).
            </summary>
        </member>
        <member name="F:Kriptok.Core.Camera.Location">
            <summary>
            "Ubicación física" donde se encuentra la cámara, antes de aplicar la <see cref="F:Kriptok.Core.Camera.Distance"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Camera.GetAngleToCamera2D(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Obtiene el ángulo desde el cuál se está mirando al proceso. No el ángulo del cual lo está
            mirando el proceso cámara, sino del usuario directamente.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Camera.GetPseudo3DMatrix">
            <summary>
            Obtiene la matriz de transformación del plano de Mode7 para transformar puntos tridimencionales
            a la perspectiva actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.Camera.GetTargetLocation2D">
            <summary>
            Obtiene la ubicación del objetivo de la cámara.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.Camera.GetCameraLocation2D">
            <summary>
            Obtiene la ubicación real de la cámara, basada en la ubicación, la dirección y la distancia.
            </summary>        
        </member>
        <member name="T:Kriptok.Core.Window">
            <summary>
            Esta clase agrupa las funcionalidades estándar de la pantalla del juego.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Window.MainForm">
            <summary>
            Formulario principal de la aplicación.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Window.Focused">
            <summary>
            Indica si la ventana tiene el foco en Windows.
            </summary>
        </member>
        <member name="P:Kriptok.Core.Window.Regions">
            <summary>
            Lista de regiones activas.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Window.SubRegions">
            <summary>
            Lista de regiones a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Window.ScreenRegion">
            <summary>
            Región principal.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Window.SortSubRegions">
            <summary>
            Ordena las regiones en pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Window.ClearRegions">
            <summary>
            Elimina todas las regiones excepto la principal.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Window.GetQueryCount">
            <summary>
            Obtiene la cantidad de consultas por región que están en este momento en memoria.
            </summary>        
        </member>
        <member name="F:Kriptok.Core.WindowSizeEnum.M320x200To240">
            <summary>
            Resolución especial para juegos antiguos que tenían una resolución de 320x200
            que debía estirarse hasta cubrir una pantalla de 4:3
            </summary>
        </member>
        <member name="F:Kriptok.Core.WindowSizeEnum.W170x96">
            <summary>
            Pixels de 8x8. Estilo consola.
            </summary>
        </member>
        <member name="F:Kriptok.Core.WindowSizeEnum.W340x192">
            <summary>
            1/16 de pantalla. Pixels de 4x4
            </summary>
        </member>
        <member name="F:Kriptok.Core.WindowSizeEnum.W454x256">
            <summary>
            1/9 de pantalla. Pixels de 3x3
            </summary>
        </member>
        <member name="F:Kriptok.Core.WindowSizeEnum.W680x384">
            <summary>
            1/4 de pantalla. Pixels de 2x2.
            </summary>
        </member>
        <member name="T:Kriptok.Core.WindowModeEnumExtensions">
            <summary>
            Métodos asociados al enumerado <see cref="T:Kriptok.Core.WindowSizeEnum"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Core.WindowModeEnumExtensions.ToSize(Kriptok.Core.WindowSizeEnum)">
            <summary>
            Obtiene el tamaño (en pixels) de la pantalla a la que renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.ScreenRegionExtensions.Center(Kriptok.Core.ScreenRegion)">
            <summary>
            Obtiene las coordenadas del punto central de la pantalla.
            </summary>        
        </member>
        <member name="T:Kriptok.Exceptions.InvalidEnumValueException`1">
            <summary>
            Esta excepción indica que el valor de una variable, propiedad o atributo
            enumerado no es válido.
            </summary>    
        </member>
        <member name="M:Kriptok.Exceptions.InvalidEnumValueException`1.Throw``1(`0)">
            <summary>
            Lanza una excepción de tipo <see cref="T:Kriptok.Exceptions.InvalidEnumValueException`1"/>, y se puede
            utilizar como valor de retorno de métodos.
            </summary>        
        </member>
        <member name="P:Kriptok.Exceptions.ResourceNotFoundException.AssemblyResources">
            <summary>
            Lista de recursos que sí están accessibles en el ensamblado indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.MemoryMappedFileExtensions.WriteStr(System.IO.MemoryMappedFiles.MemoryMappedFile,System.String)">
            <summary>
            Escribe un mensaje en la posición 0.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.MemoryMappedFileExtensions.ReadStr(System.IO.MemoryMappedFiles.MemoryMappedFile,System.Int32)">
            <summary>
            Lee un mensaje de texto.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.MemoryMappedFileExtensions.WriteUInt(System.IO.MemoryMappedFiles.MemoryMappedFile,System.UInt32)">
            <summary>
            Escribe un mensaje en la posición 0.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.MemoryMappedFileExtensions.ReadInt(System.IO.MemoryMappedFiles.MemoryMappedFile)">
            <summary>
            Lee un valor de tipo <see cref="T:System.UInt32"/> del archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.RectangleExtensions.ToRectangleF(System.Drawing.Rectangle)">
            <summary>
            Transforma un <see cref="T:System.Drawing.Rectangle"/> en un <see cref="T:System.Drawing.RectangleF"/> con los mismos valores.
            </summary>        
        </member>
        <member name="T:Kriptok.Extensions.StackExtensions">
            <summary>
            Extensiones para la clase <see cref="T:System.Collections.Generic.Stack`1"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Extensions.TypeExtensions">
            <summary>
            Lista de extensiones para la clase <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.TypeExtensions.Implements``1(System.Type)">
            <summary>
            Indica si la clase implementa la interfaz indicada.
            </summary>        
        </member>
        <member name="T:Kriptok.Extensions.IListExtensions">
            <summary>
            Clase con métodos de extensión para la clase <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.IListExtensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Agrega todos los elementos indicados a la lista.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.UInt32Extensions.ScaleColorDown(System.UInt32,System.UInt32)">
            <summary>
            Escala el valor como si fuera un color de coordenadas RGB.
            </summary>                
        </member>
        <member name="M:Kriptok.Extensions.UInt32Extensions.ScaleColorUp(System.UInt32,System.UInt32)">
            <summary>
            Escala el valor (lo hace más brillante) como si fuera un color de coordenadas RGB.
            </summary>                
        </member>
        <member name="M:Kriptok.Extensions.UInt32Extensions.ScaleColorDownAlpha(System.UInt32,System.UInt32)">
            <summary>
            Escala el valor hacia abajo (lo oscurece) manteniendo la transparencia.
            </summary>                        
        </member>
        <member name="M:Kriptok.Extensions.UInt32Extensions.ScaleColorUpAlpha(System.UInt32,System.UInt32)">
            <summary>
            Escala el valor (lo hace más brillante) manteniendo la transparencia.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.UInt32Extensions.ToColor(System.UInt32)">
            <summary>
            Transforma un color almacenado en un <see cref="T:System.UInt32"/> en un <see cref="T:System.Drawing.Color"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.AssemblyExtensions.TryGetTypes(System.Reflection.Assembly)">
            <summary>
            Intenta obtener todas las clases de un ensamblado.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.DoubleExtensions.ClampToByte(System.Double)">
            <summary>
            Clampea un valor a los valores máximos y mínimos de un <see cref="T:System.Byte"/> y además lo castea.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.DoubleExtensions.Floor(System.Double)">
            <summary>
            Obtiene el "piso" del número de tipo <see cref="T:System.Single"/> indicado.
            </summary>                
        </member>
        <member name="M:Kriptok.Extensions.LinearGradientBrushExtensions.SavingState(System.Drawing.Drawing2D.LinearGradientBrush,System.Action{System.Drawing.Drawing2D.LinearGradientBrush})">
            <summary>
            Este método lo que hace es realizar una copia de la matriz de transformación,
            y volverla a guardar cuando se termine de utilizar la nueva transformación.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.ArrayExtensions.IsNullOrEmpty``1(``0[])">
            <summary>
            Indica si un vector no tiene elementos o bien la referencia es nula.
            </summary>                
        </member>
        <member name="M:Kriptok.Extensions.ArrayExtensions.LengthOrDefault``1(``0[])">
            <summary>
            Indica la longitud de un vector, o 0 si este es null.
            </summary>                
        </member>
        <member name="M:Kriptok.Extensions.ColorExtensions.Rotate(System.Drawing.Color,System.Single)">
            <summary>
            Rota la gama del color.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.ColorExtensions.MultiplyBy(System.Drawing.Color,System.Single)">
            <summary>
            Aplica un multiplicador (valor entre 0 y 1) al color, para calcular la opacidad real del color,
            a todas las coordenadas, menos al Alpha.
            </summary>        
            <returns>Devuelve el color modificado.</returns>
        </member>
        <member name="M:Kriptok.Extensions.ColorExtensions.Plus(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Suma las coordenadas de color de dos colores, menos al Alpha, que toma la del color original.
            </summary>        
            <returns>Devuelve el color modificado.</returns>
        </member>
        <member name="T:Kriptok.Extensions.FloatExtensions">
            <summary>
            Funcionalidades extendidas del tipo <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.FloatExtensions.Floor(System.Single)">
            <summary>
            Obtiene el "piso" del número de tipo <see cref="T:System.Single"/> indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.FloatExtensions.Ceiling(System.Single)">
            <summary>
            Obtiene el "techo" del número de tipo <see cref="T:System.Single"/> indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.FloatExtensions.ClampToByte(System.Single)">
            <summary>
            Clampea un valor a los valores máximos y mínimos de un <see cref="T:System.Byte"/> y además lo castea.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.FloatExtensions.Round(System.Single)">
            <summary>
            Redondea un número al entero más ceracano.
            </summary>
            <param name="f">Número a redondear.</param>
        </member>
        <member name="M:Kriptok.Extensions.FloatExtensions.Round1(System.Single)">
            <summary>
            Redondea un valor de tipo flotante a un decimal.
            </summary>        
        </member>
        <member name="F:Kriptok.Extensions.GraphicsExtensions.SolidBrush">
            <summary>
            Brush genérico para dibujar sombras sobre caras texturadas.
            </summary>
        </member>
        <member name="F:Kriptok.Extensions.GraphicsExtensions.ComplexPen">
            <summary>
            Brush genérico para dibujar sombras sobre caras texturadas.
            </summary>
        </member>
        <member name="F:Kriptok.Extensions.GraphicsExtensions.WirePen">
            <summary>
            Esta pluma se utiliza para dibujar figuras suaves como líneas y polígonos.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.GraphicsExtensions.SetPixelatedProperties(System.Drawing.Graphics,System.Drawing.Drawing2D.PixelOffsetMode)">
            <summary>
            https://www.codeproject.com/Tips/66909/Rendering-fast-with-GDI-What-to-do-and-what-not-to        
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.GraphicsExtensions.UsingDefaultInterpolationMode(System.Drawing.Graphics,System.Action)">
            <summary>
            Establece temporalmente el modo de interpolación por defecto. Luego
            vuelve a establecer el que estaba previamente.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.GraphicsExtensions.GetBounds(System.Drawing.Graphics)">
            <summary>
            Obtiene los límites visibles del objeto <see cref="T:System.Drawing.Graphics"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.GraphicsExtensions.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Dibuja la imagen en el objeto graphics indicado, utilizando los atributos indicados por parámero.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.GraphicsExtensions.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Dibuja la imagen en el objeto graphics indicado, utilizando los atributos indicados por parámero.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.IDictionaryExtensions.Resolve``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``1})">
            <summary>
            Resolve utiliza el patrón doble check (antes y después de lockear).
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.FromBase64(System.String)">
            <summary>
            Decodifica el string de base 64.
            </summary>
            <param name="s">String a decodificar.</param>
            <returns>Devuelve el string decodificado de base 64.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.ToBase64(System.String)">
            <summary>
            Codifica el string en base64.
            </summary>
            <param name="s">String a codificar.</param>
            <returns>Devuelve el string codificado en base 64.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.ToInt(System.String)">
            <summary>
            Parsea un string a un tipo de dato entero, validando previamente que no sea null-
            </summary>
            <param name="s">String a parsear.</param>
            <returns>Devuelve el valor del string parseado a int, o 0 si es null.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.ReplaceXmlCharacters(System.String)">
            <summary>
            Función que reemplaza en el contenido de un texto, los caracteres especiales de Xml.
            </summary>
            <param name="text">Texto a modificar.</param>
            <returns>Devuelve la cadena de texto, válida para un Xml.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.ReSplit(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="regex"></param>
            <returns></returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.PopLast(System.String)">
            <summary>
            Le quita el último caracter a una cadena.
            </summary>
            <param name="s">String a recortar.</param>        
            <returns>Devuelve una cadena sin el último caracter.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.PopFirst(System.String)">
            <summary>
            Le quita el primer caracter a la cadena.
            </summary>
            <param name="s">String a recortar.</param>        
            <returns>Devuelve una cadena sin el primer caracter.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.PopLast(System.String,System.Int32)">
            <summary>
            Le quita el último caracter a una cadena.
            </summary>
            <param name="s">String a recortar.</param>        
            <param name="numberOfCaracters">Cantidad de caracteres a recortar.</param>
            <returns>Devuelve una cadena sin el último caracter.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.PopFirst(System.String,System.Int32)">
            <summary>
            Le quita el primer caracter a la cadena.
            </summary>
            <param name="s">String a recortar.</param>        
            <param name="numberOfCaracters">Cantidad de caracteres a recortar.</param>
            <returns>Devuelve una cadena sin el primer caracter.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.ToLowerOrEmpty(System.String)">
            <summary>
            Pasa un string a minúsculas o a uno vacío si el string es null.
            </summary>        
        </member>
        <member name="T:Kriptok.Extensions.BitmapExtensions">
            <summary>
            Estas funcionalidades no deben ser utilizadas dentro del flujo de un juego, por su pobre performance.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.BitmapExtensions.ForEachPixel(System.Drawing.Bitmap,System.Action{System.Int32,System.Int32,System.Drawing.Color})">
            <summary>
            Ejecuta una acción sobre cada pixel del Bitmap. Esta funcionalidad es para edición de imágenes,
            pero es sumamente lenta y no debe ser implementada dentro del flujo de un juego.
            </summary>
            <param name="img">Bitmap a rotar.</param>
            <param name="action">Acción a realizar para las coordenadas X, Y.</param>
        </member>
        <member name="M:Kriptok.Extensions.BitmapExtensions.GetSortOrder(System.Drawing.Bitmap)">
            <summary>
            Obtiene el valor para ordenar texturas en editores de mapas.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.IEnumerableExtensions.OrderByRandom``1(System.Collections.Generic.IEnumerable{``0},System.Random)">
            <summary>
            Ordena un enumerado de forma aleatoria.
            </summary>
            <typeparam name="T">Tipo del enumerado.</typeparam>
            <param name="enumerable">Objeto enumerado.</param>
            <returns>Devuelve un nuevo enumerado ordenado aleatoriamente.</returns>
        </member>
        <member name="M:Kriptok.Extensions.IEnumerableExtensions.ToArray``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Transforma cualquier tipo de enumerable en un array.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.ImageExtensions.ToByteArray(System.Drawing.Image)">
            <summary>
            Convierte una imagen a un array de bytes de color.
            Dependiendo del formato de pixels indicados, cada pixel
            puede ocupar 3 o 4 elementos del array.
            </summary>                
        </member>
        <member name="M:Kriptok.Extensions.ImageExtensions.ToUInt32Array(System.Drawing.Image)">
            <summary>
            Convierte una imagen a un array de bytes de color.
            Dependiendo del formato de pixels indicados, cada pixel
            puede ocupar 3 o 4 elementos del array.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.Int32Extensions.ClampToByte(System.Int32)">
            <summary>
            Clampea un valor a los valores máximos y mínimos de un <see cref="T:System.Byte"/> y además lo castea.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.Int32Extensions.IsPowerOfTwo(System.Int32)">
            <summary>
            Indica si un número es potencia de 2.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.ObjectExtensions.In``1(``0,``0[])">
            <summary>
            Indica si el objeto se encuentra dentro de un arreglo de posibles valores.
            </summary>
            <typeparam name="TSourceType">Parámetro de tipo inferido.</typeparam>
            <param name="obj">Objeto a evaluar.</param>
            <param name="possibleValues">Arreglo de valores para evaluar.</param>
            <returns>Devuelve "true" si el objeto se encuentra en el arreglo, y "false" de lo contrario.</returns>
        </member>
        <member name="M:Kriptok.Extensions.ObjectExtensions.IfNotNull``2(``0,System.Func{``0,``1})">
            <summary>
            Este método es poco performante.
            
            NO USAR EN ALGORITMOS QUE REQUIEREN CORRER DE FORMA OPTIMA.
            </summary>        
        </member>
        <member name="F:Kriptok.Forms.MsDosForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.MsDosForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Kriptok.Forms.MsDosForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Kriptok.Forms.TiedForm">
            <summary>
            Representa un formulario utilizado en juegos cuyo gameplay no requiere
            estar desligado de la velocidad de renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.TiedForm.interval">
            <summary>
            Cantidad de milisegundos entre frame.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.TiedForm.sw">
            <summary>
            Utilizado para medir la duración de cada frame.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.TiedForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.TiedForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Kriptok.Forms.TiedForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Kriptok.Forms.WinConsts">
            <summary>
            Constant value was found in the "windows.h" header file.
            
            https://docs.microsoft.com/en-us/windows/win32/winmsg/about-messages-and-message-queues
            https://docs.microsoft.com/en-us/windows/win32/winmsg/window-notifications
            https://docs.microsoft.com/en-us/windows/win32/gdi/painting-and-drawing-messages
            
            https://wiki.winehq.org/List_Of_Windows_Messages
            </summary>
        </member>
        <member name="F:Kriptok.Forms.WinConsts.WM_WNT_CONVERTREQUESTEX">
            <summary>
            WM_UNICHAR / WM_KEYLAST
            </summary>
        </member>
        <member name="M:Kriptok.Forms.PixelatedForm.TransformFullScreen(System.Drawing.Graphics)">
            <summary>
            Aplica las transformaciones necesarias para renderizar en pantalla completa.
            </summary>        
        </member>
        <member name="M:Kriptok.Forms.PixelatedForm.GetFullScreenBlitter(Kriptok.Drawing.DirectBitmap)">
            <summary>
            Crea un objeto que sirve para transferir la información de un back-buffer a otro.
            </summary>        
        </member>
        <member name="M:Kriptok.Forms.PixelatedForm.GetHorizontalBlitter(Kriptok.Drawing.DirectBitmap,System.Int32,System.Int32)">
            <summary>
            Crea un objeto que sirve para transferir la información de un back-buffer a otro.
            </summary>        
        </member>
        <member name="M:Kriptok.Forms.PixelatedForm.GetBlitter(Kriptok.Drawing.DirectBitmap,System.Int32,System.Int32)">
            <summary>
            Crea un objeto que sirve para transferir la información de un back-buffer a otro.
            </summary>        
        </member>
        <member name="M:Kriptok.Forms.PixelatedForm.GetBuffer">
            <summary>
            Obtiene el buffer.
            </summary>        
        </member>
        <member name="F:Kriptok.Forms.PixelatedForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.PixelatedForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Kriptok.Forms.PixelatedForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Kriptok.Forms.FormBase">
            <summary>
            Clase base para todos los tipos de formulario del framework.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.FormBase.frameCounter">
            <summary>
            Contador de frames del juego.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.FormBase.ExitFlag">
            <summary>
            Indica si debe detener el juego completamente, y cerrarlo.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.FormBase.GameStartedTime">
            <summary>
            Utilizado en tiempo de desarrollo para 
            </summary>        
        </member>
        <member name="M:Kriptok.Forms.FormBase.#ctor">
            <summary>
            Para poder ser editado.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.FormBase.#ctor(Kriptok.Forms.FormInitArgs)">
            <summary>
            Crea una nueva instancia de la clase <see cref="T:Kriptok.Forms.FormBase"/>
            </summary>
        </member>
        <member name="M:Kriptok.Forms.FormBase.OnStart">
            <summary>
            Permite ejecutar código antes de empezar el gameloop.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.FormBase.GameLoop">
            <summary>
            Método que se ejecuta constantemente para actualizar la pantalla y lógica del juego.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.FormBase.Render(System.Drawing.Graphics,Kriptok.Core.ScreenRegion)">
            <summary>
            Método que debería ser abstracto en una clase abstracta.
            
            Pero los forms no pueden ser abstractos porque rompen el modo diseño.
            </summary>        
        </member>
        <member name="M:Kriptok.Forms.FormBase.OnDeactivate(System.EventArgs)">
            <summary>
            Este método se dispara cuando el formulario pierde foco.        
            </summary>        
        </member>
        <member name="F:Kriptok.Forms.FormBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.FormBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Kriptok.Forms.FormBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Kriptok.Forms.MainForm">
            <summary>
            Este formulario incorpora los conceptos de Div, como objetos/procesos simultáneos.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.MainForm.currentScene">
            <summary>
            Actividad que está corriendo actualmente.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.MainForm.nextScene">
            <summary>
            Actividad que se debe iniciar en le próximo frame, reemplazando a <see cref="F:Kriptok.Forms.MainForm.currentScene"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.MainForm.sceneOn">
            <summary>
            Objeto utilizado para lockear el cambio de escenas.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.MainForm.SetScene(Kriptok.Scenes.SceneBase)">
            <summary>
            Establece una nueva escena.
            </summary>        
        </member>
        <member name="M:Kriptok.Forms.MainForm.SendMessageToScene(System.Object)">
            <summary>
            Envía el menasje a la escena. El mensaje puede ser cualquier cosa.
            Pero depende de la escena saber interpretarlo en la implementación del método
            <see cref="M:Kriptok.Scenes.SceneBase.OnMessage(Kriptok.Scenes.SceneHandler,System.Object)"/>.
            </summary> 
        </member>
        <member name="F:Kriptok.Forms.MainForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.MainForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Kriptok.Forms.MainForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Tiles.Base.Tileset4Base">
            <summary>
            Representa un set de tiles de una sola capa de cuatro bytes.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Tiles.Base.TileBuilder">
            <summary>
            Funcionalidades de ayuda para generar Tiles.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.TileBuilder.MergeTiles(Kriptok.Maps.Tiles.FastTileData,System.Drawing.Size,Kriptok.Maps.Tiles.Map2DTileInfo[])">
            <summary>
            Este es el método principal, que une todas las capas y genera los nuevos tiles.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.TileBuilder.ResolveFlags(Kriptok.Maps.Tiles.TileFlagsEnum,Kriptok.Maps.Tiles.TileFlagsEnum)">
            <summary>
            Resuelve los flags que va a tener el nuevo "tile" generado con los tiles de las diferentes capas.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.TileBuilder.GetTile(System.Drawing.Size,Kriptok.Drawing.FastBitmap,System.Int32,System.Int32)">
            <summary>
            Este método crea un tile "básico", es decir, extrae un cuadrado del tamaño indicado por parámetro
            de la posición indicada, sin animación, ni nada especial.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.TileBuilder.BuildTile(System.Drawing.Size,Kriptok.Drawing.FastBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Recordar que los tiles se arman al revés.
            </summary>               
        </member>
        <member name="T:Kriptok.Maps.Tiles.Base.ITileCanvas">
            <summary>
            Interfaz que presentan los objetos que pueden servir ocmo "lienzo" para dibujar tiles.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.ITileCanvas.BlitXY(Kriptok.Drawing.FastBitmap,System.Int32,System.Int32)">
            <summary>
            Copia los bites de un tile al objeto actual en la posición indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.ITileCanvas.BlitX0(Kriptok.Drawing.FastBitmap,System.Int32)">
            <summary>
            Copia los bites de un tile al objeto actual en la posición X indicada, y en Y = 0.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Tiles.Base.Tileset121Base">
            <summary>
            Representa un set de tiles tres capas, que utiliza un byte para la primera, uno para la última y dos para la del medio.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Tiles.Base.Tileset22Base">
            <summary>
            Representa un set de tiles con dos capas de dos bytes cada una.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Tiles.Base.Tileset112Base">
            <summary>
            Representa un set de tiles tres capas, que utiliza un byte para la primera y la segunda y dos para la tercera.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.Tileset112Base.Read(Kriptok.Maps.Tiles.Editor.TileMapX)">
            <summary>
            Lee la información de un mapa, y genera un arreglo fácil de leer y transformar
            en otras estructuras.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.Tileset112Base.Read(Kriptok.Drawing.FastBitmap)">
            <summary>
            Lee la información de un mapa, y genera un arreglo fácil de leer y transformar
            en otras estructuras.
            </summary>        
        </member>
        <member name="P:Kriptok.Maps.Tiles.Base.Tileset112Base.TiledMapDataBase`1.Size">
            <summary>
            Obtiene el tamaño del mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Tiles.Base.Tileset112Base.Tile112">
            <summary>
            Representa un tile con dos capas de un byte y una capa de dos bytes.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Tiles.Base.Tileset1111Base">
            <summary>
            Representa un set de tiles con cuatro capas, que utiliza un byte para cada capa.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Tiles.Base.ITile">
            <summary>
            Interfaz básica para un Tile de un mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.ITile.TileSample(System.Int32,System.Int32)">
            <summary>
            Obtiene el color correspondiente al pixel indicado por sus coordenadas, 
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.ITile.BlitOn(Kriptok.Maps.Tiles.Base.ITileCanvas,System.Int32,System.Int32)">
            <summary>
            Dibuja el tile en el bitmap indicado por parámetro en las coordenadas indicadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.ITile.BlitOnX0(Kriptok.Maps.Tiles.Base.ITileCanvas,System.Int32)">
            <summary>
            Dibuja el tile en el bitmap indicado por parámetro en la coordenada X indicada
            y en Y = 0.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.ITile.GetFlags">
            <summary>
            Obtiene los flags (metadata) del tile.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.ITile.Refresh(System.Int32)">
            <summary>
            Implementación del comportamiento de tiles animados.
            </summary>        
        </member>
        <member name="P:Kriptok.Maps.Tiles.Base.ITile.Animated">
            <summary>
            Indica si el tile es animado o no.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Tiles.Base.TilesetBase">
            <summary>
            Representa un mapa en dos dimensiones construido con tiles.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.Base.TilesetBase.TileSize">
            <summary>
            Tamaño de los tiles.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Tiles.Base.TilesetBase.Layers">
            <summary>
            Capas definidas para el tileset.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.TilesetBase.#ctor(System.Int32,System.Int32)">
            <summary>
            Devulve una nueva instancia de la clase <see cref="T:Kriptok.Maps.Tiles.Map2DAutoTileInfo"/>.
            </summary>      
        </member>
        <member name="P:Kriptok.Maps.Tiles.Base.TilesetBase.Assembly">
            <summary>
            Obtiene el ensamblado en el que está definido el tileset.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.TilesetBase.CreateAnimatedTile(Kriptok.Drawing.FastBitmap,Kriptok.Drawing.Vector2I[])">
            <summary>
            Crea un tile animado para este tileset.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.TilesetBase.GetBasicTiles(Kriptok.Drawing.FastBitmap,System.Func{System.Int32,System.Int32,System.Boolean})">
            <summary>
            Agrega una lista de tiles básicos, es decir, sin animación ni comportamiento alguno.
            Recorre todos los tiles de la imagen, y si cumplen con la condición indicada, los agrega.
            </summary>
            <param name="bmp">Imagen con los tiles.</param>
            <param name="func">Función que determina si debe agregar los tiles o no.</param>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.TilesetBase.GetBasicTiles(System.Drawing.Size,Kriptok.Drawing.FastBitmap,System.Func{System.Int32,System.Int32,System.Boolean})">
            <summary>
            Agrega una lista de tiles básicos, es decir, sin animación ni comportamiento alguno.
            Recorre todos los tiles de la imagen, y si cumplen con la condición indicada, los agrega.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.TilesetBase.GetTile(Kriptok.Drawing.FastBitmap,System.Int32,System.Int32)">
            <summary>
            Este método crea un tile "básico", es decir, extrae un cuadrado del tamaño indicado en <see cref="F:Kriptok.Maps.Tiles.Base.TilesetBase.TileSize"/>
            de la posición indicada, sin animación, ni nada especial.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.TilesetBase.BuildTile(Kriptok.Drawing.FastBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Recordar que los tiles se arman al revés.
            </summary>               
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.TilesetBase.GetSampleTexture(System.Int32,System.Int32,Kriptok.Views.Shapes.TextureOptions)">
            <summary>
            Obtiene una textura en base a un tile de un <see cref="T:Kriptok.Maps.Tiles.Base.TilesetBase"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Base.TilesetBase.RetrieveAll">
            <summary>
            Obtiene todos los <see cref="T:Kriptok.Maps.Tiles.Base.TilesetBase"/> que haya en los ensamblados cargados en el dominio.        
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.Tiles.TileMapInfo`1">
            <summary>
            Representa la información de un mapa de tiles, antes de ser procesada para crear el mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMapInfo`1.#ctor(System.Reflection.Assembly,System.String)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Maps.Tiles.TileMapInfo"/> en base al <see cref="T:Kriptok.Maps.Tiles.Editor.TileMapX"/>
            indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMapInfo`1.#ctor(Kriptok.Maps.Tiles.Editor.TileMapX)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Maps.Tiles.TileMapInfo"/> en base al <see cref="T:Kriptok.Maps.Tiles.Editor.TileMapX"/>
            indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Tiles.TileMapInfo">
            <summary>
            Representa la información de un mapa de tiles, antes de ser procesada para crear el mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileMapInfo.objects">
            <summary>
            Objetos a crear en el mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMapInfo.#ctor(Kriptok.Maps.Tiles.Editor.TileMapX,Kriptok.Maps.Tiles.Base.TilesetBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Maps.Tiles.TileMapInfo"/> en base al <see cref="T:Kriptok.Maps.Tiles.Editor.TileMapX"/>
            indicado por parámetro.
            </summary>        
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileMapInfo.Bitmap">
            <summary>
            Bits del mapa de tiles.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Tiles.TileMapInfo.Tileset">
            <summary>
            Tileset a utilizar para generar el mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Tiles.TileMapInfo.InfiniteScroll">
            <summary>
            Indica si el mapa se repite infinitamente horizontal y verticalmente.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Tiles.TileMapInfo.Size">
            <summary>
            Tamaño (en tiles) del mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Tiles.TileMapInfo.TileSize">
            <summary>
            Obtiene el tamaño de los tiles del mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Tiles.TileMapInfo.FullSize">
            <summary>
            Tamaño (en pixels) del mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Tiles.TileMapInfo.Layers">
            <summary>
            Cantidad de "capas" que tiene el mapa (entre 1 y 4).
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Tiles.TileMapInfo.Item(System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene o establece el valor del tile en las coordenadas y la capa
            indicadas por parámetro.
            </summary>
            <param name="layerIndex">Capa sobre la cual se desea operar.</param>
            <param name="x">Coordenada X del tile.</param>
            <param name="y">Coordenada Y del tile.</param>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMapInfo.CreateTiledMap">
            <summary>
            Instancia el mapa para que pueda ser renderizado.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMapInfo.GetBaseAndOverlayLayers">
            <summary>
            Genera y retorna dos mapas de tiles, uno para el mapa basa, y otro para 
            la "capa superior" (ver <see cref="F:Kriptok.Maps.Tiles.TileFlagsEnum.OverlayLayer"/>).
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMapInfo.CreateEntities">
            <summary>
            Genera instancias de los objetos registrados en el mapa.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.Tiles.TileHelper">
            <summary>
            Funcionalidades de ayuda para tilear coordenadas.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileHelper.TilePositive(System.Int32,System.Int32)">
            <summary>
            Ubica una coordenada positiva entre el 0 y el máximo.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileHelper.Tile(System.Int32,System.Int32)">
            <summary>
            Tilea una coordenada entre 0 y el máximo indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileHelper.ChessPattern(System.Int32,System.Int32)">
            <summary>
            Devuelve el valor booleano de una coordenada, siguiendo el patrón
            de un tablero de ajedrez, con el primer casillero en "<see cref="!:true"/>".
            </summary>        
        </member>
        <member name="F:Kriptok.Maps.Tiles.TilesetLayer.maxTiles">
            <summary>
            Cantidad máxima de tiles que puede tener esta capa.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TilesetLayer.Index">
            <summary>
            Indica el índice de la capa.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TilesetLayer.AddEmptyTile">
            <summary>
            Agrega un tile vacío para llenar espacios.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TilesetLayer.AddRange(Kriptok.Maps.Tiles.Map2DTileInfo[])">
            <summary>
            Agrega una lista de tiles.
            </summary>
            <param name="newTiles">Nuevos tiles a agregar.</param>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TilesetLayer.Add(Kriptok.Maps.Tiles.Map2DTileInfo)">
            <summary>
            Agrega un nuevo tile.
            </summary>
            <param name="newTile">Nuevo tile a agregar.</param>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TilesetLayer.GetFlags(System.Int32,System.UInt32[])">
            <summary>
            Obtiene los flags de compatibilidad con los tiles de alrededor para saber qué tile tiene que mostrar.
            </summary>
            <param name="currentValue">Id del tile en el que estoy parado, presumiblemente <see cref="!:Map2DAutoTileInfo>"/></param>
            <param name="values">Valores de los 8 tiles de los alrededores, ordenados de izquierda a derecha y 
            de arriba hacia abajo.</param>
            <returns>Devuelve los flags con los que debe dibujarse el tile.</returns>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TilesetLayer.AddTileCompatibility(System.Int32,System.Int32,System.Boolean)">
            <summary>        
            Para tiles complejos, la compatibilidad permite a un tile adherirse a otro aunque no se trate
            del mismo tile.
            </summary>     
            <param name="from">Id del tile que debe adherirse.</param>
            <param name="to">Id del tile al que se debe adherir.</param>
            <param name="bidirectional">Indica si la relación es bidireccional. Esto genera que se
            agreguen dos compatibilidades en lugar de una:
            1) From => To
            2) To => From        
            </param>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TilesetLayer.Add(System.Func{Kriptok.Maps.Tiles.AutoTileFlagsEnum,Kriptok.Maps.Tiles.Map2DTileInfo})">
            <summary>
            Agrega un nuevo tile.
            </summary>
            <param name="newTile">Nuevo tile a agregar.</param>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TilesetLayer.SetEmptyTile(System.Int32)">
            <summary>
            Establece el tile con el id indicado com un tile vacío. No "nulo", porque en ese
            caso no podría ser seleccionable para edición.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.TilesetLayer.SetLastTileEmpty">
            <summary>
            Establece como tile vacío el último tile de la capa.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TilesetLayer.AddBasicTiles(Kriptok.Drawing.FastBitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Agrega una serie de "tiles básicos".
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileAnimation.animationIndexF">
            <summary>
            Indica el tile de animación, en formato contínuo.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileAnimation.animationIndex">
            <summary>
            Índice del tile de animación a utilizar.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileAnimation.Speed">
            <summary>
            Velocidad a la cual se deben actualizar los tiles animados del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileAnimation.IncCheck(System.Int32@)">
            <summary>
            Incrementa la animación e indica si se modificó.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.Tiles.Editor.MapEditorTilesetConfig">
            <summary>
            Configuraciones para el editor de mapas bidimensioanles.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Tiles.Editor.MapEditorTilesetConfig.PaletteTilesCount">
            <summary>
            Cantidad de Tiles que se pueden ver en la paleta de edición.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Tiles.Editor.MapEditorTilesetConfig.PaletteTilesScale">
            <summary>
            Escala a la cual se deben renderizar los Tiles en la paleta de edición.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Tiles.Editor.TileMapX">
            <summary>
            Clase a la que se deserializan los mapas de tiles generados con el editor.
            </summary>    
        </member>
        <member name="M:Kriptok.Maps.Tiles.Editor.TileMapX.#ctor">
            <summary>
            Constructor necesario para poder deserializar desde XML.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Tiles.Editor.TileMapX.Width">
            <summary>
            Ancho del mapa en tiles.
            </summary>        
        </member>
        <member name="P:Kriptok.Maps.Tiles.Editor.TileMapX.Height">
            <summary>
            Alto del mapa en tiles.
            </summary>        
        </member>
        <member name="P:Kriptok.Maps.Tiles.Editor.TileMapX.InfiniteScroll">
            <summary>
            Indica si el mapa debe tener scroll infinito en vertical y horizontal.
            </summary>        
        </member>
        <member name="P:Kriptok.Maps.Tiles.Editor.TileMapX.MapData">
            <summary>
            Base64 con los datos de un <see cref="T:System.Drawing.Bitmap"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Maps.Tiles.Editor.TileMapX.Data">
            <summary>
            Base64 con los datos crudos del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Editor.TileMapX.Load">
            <summary>
            Genera un <see cref="T:Kriptok.Drawing.FastBitmap"/> con los colores correspondientes a los datos
            del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Editor.TileMapX.Load(System.String)">
            <summary>
            Carga un mapa desde un archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Editor.TileMapX.Load(System.Reflection.Assembly,System.String)">
            <summary>
            Carga un mapa desde un recurso.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Editor.TileMapX.Load(Kriptok.Common.Resource)">
            <summary>
            Carga un mapa desde un recurso.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.Tiles.Editor.TileMapX.TileMapXTiles">
            <summary>
            Datos de los tiles del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Editor.TileMapX.TileMapXTiles.#ctor">
            <summary>
            Constructor necesario para poder deserializar desde XML.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.FastTileData.ClearFlagsForLayer(System.Int32)">
            <summary>
            Limpia los flags para el layer indicado por el índice correspondiente.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.Tiles.AutoTileFlagsEnum">
            <summary>
            +----+----+-----+
            |  1 |  2 |   4 |
            +----+----+-----+
            |  8 |    |  16 |
            +----+----+-----+
            | 32 | 64 | 128 |
            +----+----+-----+
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Tiles.AutoTileFlagsEnumHelper">
            <summary>
            Para definir completamente un tile complejo, hay que plantear los siguientes casos:
            
            Un item solo:    Una cruz:      Un cuadrado:   Las "Ls":     Last "Ts":   Las "boquitas":
                                                           
            A                    B          I J K          R-  -S          -V-        \|    |/  \|/  \|/
                                 C          L M N          |    |        |  |  |      -0-  -1-  -2-  -3-
                             D E F G        O P Q                        W-   -X      /|\  /|\  /|    |\
                                 H                         |    |        |  |  |
                                                           T-  -U          -Y-   
            ((int)ComplexTileFlagsEnumHelper.A).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.B).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.C).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.D).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.E).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.F).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.G).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.H).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.I).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.J).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.K).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.L).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.M).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.N).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.O).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.P).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.Q).ToBin(8)
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DAutoTileInfo.GetTile(Kriptok.Maps.Tiles.AutoTileFlagsEnum)">
            <summary>
            Obtiene el tile correspondiente según los tiles que hay alrededor.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DAutoTileInfo.ForEach(System.Action{Kriptok.Maps.Tiles.AutoTileFlagsEnum,Kriptok.Maps.Tiles.Map2DTileInfo})">
            <summary>
            Permite ejecutar una acción por cada uno de los sub-tiles de
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DAutoTileInfo.Add``1(Kriptok.Maps.TexsetBase{``0},System.Int32,System.Collections.Generic.IDictionary{System.Int32,``0},System.Int32[],Kriptok.Views.Shapes.TextureOptions)">
            <summary>
            Agrega el tile como textura a la colección.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DAutoTileInfo.AddExcluding``1(Kriptok.Maps.TexsetBase{``0},System.Int32,System.Collections.Generic.IDictionary{System.Int32,``0},System.Int32[],Kriptok.Views.Shapes.TextureOptions)">
            <summary>
            Agrega el tile como textura a la colección.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DAutoTileInfo.AddFlag(Kriptok.Maps.Tiles.TileFlagsEnum)">
            <summary>
            Agrega el flag a todos los tiles.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.Tiles.Map2DTile">
            <summary>
            Esta clase representa un tile común en un mapa bidimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.Map2DTile.Id">
            <summary>
            Id único del objeto.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.Map2DTile.currentTile">
            <summary>
            El tile que tiene que renderizar ahora.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.Map2DTile.Flags">
            <summary>
            Los flags que indican cómo se comporta.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.Map2DTile.tiles">
            <summary>
            Lista de tiles que puede renderizar.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Tiles.Map2DTile.Animated">
            <summary>
            Indica si el tile es animado.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTile.Kriptok#Maps#Tiles#Base#ITile#Refresh(System.Int32)">
            <summary>
            Actualiza el tile a renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTile.Kriptok#Maps#Tiles#Base#ITile#TileSample(System.Int32,System.Int32)">
            <summary>
            Obtiene el color correspondiente al pixel indicado por sus coordenadas, 
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTile.Kriptok#Maps#Tiles#Base#ITile#BlitOn(Kriptok.Maps.Tiles.Base.ITileCanvas,System.Int32,System.Int32)">
            <summary>
            Dibuja el tile actual en el <see cref="T:Kriptok.Drawing.FastBitmap"/> indicado por parámetro en la posición indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTile.ToAffineTexture(Kriptok.Views.Shapes.TextureOptions)">
            <summary>
            Transforma el tile en una textura.
            </summary>        
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileMap.TileCollection.MapTiles">
            <summary>
            Todos los tiles del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileMap.TileCollection.DifferentTiles">
            <summary>
            Tiles diferentes.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileMap.Tileset">
            <summary>
            <see cref="T:Kriptok.Maps.Tiles.Base.TilesetBase"/> asociado al mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileMap.differentTiles">
            <summary>
            Lista de todos los tiles diferentes que se están renderizando.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileMap.animatedTiles">
            <summary>
            Listado de los tiles animados.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileMap.tileWidth">
            <summary>
            Ancho del tile.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileMap.tileHeight">
            <summary>
            Alto del tile.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileMap.InfiniteScroll">
            <summary>
            Indica si se trata de un mapa con scroll infinito en los dos ejes.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileMap.TileCount">
            <summary>
            Tamaño del mapa en tiles.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileMap.TileArray">
            <summary>
            Lista de todos los tiles del mapa en el momento actual.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMap.IsEmpty">
            <summary>
            Indica si el mapa está vacío (todos sus tiles son null).
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMap.AllTilesFilter(Kriptok.Maps.Tiles.Map2DTileInfo)">
            <summary>
            No filtra tiles de ningún tipo.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMap.BaseTilesFilter(Kriptok.Maps.Tiles.Map2DTileInfo)">
            <summary>
            Obtiene los tiles de la capa base.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMap.ViewTilesFilter(Kriptok.Maps.Tiles.Map2DTileInfo)">
            <summary>
            Obtiene los tiles correspondientes a la capa de objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMap.OverlayTilesFilter(Kriptok.Maps.Tiles.Map2DTileInfo)">
            <summary>
            Obtiene los tiles correspondientes a la capa de objeto.
            </summary>        
        </member>
        <member name="P:Kriptok.Maps.Tiles.TileMap.FullSize">
            <summary>
            Devuelve el tamaño total del mapa. Es decir: (cantidad de tiles) x (tamaño de tiles).
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Tiles.TileMap.TileSize">
            <summary>
            Devuelve o establece el tamaño de los tiles para el mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMap.GetTileArray(Kriptok.Drawing.FastBitmap,Kriptok.Maps.Tiles.Base.TilesetBase,System.Boolean,System.Func{Kriptok.Maps.Tiles.Map2DTileInfo,System.Boolean})">
            <summary>
            Método que se encarga de armar el array de tiles para después dibujar punto por punto.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMap.ToFastBitmap">
            <summary>
            Genera un <see cref="T:Kriptok.Drawing.FastBitmap"/> en base al mapa. Este método obviamente omite tiles animados.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMap.IsValid(System.UInt32,System.Drawing.Size,System.Int32,System.Int32,System.Func{System.UInt32})">
            <summary>
            Verifica que al tratar de obtener el valor de una casilla cercana, esté dentro de los límites del mapa.
            </summary>
            <param name="currentValue">Valor de la casilla actual.</param>
            <param name="size">Tamaño del mapa.</param>
            <param name="x">Coordnada X de la casilla que se quiere obtener.</param>
            <param name="y">Coordenada Y de la casilla que se quiere obtener.</param>
            <param name="resolve">Función a ejecutar en caso de que las coordenadas sean válidas.</param>
            <returns>Devuelve el valor de la casilla indicada por las coordenadas X, Y (en caso de ser válidas).
            En caso de ser inválidas (estar fuera de los límites del mapa, dados por el parámetro "size", devuelve
            el color indicado en el primer parámetro.</returns>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMap.CreateBySize(System.Drawing.Bitmap)">
            <summary>
            Crea un tile del tamaño correspondiente a las medidas del bitpap.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.TileMap.GetTileFlags(System.Single,System.Single)">
            <summary>
            Obtiene los flags del tile que se encuentra en las coordenadas indicadas por parámetro.
            
            Las coordenadas no deben estar previamente divididas por la altura/anchura de los tiles.
            </summary>        
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileFlagsEnum.BlockedFromTop">
            <summary>
            Indica que el tile no es accesible desde arriba.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileFlagsEnum.BlockedFromLeft">
            <summary>
            Indica que el tile no es accesible desde la izquierda.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileFlagsEnum.BlockedFromBottom">
            <summary>
            Indica que el tile no es accesible desde abajo.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileFlagsEnum.BlockedFromRight">
            <summary>
            Indica que el tile no es accesible desde la derecha.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileFlagsEnum.Blocked">
            <summary>
            Indica que el tile no es accesible desde ninguna dirección.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileFlagsEnum.ViewLayer">
            <summary>
            Este flag indica que el tile se debe dibujar "por encima" del personaje. Pero manteniendo esta lógica
            de que la profundidad depende de la coordenada Y en pantalla. 
            
            Es decir, si un personaje tiene un Y menor o igual al del tile, el tile se dibujará encima, y 
            caso contrario, el tile se dibujará abajo.
            
            La forma de resolver esto, es obviamente generarlo como una vista en el mapa. Por eso se llama
            "<see cref="F:Kriptok.Maps.Tiles.TileFlagsEnum.ViewLayer"/>".
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileFlagsEnum.Override">
            <summary>
            Este flag indica que los flags que se aplican al tile inferior dejan de ser tomados en cuenta
            y sólo se consideran los que están en este tile.
            
            Por ejemplo, si un tile de agua está bloqueado, pero se requiere un tile de "puente" que esté
            por encima, se debe utilizar este tile para indicarle al "puente" que debe anular el
            bloqueo de caminar sobre el agua.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.TileFlagsEnum.OverlayLayer">
            <summary>
            Indica que en el mapa en dos dimensiones, esta capa debe renderizarse por encima de todos los objetos.
            Es una "capa extra". Sólo funciona en modo Scroll.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Tiles.Map2DTileInfo">
            <summary>
            Representa un tile simple en un mapa 2D.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.Map2DTileInfo.Empty">
            <summary>
            Tile vacío (sin información gráfica).
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Tiles.Map2DTileInfo.bitmaps">
            <summary>
            Lista de bitmaps rápidos generados. 
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.#ctor(Kriptok.Maps.Tiles.TileFlagsEnum,Kriptok.Drawing.FastBitmap[])">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Maps.Tiles.Map2DTileInfo"/>
            </summary>
            <param name="flags">Flags del tile.</param>
            <param name="bitmaps">Lista de bitmaps que componen el tile. Si
            es un tile simple (sin animación), debe recibir sólo un bitmap.</param>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.#ctor(Kriptok.Drawing.FastBitmap[])">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Maps.Tiles.Map2DTileInfo"/>
            </summary>
            <param name="bitmaps">Lista de bitmaps que componen el tile. Si
            es un tile simple (sin animación), debe recibir sólo un bitmap.</param>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.GetThumbnail">
            <summary>
            Obtiene la primera imagen (o única si corresponde) para ser utilizada por
            el editor de mapas.
            </summary>
            <returns>Devuelve la primera imagen (o única si corresponde) para ser utilizada por
            el editor de mapas.</returns>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.GetImage(System.Int32)">
            <summary>
            Obtiene la imagen correspondiente para dibujar según el índice de animación
            para tiles animados.
            </summary>
            <param name="animationIndex">Índice de animación.</param>
            <returns>Devuelve la imagen correspondiente para dibujar según el índice de animación
            para tiles animados.</returns>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.ToTile">
            <summary>
            Este método transforma el <see cref="T:Kriptok.Maps.Tiles.Map2DTileInfo"/> en algo que entienda el renderizador, es decir,
            un <see cref="T:Kriptok.Maps.Tiles.Map2DTile"/>, que es lo que eventualmente se renderiza.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.GetImages">
            <summary>
            Obtiene todas las imágenes asociadas al tile. Se utiliza en el momento en que
            se van a generar los tiles para renderizar.
            </summary>
            <returns>Devuelve todas las imágenes asociadas al tile. Se utiliza en el momento en que
            se van a generar los tiles para renderizar.</returns>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.GetImageCount">
            <summary>
            Para los tiles animados, obtiene la cantidad de imágenes sobre las cuales iterar.
            </summary>
            <returns>Devuelve la cantidad de imágenes sobre las cuales iterar, de tratarse
            de un tile animado.</returns>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.Dispose">
            <summary>
            Libera toda la memoria y recursos asociados al tile.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.MergeTile(System.Drawing.Graphics,System.Int32)">
            <summary>
            Cuando hay un tile superpuesto, este es el método que se utiliza para dibujar 
            un tile sobre el otro.
            </summary>
            <param name="g">Objeto de tipo Graphics sobre el que se debe dibujar el tile.</param>
            <param name="animationIndex">Índice de animación que debe dibujarse (para tiles animados).</param>
        </member>
        <member name="F:Kriptok.Maps.Tiles.Map2DTileInfo.Flags">
            <summary>
            Indica el comportamiento del tile.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.Block">
            <summary>
            Indica que el tile es completamente inaccesible desde cualquier dirección.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.AddFlag(Kriptok.Maps.Tiles.TileFlagsEnum)">
            <summary>
            Agrega un flag al tile en cuestión.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.GetTile(System.Func{Kriptok.Maps.Tiles.AutoTileFlagsEnum})">
            <summary>
            Este método resuelve si se al obtener un tile se trata de un tile complejo (y resuelve
            cuál de los subtiles tiene que ser presentado), o si se trata de un tile común,
            simplemente lo devuelve.
            </summary>        
            <param name="getFlags">Función que obtiene los flags correspondientes al tile, 
            en caso de tratarse de un tile complejo.</param>
            <returns>Devuelve el subtile correspondiente a los flags si se trata de un tile complejo,
            o el tile en sí, si se trata de un tile simple.</returns>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.GetMiddleTile">
            <summary>
            Obtiene el tile correspondiente a un tile rodeado de sí mismo o de un tile compatible.
            Para los tiles básicos, es el mismo tile. Para los auto-tiles, el tile central., 
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.GetTile(Kriptok.Maps.Tiles.AutoTileFlagsEnum)">
            <summary>
            Este método resuelve si se al obtener un tile se trata de un tile complejo (y resuelve
            cuál de los subtiles tiene que ser presentado), o si se trata de un tile común,
            simplemente lo devuelve.
            </summary>        
            <param name="flags">Flags correspondientes al tile, en caso de tratarse de un tile complejo.</param>
            <returns>Devuelve el subtile correspondiente a los flags si se trata de un tile complejo,
            o el tile en sí, si se trata de un tile simple.</returns>
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.AddExcluding``1(Kriptok.Maps.TexsetBase{``0},System.Int32,System.Collections.Generic.IDictionary{System.Int32,``0},System.Int32[],Kriptok.Views.Shapes.TextureOptions)">
            <summary>
            Agrega el tile como textura a la colección.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.Add``1(Kriptok.Maps.TexsetBase{``0},System.Int32,System.Collections.Generic.IDictionary{System.Int32,``0},System.Int32[],Kriptok.Views.Shapes.TextureOptions)">
            <summary>
            Agrega el tile como textura a la colección.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Tiles.Map2DTileInfo.IsEmpty">
            <summary>
            Indica si se trata de un casillero vacío.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.Grid.TileSquare">
            <summary>
            Esta estructura se utiliza para validar, en un proceso de búsqueda de caminos, qué objetos del mapa
            deben ser tomados en cuenta a la hora de calcular por dónde moverse.
            
            Esto podría ser asociado, por ejemplo, con la "visión del personaje". Un personaje intentaría
            esquivar obstáculos que se encuentren cerca al buscar caminos, pero cuando están muy lejos,
            no los estaría viendo.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.TileSquare.center">
            <summary>
            Punto central a partir del cual se calculará si los demás vértices están dentro de la distancia
            indicada para ser tomados en cuenta.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.TileSquare.distance">
            <summary>
            Máxima distancia a la cual pueden estar los objetos para ser tomados en cuenta.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Grid.TileSquare.#ctor(Kriptok.Drawing.Vector2I,System.UInt16)">
            <summary>
            Devuelve una nueva instancia de la estructura <see cref="T:Kriptok.Maps.Grid.TileSquare"/>
            </summary>
            <param name="center">Punto central a partir del cual se calculará si los demás vértices están dentro de la distancia
            indicada para ser tomados en cuenta.</param>
            <param name="distance">Máxima distancia a la cual pueden estar los objetos para ser tomados en cuenta.</param>
        </member>
        <member name="M:Kriptok.Maps.Grid.TileSquare.Contains(Kriptok.Drawing.Vector2I)">
            <summary>
            Indica si el vértice indicado por parámetro está dentro de los límites del objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Grid.TileSquare.ValidateSight">
            <summary>
            Indica si se debe validar la distancia a la que se encuentran los objetos.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.Grid.MapGridGeneratorAddWallsArgs`1">
            <summary>
            Grupo de parámetros utilizados para crear paredes en un generador de mapas.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Grid.MapGridGeneratorAddWallsArgs`1.Cell">
            <summary>
            Tiene la celda que se está leyendo actualmente.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Grid.MapGridGeneratorAddWallsArgs`1.Height">
            <summary>
            Altura de la celda.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Grid.MapGridGeneratorAddWallsArgs`1.CellInFront">
            <summary>
            Tiene la celda que está "frente" a la que se está leyendo actualmente.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Grid.MapGridGeneratorAddWallsArgs`1.Side">
            <summary>
            Indica qué lado de la celda se está generando.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Grid.MapGridGeneratorAddWallsArgs`1.Coords">
            <summary>
            Coordenadas de la celda;
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Grid.MapGridPanelSideEnum">
            <summary>
            Este enumerado se utiliza para saber qué panel se está generando al momento
            crear el mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.MapGridGeneratorBase`1.IgnoreExternalBounds">
            <summary>
            Indica si debe remover los bordes "externos" del mapa. Es decir, las paredes que se construyen
            sobre X = 0, Y = 0, X = Width, Y = Height.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGridGeneratorBase`1.LoadMap(`0[][],System.Int32,System.Int32,System.Collections.Generic.IList{Kriptok.Entities.Base.EntityBase})">
            <summary>
            Carga el mapa para ser renderizado.
            </summary>
            <param name="map">Mapa en cuestión.</param>
            <param name="h">Altura de las paredes a renderizar.</param>
            <param name="tileSize">Ancho y alto de las casillas a renderizar.</param>
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGridGeneratorBase`1.GetCell(`0[][],System.Int32,System.Int32)">
            <summary>
            Obtiene la celda en las coordenadas indicadas.
            En caso de que sea fuera del mapa, devuelve null.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.Grid.MapGridGeneratorBaseExtensions">
            <summary>
            Funcionalidades extendidas de la clase <see cref="T:Kriptok.Maps.Grid.MapGridGeneratorBase`1"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGridGeneratorBaseExtensions.LoadMap``1(Kriptok.Maps.Grid.MapGridGeneratorBase{``0},``0[][],System.Int32,System.Int32,System.Action{Kriptok.Entities.Base.EntityBase[]})">
            <summary>
            Carga el mapa y permite realizar una acción sobre las listas resultantes.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.MapGridValidationContext.on">
            <summary>
            Para lockear lo que haga falta.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGridValidationContext.Valid(Kriptok.Entities.Base.EntityBase,System.Single,System.Single,System.Single)">
            <summary>
            Valida si el objeto con la determinada posición y radio no se encuentra intersectado con
            las paredes o casilleros ocupados.
            </summary>
            <param name="obj">Utilizado para validar que el objeto no se choque consigo mismo.</param>        
            <param name="x">Coordenadas del objeto en el eje X pero tomando como tamaño de los tiles el valor 1.</param>
            <param name="y">Coordenadas del objeto en el eje Y pero tomando como tamaño de los tiles el valor 1.</param>
            <param name="radius">Radio del objeto pero tomando como tamaño de los tiles el valor 1.</param>
            <returns>Devuelve <see cref="!:true"/> si el objeto puede quedars en esa posición, 
            o false si se encuentra en una posición inválida.</returns>
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGridValidationContext.Valid(Kriptok.Entities.Base.EntityBase,System.Single,System.Single)">
            <summary>
            Valida si el objeto con la determinada posición y radio no se encuentra intersectado con
            las paredes o casilleros ocupados.
            </summary>
            <param name="obj">Utilizado para validar que el objeto no se choque consigo mismo.</param>        
            <param name="x">Coordenadas del objeto en el eje X pero tomando como tamaño de los tiles el valor 1.</param>
            <param name="y">Coordenadas del objeto en el eje Y pero tomando como tamaño de los tiles el valor 1.</param>        
            <returns>Devuelve <see cref="!:true"/> si el objeto puede quedars en esa posición, 
            o false si se encuentra en una posición inválida.</returns>
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGridValidationContext.VerifyOccupation(Kriptok.Drawing.Vector2I[],Kriptok.Drawing.Vector2I[])">
            <summary>
            Valida si alguno de los casilleros requeridos por un determinado objeto para establecerse en una
            posición está ocupado.
            </summary>
            <param name="required">Casilleros requeridos.</param>
            <param name="occupied">Casilleros ocupados.</param>        
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGridValidationContext.RefreshAliveObjects(System.Int32)">
            <summary>
            Obtiene y devuelve los objetos que ocupan hoy la grilla.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGridValidationContext.ObjectOcuppation(System.Int32)">
            <summary>
            Obtiene y devuelve los objetos que ocupan hoy la grilla.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGridValidationContext.ObjectReservations(System.Int32)">
            <summary>
            Obtiene y devuelve los objetos que reservan hoy en la grilla.
            </summary>        
        </member>
        <member name="F:Kriptok.Maps.Grid.PathFindArguments.EntityId">
            <summary>
            Objeto principal que está haciendo la consulta, para no chocarse consigo mismo.
            Si es cero, se ignora.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.PathFindArguments.SightDistance">
            <summary>
            Este círculo representa la "visión" del personaje. Debe ser un círculo centrado en las coordenadas
            XY del objeto, con el radio equivalente a su "visión".
            
            Este círculo es utilizado para saber cuáles de los objetos dentro de la grilla son "visibles", y por
            tanto tomados en cuenta a la hora de trazar el camino.
            
            También toma en cuenta las reservaciones de casilleros por otros objetos.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.PathFindArguments.From">
            <summary>
            Vector donde inicia la búsqueda.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.PathFindArguments.To">
            <summary>
            Vector donde finaliza la búsqueda.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.PathFindArguments.PathFindType">
            <summary>
            Algoritmo a utilizar.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Grid.PathFindArguments.NoPath">
            <summary>
            Indica si no puede haber un camino ya que el inicio y el fin son el mismo punto.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.Grid.TiledMapGrid">
            <summary>
            Clase utilizada para representar un mapa tipo cuadrícula en un juego.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.TiledMapGrid.tileInverseWidth">
            <summary>
            Ancho de los tiles.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.TiledMapGrid.tileInverseHeight">
            <summary>
            Alto de los tiles.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Grid.TiledMapGrid.From``1(``0[][],System.Drawing.Size)">
            <summary>
            Inicializa una matriz en base a una matriz de celdas. 
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Grid.TiledMapGrid.From(Kriptok.Maps.Tiles.TileMap)">
            <summary>
            Obtiene una matriz de durezas del mapa.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Grid.TiledMapGrid.FindPath(Kriptok.Entities.Base.EntityBase,Kriptok.Drawing.Vector2I,Kriptok.Maps.PathFindTypeEnum)">
            <summary>
            Encuentra un camino entre el objeto indicado y la coordenada destino.
            </summary>
            <param name="obj"></param>
            <param name="to">Coordenada Y de inicio del camino.</param>                
            <param name="type">Algorimo de búsqueda a utilizar</param>                
            <returns>Devuelve una serie de pasos a seguir para llegar al objetivo.</returns>
        </member>
        <member name="M:Kriptok.Maps.Grid.TiledMapGrid.FindPathMovement(Kriptok.Entities.Base.EntityBase,Kriptok.Drawing.Vector2I,Kriptok.Maps.PathFindTypeEnum)">
            <summary>
            Encuentra un camino entre las coordenadas indicadas, en la matriz generada.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Grid.TiledMapGrid.FindPathMovement(Kriptok.Entities.Base.EntityBase,Kriptok.Entities.Base.EntityBase,Kriptok.Maps.PathFindTypeEnum)">
            <summary>
            Encuentra un camino entre las coordenadas indicadas, en la matriz generada.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Grid.TiledMapGrid.OnFreeSquare(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Indica si la posición donde se encuentra el objeto se encuentra libre u ocupada por sí mismo.
            </summary>
            <param name="obj">Objeto que se desea evaluar.</param>        
        </member>
        <member name="M:Kriptok.Maps.Grid.TiledMapGrid.GetTileCoords(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Obtiene las coordenadas del objeto, dentro de la grilla. Este método dependerá del tamaño de las
            casillas en las cuales se pueda mover el objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Grid.TiledMapGrid.TransformVector(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Transforma las coordenadas enviadas por parámetro a coordenadas del mapa.
            </summary>        
        </member>
        <member name="F:Kriptok.Maps.Grid.MapGridCellTypeEnum.Free">
            <summary>
            Indica que la celda está libre y puede accederse.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.MapGridCellTypeEnum.Blocked">
            <summary>
            Indica que la celda no puede accederse.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.MapGridCellTypeEnum.Walls">
            <summary>
            Indica que debe agregar paredes al mapa para esta celda.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.MapGridCellTypeEnum.Cover">
            <summary>
            Indica que debe agregar una "tapa" sobre las paredes.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.MapGridCellTypeEnum.Renderizable">
            <summary>
            Indica que debe agrear un "renderizable" en la celda.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.MapGridCellTypeEnum.Panel">
            <summary>
            Indica si debe crear un "panel".
            Esto es, una vista que se renderiza sobre el medio de la celda, como una puerta.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Grid.MapGridCell">
            <summary>
            Representa una celda en un mapa definido por una cuadrícula.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGridCell.#ctor(Kriptok.Maps.Grid.MapGridCellTypeEnum)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Maps.Grid.MapGridCell"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.MapGridCell.Type">
            <summary>
            Indica el tipo de celda.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGridCell.IsBlocked">
            <summary>
            Indica si la celda debe estar "bloqueada" para los objetos que
            quieran pararse encima.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGridCell.AddEntities(System.Collections.Generic.IList{Kriptok.Entities.Base.EntityBase},Kriptok.Drawing.Vector2I,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Permite agregar objetos a una lista para que se agreguen al mapa.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.Grid.MapGrid">
            <summary>
            Esta clase representa un mapa sobre el cual un objeto deberá buscar un camino de un punto al otro.
            La idea es cargar la matriz en base a un objeto Bitmap, pero que pueda ser modificada en tiempo de juego.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.MapGrid.baseGrid">
            <summary>
            Esta matriz contiene la información levantada de la imagen. Es decir, el mapa de durezas inicial.        
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.MapGrid.objects">
            <summary>
            Esta lista contiene los objetos que ocupan casillas en el mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Grid.MapGrid.reservations">
            <summary>
            Esta lista tiene todos los puntos "reserados" por algún proceso, que planea posicionarse en alguna
            casilla en particular. Esto es para que los procesos no puedan superponerse.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGrid.Clear(System.Int32[0:,0:],Kriptok.Drawing.Vector2I)">
            <summary>
            Este método se usa para limpiar una celda. Es ideal para limpiar antes de trazar caminos
            ya que un objeto puede estar partiendo de una casilla inválida, y no estaría bien que no
            pudiera moverse por error.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGrid.FindPathMovement(Kriptok.Maps.Grid.PathFindArguments)">
            <summary>
            Encuentra un camino entre las coordenadas indicadas, en la matriz generada.
            </summary>
            <returns>Devuelve una serie de pasos a seguir para llegar al objetivo.</returns>
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGrid.Add(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Agrega un objeto para que el mapa lo siga, y mantega actualizada la matriz del mapa en base a 
            sus coordenadas.
            </summary>
            <param name="mapMatrixObject">Proceso del juego que debe ser tomado en cuenta en la matriz del mapa.</param>
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGrid.GenerateMatrix(Kriptok.Maps.Grid.PathFindArguments)">
            <summary>
            Genera la matriz en el estado actual, es decir, con las durezas del mapa
            más todos los procesos registrados en el mapa.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGrid.IsFreeSquare(System.Int32,System.Int32)">
            <summary>
            Indica si el casillero indicado en las coordenadas x, y está libre para poder ser ocupado.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGrid.IsFreeSquare(Kriptok.Entities.Base.EntityBase,System.Int32,System.Int32)">
            <summary>
            Indica si el casillero indicado en las coordenadas (x, y) está libre para poder ser ocupado por
            el objeto indicado por parámetro.
            </summary>
            <param name="obj">Objeto que quiere ocupar el espacio en esas coordenadas.</param>        
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGrid.IsNotEmpty(System.Int32,System.Int32)">
            <summary>
            Indica si el casillero indicado no está vacío. Este método no toma en cuenta objetos que pudieran
            estar ocupando la casilla, sólo la grilla como está en ese momento.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGrid.ReserveIfFree(Kriptok.Entities.Base.EntityBase,System.Int32,System.Int32,Kriptok.Drawing.Vector2I[])">
            <summary>
            Indica si una casilla determinada está libre, y en caso de estarlo, la reserva.        
            </summary>
            <returns>Devuelve <see cref="F:System.Guid.Empty"/> si la casilla está ocupada y no pudo reservarse.
            O bien, el Guid asociado a la reserva (para poder posteriormente cancelarla).</returns>
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGrid.IfIsFree(Kriptok.Entities.Base.ProcessBase,Kriptok.Drawing.Vector2I,System.Action)">
            <summary>
            Ejecuta una acción determina si un objeto puede ubicarse en la posición indicada por parámetro.
            
            De poder hacerlo, reserva el casillero y ejecuta la acción determinada.
            
            Devuelve <see cref="!:true"/> si pudo realizar la acción, y <see cref="!:false"/> de lo contrario.
            </summary>
            <param name="obj">Objeto que se desea ubicar.</param>
            <param name="cell">Celda o casillero en el cual se desea ubicar el objeto.</param>
            <param name="action">Acción a realizar si el objeto puede ser ubicado en esa posición.
            Esta acción debe realizarse en paralelo, por eso este método sólo acepta procesos asincrónicos.</param>
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGrid.IfIsFree(Kriptok.Entities.Base.ProcessBase,System.Int32,System.Int32,System.Action)">
            <summary>
            Ejecuta una acción determina si un objeto puede ubicarse en la posición indicada por parámetro.
            
            De poder hacerlo, reserva el casillero y ejecuta la acción determinada.
            
            Devuelve <see cref="!:true"/> si pudo realizar la acción, y <see cref="!:false"/> de lo contrario.
            </summary>
            <param name="process">Objeto que se desea ubicar.</param>
            <param name="x">Coordenada X donde se desea ubicar el proceso.</param>
            <param name="y">Coordenada Y donde se desea ubicar el proceso.</param>
            <param name="action">Acción a realizar si el objeto puede ser ubicado en esa posición.
            Esta acción debe realizarse en paralelo, por eso este método sólo acepta procesos asincrónicos.</param>        
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGrid.IsFree(Kriptok.Entities.Base.EntityBase,System.Int32,System.Int32,System.Guid@)">
            <summary>
            Evalúa si un casillero de la grilla está libre.
            
            De estarlo, lo reserva hasta que manualmente se cancele la reservación.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGrid.CancelReservation(System.Guid)">
            <summary>
            Cancela la reserva de un punto de la matriz.
            </summary>
            <param name="reservationId">Id de la reserva.</param>
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGrid.GetDestinyPointForMatrix(Kriptok.Drawing.Vector2I,Kriptok.Drawing.Vector2I,System.Int32[0:,0:],Kriptok.Drawing.Vector2I,System.Boolean)">
            <summary>
            Cuando se encuentra obstáculos en la búsqueda de caminos, por ejemplo, si el destino está dentro
            de un anillo al que no se puede alcanzar, es necesario encontrar el punto accesible más cercano.
            De eso se encarga esta función.                
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGrid.Valid(Kriptok.Entities.Base.EntityBase,System.Single,System.Single,System.Single)">
            <summary>
            Valida si el objeto con la determinada posición y radio no se encuentra intersectado con
            las paredes o casilleros ocupados.
            </summary>
            <param name="obj">Utilizado para validar que el objeto no se choque consigo mismo.</param>        
            <param name="x">Coordenadas del objeto en el eje X pero tomando como tamaño de los tiles el valor 1.</param>
            <param name="y">Coordenadas del objeto en el eje Y pero tomando como tamaño de los tiles el valor 1.</param>
            <param name="radius">Radio del objeto pero tomando como tamaño de los tiles el valor 1.</param>
            <returns>Devuelve <see cref="!:true"/> si el objeto puede quedars en esa posición, 
            o false si se encuentra en una posición inválida.</returns>
        </member>
        <member name="M:Kriptok.Maps.Grid.MapGrid.GetTileCoords(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Obtiene las coordenadas del objeto, dentro de la grilla. Este método dependerá del tamaño de las
            casillas en las cuales se pueda mover el objeto. Por defecto, las casillas tienen un tamaño de 1x1.
            
            Pero en clases derivadas, este método se debe modificar para tomar en cuenta el tamaño alternativo
            de las casillas.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.Helpers.MapEditorHelper">
            <summary>
            Funcionalidades de ayuda para el desarrollo de aplicaciones de edición de mapas.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Helpers.MapEditorHelper.LoadAssemblies(System.String)">
            <summary>
            Obtiene la lista de ensamblados referenciados por el archivo para ser cargados y utilizados
            en el editor de mapas.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Helpers.MapEditorHelper.LoadLastVersion(System.IO.FileInfo[])">
            <summary>
            Carga, de la lista de archivos compilados, la última versión de cada uno.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Helpers.MapEditorHelper.RetrieveTypes``1">
            <summary>
            Obtiene todos los <see cref="!:T"/> que haya en los ensamblados cargados en el dominio.        
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.TextureListItemModel">
            <summary>
            Clase utilizada por los editores de mapas para generar ventanas de selección de texturas.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.AffineTexset">
            <summary>
            Representa una colección de texturas para ser utilizadas en diversos contextos.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.SampleTexsetBase">
            <summary>
            Representa una colección de texturas para ser utilizadas en diversos contextos.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.SampleTexsetBase.Load(System.Reflection.Assembly,System.String)">
            <summary>
            Crea una textura de muestreo en base al recurso indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.SampleTexsetBase.Load(System.Reflection.Assembly,System.String,Kriptok.Views.Shapes.TextureOptions)">
            <summary>
            Crea una textura de muestreo en base al recurso indicado por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.TileTexsetBase`1">
            <summary>
            Representa un <see cref="T:Kriptok.Maps.SampleTexsetBase"/> construido en base a un <see cref="T:Kriptok.Maps.Tiles.Base.TilesetBase"/>
            </summary>
        </member>
        <member name="M:Kriptok.Maps.TileTexsetBase`1.AddIndex(System.Int32)">
            <summary>
            Indica si se debe agregar la textura con el índice calculado.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.ITexset`1">
            <summary>
            Interfaz genérica para "sets de texturas".
            </summary>    
        </member>
        <member name="M:Kriptok.Maps.ITexset`1.Texture(System.Int32)">
            <summary>
            Devuelve la textura indicada por su Id.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.ITexset`1.TextureIds">
            <summary>
            Devuelve un arreglo con todos los Ids de las texturas almacenadas.
            </summary>     
        </member>
        <member name="T:Kriptok.Maps.ITexsetExtensions">
            <summary>
            Funcionalidades extendidas de la interfaz <see cref="T:Kriptok.Maps.ITexset`1"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.ITexsetExtensions.ToDictionary``1(Kriptok.Maps.ITexset{``0})">
            <summary>
            Obtiene un diccionario con todas las texturas identificadas por id.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.ISampleTexsetExtensions.GetResources(Kriptok.Maps.ITexset{Kriptok.Views.Shapes.ISampleTexture})">
            <summary>
            Obtiene las texturas en formato Bitmap para poder ser mostradas en el editor de mapas.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.Base.MapEditorConfigBase">
            <summary>
            Configuración básica para que levanten programas de edición de mapas.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.Base.MapEditorConfigBase.gameObjects">
            <summary>
            Lista de objetos que pueden posicionarse en un mapa desde el editor.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Base.MapEditorConfigBase.Add``1(System.Int32)">
            <summary>
            Agrega una clase a la lista de objetos que pueden ubicarse en el editor de mapas.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Base.MapEditorConfigBase.Add(System.Int32,System.Type)">
            <summary>
            Agrega una clase a la lista de objetos que pueden ubicarse en el editor de mapas.
            Esta clase debe implementar la interfaz <see cref="T:Kriptok.Maps.Base.IMapEditorEntity"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Base.MapBaseX`1">
            <summary>
            Clase base para confección de mapas que se guardan en formato Xml.
            </summary>    
        </member>
        <member name="M:Kriptok.Maps.Base.MapBaseX`1.#ctor">
            <summary>
            Constructor necesario para poder deserializar desde XML.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Base.MapBaseX`1.FileName">
            <summary>
            Nombre del archivo guardado, se utiliza más que nada para guardar los cambios.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Base.MapBaseX`1.Save(System.String)">
            <summary>
            Guarda el mapa como archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Base.MapBaseX`1.Load``1(System.String)">
            <summary>
            Carga un mapa desde un archivo
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Base.MapBaseX`1.LoadXml``1(System.String,System.String)">
            <summary>
            Carga un mapa desde un Xml.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Base.MapBaseX`1.LoadAssembliesForMapEditor">
            <summary>
            Carga los ensamblados que se encuentren en la carpeta del proyecto al cual pertenece el mapa.
            </summary>        
        </member>
        <member name="P:Kriptok.Maps.Base.MapEditorPreviewX.X">
            <summary>
            Coordenada X donde se encuentra la cámara al momento del preview del mapa en el editor.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Base.MapEditorPreviewX.Y">
            <summary>
            Coordenada Y donde se encuentra la cámara al momento del preview del mapa en el editor.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Base.MapEditorPreviewX.Height">
            <summary>
            Altura de la cámara al momento del preview del mapa en el editor.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Base.MapEditorPreviewX.Angle">
            <summary>
            Ángulo de la cámara al momento del preview del mapa en el editor.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Base.MapEditorPreviewX.YShearing">
            <summary>
            Distorción vertical de la cámara para simular ver hacia abajo o hacia arriba.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Base.MapEditorPreviewX.DraftFile">
            <summary>
            Nombre del archivo "borrador" que se debe cargar en el editor como "fondo" de la edición
            para tomar de guía a la hora de construir el mapa encima.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Base.MapEditorPreviewX.ResourceName">
            <summary>
            Indica el nombre de la clase que tiene la colección de texturas utilizadas por el mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Base.MapEditorPreviewX.ResourceClass">
            <summary>
            Indica el nombre de la clase que tiene la colección de texturas utilizadas por el mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Base.MapEditorPreviewX.WindowMode">
            <summary>
            Indica la resolución a utilizar en la vista previa del editor.
            </summary>        
        </member>
        <member name="P:Kriptok.Maps.Base.MapEditorPreviewX.ResourceSet">
            <summary>
            Permite establecer u obtener el tipo de recursos a utilizar.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Base.MapEditorPreviewX.GetResourceSet``1">
            <summary>
            Obtiene la clase con los recursos necesarios para generar el mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Base.IMapEditorEntity">
            <summary>
            Esta interfaz representa un objeto que puede ser agregado a un mapa siendo configurado desde
            el tileset, o creado en un proyecto de juego, y ser agregado al mapa desde el editor.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.PathFindTypeEnum._4_Way">
            <summary>
            Sólo se mueve en ángulos rectos.
            
            X
            .
            .
            . . . X
            </summary>
        </member>
        <member name="F:Kriptok.Maps.PathFindTypeEnum._4_Way_CutDiagonals">
            <summary>
            Puede cruzar esquinas abiertas.
            
            X WWWWW
            . WWWWW 
            .  WWWW   
              . . X
            </summary>
        </member>
        <member name="F:Kriptok.Maps.PathFindTypeEnum._4_Way_CutCorners">
            <summary>
            Puede cruzar esquinas abiertas.
            
            X WWWWW
            . WWWWW 
            . WWWWW   
              . . X
            </summary>
        </member>
        <member name="F:Kriptok.Maps.PathFindTypeEnum._8_Ways">
            <summary>
            Puede cruzar esquinas cerradas.
            
            X WWWWW
            W . WWW 
            WWW . W
            WWWWW X
            </summary>
        </member>
        <member name="T:Kriptok.Maps.TexsetBase">
            <summary>    
            OBSOLETA
            
            Utilizar <see cref="T:Kriptok.Maps.SampleTexsetBase"/>.    
            </summary>
        </member>
        <member name="M:Kriptok.Maps.TexsetBase.AddExcluding(System.Int32,Kriptok.Maps.Tiles.Map2DTileInfo,System.Int32[],Kriptok.Views.Shapes.TextureOptions)">
            <summary>
            Agrega una tile a la lista de texturas.       
            </summary>                
        </member>
        <member name="M:Kriptok.Maps.TexsetBase.Add(System.Int32,Kriptok.Maps.Tiles.Map2DTileInfo,System.Int32[],Kriptok.Views.Shapes.TextureOptions)">
            <summary>
            Agrega una tile a la lista de texturas.       
            </summary>                
        </member>
        <member name="M:Kriptok.Maps.TexsetBase.AddExcluding(System.Int32,Kriptok.Maps.TexsetBase{Kriptok.Views.Shapes.ISampleTexture},System.Int32[])">
            <summary>
            Agrega un texset completo a otro texset a partir del id indicado.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.TexsetBase`1">
            <summary>
            Representa una colección de texturas para ser utilizadas en diversos contextos.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.TexsetBase`1.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Maps.TexsetBase`1"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.TexsetBase`1.#ctor(System.Collections.Generic.IDictionary{System.Int32,`0})">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Maps.TexsetBase`1"/>
            copiando el set de texturas indicado por parámetro.
            </summary>        
        </member>
        <member name="P:Kriptok.Maps.TexsetBase`1.Assembly">
            <summary>
            Obtiene el ensamblado en el que está declarada la clase.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.TexsetBase`1.Count">
            <summary>
            Obtiene la cantidad de texturas guardadas en el set.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.TexsetBase`1.Add(System.Int32,`0)">
            <summary>
            Permite agregar una textura ya generada.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.TexsetBase`1.NewTexture(System.Int32,System.Reflection.Assembly,System.String,Kriptok.Views.Shapes.TextureOptions)">
            <summary>
            Crea una nueva textura desde un recurso para agregar.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.TexsetBase`1.NewTexture(System.Int32,Kriptok.Drawing.FastBitmap[],Kriptok.Views.Shapes.TextureOptions)">
            <summary>
            Crea una nueva textura animada para agregar.
            </summary>  
        </member>
        <member name="M:Kriptok.Maps.TexsetBase`1.Texture(System.Int32)">
            <summary>
            Obtiene la textura indicada por parámetro.
             
            Utiliza el <see cref="M:Kriptok.Extensions.IDictionaryExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)"/>
            para obtener la textura, ya que puede darse el caso de que una determinada textura deje de existir,
            y en ese caso, en lugar de explotar, devolverá una textura nula.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.TexsetBase`1.TextureIds">
            <summary>
            Devuelve un arreglo con todos los Ids de las texturas almacenadas.
            </summary> 
        </member>
        <member name="M:Kriptok.Maps.TexsetBase`1.Add(System.Int32,System.Reflection.Assembly,System.String,System.Int32,System.Int32)">
            <summary>
            Agrega varias texturas cortando un mapa de bits en varias partes de igual tamaño.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.TexsetBase`1.Add(System.Int32,Kriptok.Common.Resource,Kriptok.Views.Shapes.TextureOptions,System.Int32,System.Int32)">
            <summary>
            Agrega varias texturas cortando un mapa de bits en varias partes de igual tamaño.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.TexsetBase`1.AddAnimated(System.Int32,Kriptok.Common.Resource,Kriptok.Views.Shapes.TextureOptions,System.Int32,System.Int32)">
            <summary>
            Agrega varias texturas cortando un mapa de bits en varias partes de igual tamaño.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.TexsetBase`1.Add(System.Int32,System.Reflection.Assembly,System.String,Kriptok.Views.Shapes.TextureOptions,System.Int32,System.Int32)">
            <summary>
            Agrega varias texturas cortando un mapa de bits en varias partes de igual tamaño.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.IMapRegionEntity.IsAlive">
            <summary>            
            Indica si el objeto está vivo o no.            
            </summary>
        </member>
        <member name="M:Kriptok.Maps.IMapRegionEntity.GetId">
            <summary>
            Obtiene el Id del objeto para que cuando se utilice para saber si puede avanzar o no, no se 
            encuentre consigo mismo. Por defecto puede utilizarse el Id del proceso..
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.MapEntityInitializationArgs.Get``1(System.String)">
            <summary>
            Si se usa el tipo <see cref="T:System.String"/>, toma como valor por defecto <see cref="F:System.String.Empty"/>, por lo
            que no hace falta validar que sea distinto que null.
            </summary>        
        </member>
        <member name="T:Kriptok.Maps.MapRegion">
            <summary>
            Esta estructura representa un "mapa de durezas" que se maneja internamente con la clase <see cref="T:System.Drawing.Region"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Maps.MapRegion.objects">
            <summary>
            Objetos agregados al mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.MapRegion.#ctor(Kriptok.Maps.Tiles.TileMap)">
            <summary>
            Obtiene una matriz de durezas del mapa.
            </summary>        
        </member>
        <member name="F:Kriptok.Maps.MapRegion.ControlRadius">
            <summary>
            Esta propiedad indica un radio de control para evaluar si la posición de un objeto es válida o no
            contra otros objetos. Si estos otros objetos se encuentran más allá del radio de este objeto, directamente
            no los evalua.
            
            Si los objetos son pequeños, se puede usar un radio pequeño, pero si los objetos son muy grandes, se puede
            dar que un objeto se acerque mucho a otro por su tamaño, pero que su centro siga quedando muy lejos, y no
            sea tomado en cuenta. En esos casos, será necesario agrandar el radio.
            </summary>
        </member>
        <member name="T:Kriptok.Maps.Terrains.TileMapTerrain">
            <summary>
            Esta clase representa un terreno generado específicamente para mapas basados en tiles.     
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Terrains.TileMapTerrain.#ctor(System.Byte[0:,0:],Kriptok.Views.Shapes.IGdipTexture,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Maps.Terrains.TileMapTerrain"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Terrains.TileMapTerrain.#ctor(System.Byte[0:,0:],Kriptok.Views.Shapes.IGdipTexture,System.Drawing.Size)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Maps.Terrains.TileMapTerrain"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Maps.Terrains.TileMapTerrain.RemoveY0Faces">
            <summary>
            Remueve las caras que tiene Y = 0 en todas los vértices.
            </summary>
        </member>
        <member name="P:Kriptok.Maps.Terrains.TerrainDataBase`1.Item(System.Int32,System.Int32)">
            <summary>
            Obtiene o establece el valor de la matriz indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Maps.Terrains.TerrainDataBase`1.Resized(System.Drawing.Size,System.Drawing.SizeF,System.Boolean)">
            <summary>
            Genera un nuevo terrain igual al actual, pero redimensionado.
            </summary>        
        </member>
        <member name="P:Kriptok.Drawing.PaletteSwap.Count">
            <summary>
            Cantidad de rotaciones.
            </summary>
        </member>
        <member name="T:Kriptok.Drawing.Algebra.ClipLineResultEnum">
            <summary>
            Indica el resultado de una operación de "clippeado" de un segmento descripto por dos vértices
            contra alguno de los límites de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.ClipLineResultEnum.None">
            <summary>
            No se realizó ningún clip.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.ClipLineResultEnum.First">
            <summary>
            Se clippeó el primer vértice.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.ClipLineResultEnum.Second">
            <summary>
            Se clippeó el segundo vértice.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.ClipLineResultEnum.Both">
            <summary>
            Están ambos vértices fuera de la pantalla.
            </summary>
        </member>
        <member name="T:Kriptok.Drawing.Algebra.PolarVector">
            <summary>
            Estructura que representa un vector en coordenadas polares.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.PolarVector.ProjectX(System.Single,System.Single)">
            <summary>
            Obtiene la proyección de un vector en coordenadas polares sobre el eje X.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.PolarVector.ProjectY(System.Single,System.Single)">
            <summary>
            Obtiene la proyección de un vector en coordenadas polares sobre el eje Y.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.PolarVector.NewVector(System.Single,System.Single)">
            <summary>
            Crea un vector cartesiano de dos dimensiones en base a coordenadas polares.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Algebra.Line2D">
            <summary>
            Representa una línea bidimensional definida por un vector dirección y un punto.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Line2D.Direction">
            <summary>
            Dirección de la recta.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Line2D.Point">
            <summary>
            Punto aleatorio por el que pasa la recta.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Line2D.Intersection(Kriptok.Drawing.Algebra.Line2D,Kriptok.Drawing.Algebra.Line2D)">
            <summary>
            Obtiene la intersección entre dos rectas.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Line2D.IntersectionLineVector(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Obtiene la intersección entre una recta definida por dos puntos
            y una recta definida por un punto que pasa por el (0, 0)
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.UsingMatrix(System.Action{System.Drawing.Drawing2D.Matrix})">
            <summary>
            Permite ejecutar una porción de código transformando la
            <see cref="T:Kriptok.Drawing.Algebra.Matrix2x3F"/> en una <see cref="T:System.Drawing.Drawing2D.Matrix"/> y liberándola después.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.UsingMatrix``1(System.Func{System.Drawing.Drawing2D.Matrix,``0})">
            <summary>
            Permite ejecutar una porción de código transformando la
            <see cref="T:Kriptok.Drawing.Algebra.Matrix2x3F"/> en una <see cref="T:System.Drawing.Drawing2D.Matrix"/> y liberándola después.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply(System.Single,System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply00">
            <summary>
            Este método devuelve un punto que corresponde a la 
            multiplicación de la matriz por el punto (0f, 0f).
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.MultiplyX0(System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply0Y(System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply00_X">
            <summary>
            Este método devuelve un punto que corresponde a la 
            multiplicación de la matriz por el punto (0f, 0f).
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.MultiplyX0_X(System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply0Y_X(System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.MultiplyXY_X(System.Single,System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply_X0_XY(System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply_XY_Y(System.Single,System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply(Kriptok.Drawing.Algebra.Matrix2x3F)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_XZ_XZ(System.Single,System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_XZ_X(System.Single,System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply(System.Single,System.Single,System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_XYZ_ZX(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_X0Z_ZX(System.Single,System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_XYZ_Z(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply(Kriptok.Drawing.Algebra.Matrix3x4F)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_100">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_010">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_000">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_001">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_100_Y">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Round3">
            <summary>
            Redondea la matriz a dos decimales. Por motivos de debug.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.GetFastFovInverse">
            <summary>
            Obtiene la inversa de la matriz pero sin tomar en cuenta escalamiento.
            
            Es un algoritmo rápido, pero sólo funciona para la cámara del entorno 3D.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.GetFullInverse">
            <summary>
            Obtiene la inversa de la matriz, con un algoritmo que toma en cuenta escalamiento.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Algebra.Plane">
            <summary>
            Plano tridimensional.
            
            http://biospud.blogspot.com/2020/05/how-to-draw-infinite-planes-in-computer.html
            http://biospud.blogspot.com/2020/05/infinite-plane-rendering-2-texturing.html
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.IntersectPoint(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Calcula la intersección entre un vector determinado que pasa por el punto (0, 0, 0) y el plano.        
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.IntersectPoint(System.Single,System.Single,System.Single)">
            <summary>
            Calcula la intersección entre un vector determinado que pasa por el punto (0, 0, 0) y el plano.        
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.IntersectPoint_XY(System.Single,System.Single,System.Single)">
            <summary>
            Calcula la intersección entre un vector determinado que pasa por el punto (0, 0, 0) y el plano.        
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.GetZ(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Este método no funciona con planos que sean verticales. Es decir, cuya normal en Z sea cero.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.GetZ(System.Single,System.Single)">
            <summary>
            Este método no funciona con planos que sean verticales. Es decir, cuya normal en Z sea cero.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.IntersectionSegmentToZPlane(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F,System.Single)">
            <summary>
            Obtiene la coordenada X de la intersección entre un segmento definido por dos vértices tridimencionales, 
            y el plano Z = z (considerando el plano Z = z, como un plano perpendicular a la cámara).
            
            Siempre y cuando el valor de Z sea mayor o igual que <see cref="F:Kriptok.Drawing.Algebra.Vector3F.InvalidZ"/>.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Algebra.Vector2F">
            <summary>
            Estructura vectorial de dos dimensiones.
            </summary>    
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Extend(System.Single)">
            <summary>
            Transforma un vector bidimensional en uno tridimencional.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.PolarPlus(System.Single,System.Single)">
            <summary>
            Suma un vector al actual en coordenadas polares.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Minus(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Resta un vector del otro, devolviendo la diferencia.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Plus(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Suma un vector al actual, devolviendo el vector resultante.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Average(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene el promedio de la ubicación entre dos vectores.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Average(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene el promedio de la ubicación entre tres vectores.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Average(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene el promedio de la ubicación entre cuatro vectores.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Avg(Kriptok.Drawing.Algebra.Vector2F[])">
            <summary>
            Obtiene el promedio de la ubicación de un arreglo de vértices.
            </summary>  
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Clip0X(System.Single,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Clippea contra los límites (X = 0) y (X = maxX) el vector indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.ClipX(Kriptok.Drawing.Bound,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Clippea contra los límites X = 0 y X = region.Width el vector indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.ClipX(System.Single,System.Single,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Clippea contra los límites X = 0 y X = region.Width el vector indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Clip0Y(System.Single,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Clippea contra los límites (Y = 0) y (Y = maxY) el vector indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Intersection(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la intersección entre dos segmentos definidos por pares
            de vectores de dos dimensiones.
            
            Puede devolver <see cref="!:null"/> de no intersectarse.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Rotate(System.Single)">
            <summary>
            Rota un vector el ángulo indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.ClipY0(System.Single,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Clipea dos vértices contra el borde superior de la pantalla, e indica si se clippeó algo o no.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.ClipY0(Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Clipea dos vértices contra el borde superior de la pantalla, e indica si se clippeó algo o no.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Inverse">
            <summary>
            Devuelve el vector con todos los valores en negativo.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Normalized">
            <summary>
            Normaliza el vector, y devuelve el vector normalizado.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Kriptok.Drawing.Algebra.Vector2F.TriangleArea(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)" -->
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.TriangleAreaX2(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Calcula el doble del área interior de un triángulo dado por tres <see cref="T:System.Drawing.PointF"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Drawing.Algebra.Vector3F">
            <summary>
            Vector tridimensional.
            </summary>    
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.Algebra.Vector3F"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.#ctor(Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.Algebra.Vector3F"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.Algebra.Vector3F"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.Normalized">
            <summary>
            Normaliza el vector, y devuelve el vector normalizado.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.Normalized(System.Double)">
            <summary>
            Normaliza el vector, y devuelve el vector normalizado, pero permite especificar una longitud
            por la cual multiplicar el vector calculado (por cuestiones de performance).
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.DistanceTo(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Calcula la distancia desde este vector hasta el indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.ClipZ(Kriptok.Drawing.Algebra.Vector3F@,Kriptok.Drawing.Algebra.Vector3F@)">
            <summary>
            Clippea un segmento definido por dos puntos contra el plano Z = <see cref="F:Kriptok.Drawing.Algebra.Vector3F.InvalidZ"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.PlusZ(System.Single)">
            <summary>
            Suma una determinada cantidad en la coordenada Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.Equals(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Compara dos vectores e indica si los dos tienen exactamente las mismas coordenadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.IsVisible(Kriptok.Drawing.Algebra.Vector3F@,Kriptok.Drawing.Algebra.Vector3F@)">
            <summary>
            Este método indica si un segmento conformado por los dos puntos indicados por parámetor
            es visible en la pantalla.
            
            En caso de que una porción sea visible, se modifican los puntos para sólo 
            devolver esa porción visible.
            </summary>       
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.Inverse">
            <summary>
            Devuelve el vector con todos los valores en negativo.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.BoundF.Overlaps(Kriptok.Drawing.Bound)">
            <summary>
            Indica si los "límites" se superponen.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.BoundF.Clamp(System.Single,System.Single)">
            <summary>
            Recorta la región representada por el "límite" a los parámetros indicados.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.FastBitmap8">
            <summary>
            Imagen de 256 colores.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap8.Sample(System.UInt16,System.UInt16)">
            <summary>
            Obtiene el índice del color que se encuentra en el pixel indicado por parámetro.
            
            Este método NO VALIDA que "x" e "y" se encuentren dentro de los límites de la imagen.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap8.Sample(System.Int32,System.Int32,System.Byte)">
            <summary>
            Obtiene el índice del color que se encuentra en el pixel indicado por parámetro.
            
            Si las coordenadas se encuentran fuera de los límites del mapa, devuelve el valor por default
            indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap8.SavePng(System.String)">
            <summary>
            Guarda la imagen como un archivo "png".
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap8.Plot(System.Int32,System.Int32,System.Byte)">
            <summary>
            Establece un punto del mapa de un color determinado.
            </summary>
        </member>
        <member name="T:Kriptok.Drawing.IndexedBitmapBuilder">
            <summary>
            Constructor de bitmaps de 256 colores.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.#ctor(System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.IndexedBitmapBuilder"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.#ctor(System.Int32,System.Int32,System.Drawing.Color[])">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.IndexedBitmapBuilder"/>
            utilizando la paleta indicada por parámetro.
            </summary>        
        </member>
        <member name="P:Kriptok.Drawing.IndexedBitmapBuilder.Item(System.Int32,System.Int32)">
            <summary>
            Obtiene o establece el valor del pixel en la ubicación indicada por parámetro.
            </summary>        
        </member>
        <member name="P:Kriptok.Drawing.IndexedBitmapBuilder.Item(System.Int32)">
            <summary>
            Obtiene o establece el valor del pixel en la ubicación indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.GetBytes">
            <summary>
            Obtiene los bytes del mapa de bits.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.GetWidth(System.Int32)">
            <summary>
            Obtiene el ancho real (ceiling a múltiplo de 4) de los bitmap de 8 bits.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.Blit(Kriptok.Drawing.IndexedBitmapBuilder.IndexedBitmap,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Copia un mapa de bits indexado al mapa de bits actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.Blit(Kriptok.Drawing.IndexedBitmapBuilder.IndexedBitmap,System.Int32,System.Int32)">
            <summary>
            Copia un mapa de bits indexado al mapa de bits actual.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.IndexedBitmapBuilder.IndexedBitmap">
            <summary>
            Representa un bitmap indexado.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.IndexedBitmap.GetBounds">
            <summary>
            Obtiene el rectángulo que realmente utiliza la imagen.
            </summary>            
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.IndexedBitmap.GetCenteredBounds(System.Drawing.Point)">
            <summary>
            Obtiene el rectángulo que realmente utiliza la imagen.
            </summary>            
        </member>
        <member name="T:Kriptok.Drawing.GrayScaleBitmapBuilder">
            <summary>
            Constructor de bitmaps de 256 colores en escala de grises.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Shapes.Cilinder.Location">
            <summary>
            Centro de la esfera.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Shapes.Cilinder.Radius">
            <summary>
            Radio de la esfera.
            </summary>
        </member>
        <member name="P:Kriptok.Drawing.Shapes.Cilinder.Height">
            <summary>
            Altura del cilindro.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Cilinder.Contains(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Indica si la esfera contiene la coordenada indicada.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Shapes.Sphere.Location">
            <summary>
            Centro de la esfera.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Shapes.Sphere.Radius">
            <summary>
            Radio de la esfera.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Sphere.Contains(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Indica si la esfera contiene la coordenada indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Sphere.Contains(System.Single,System.Single,System.Single)">
            <summary>
            Indica si la esfera contiene la coordenada indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Sphere.CollidesWith(Kriptok.Drawing.Shapes.Sphere)">
            <summary>
            Indica si la esfera colisiona con la otra.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.Contains(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Indica si los límites contienen el punto indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.Contains(System.Single,System.Single,System.Single)">
            <summary>
            Indica si los límites sobre contienen el punto indicado.
            </summary>     
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.Overlaps(Kriptok.Drawing.Shapes.Volume)">
            <summary>
            Verifica si el volumen se superpone con el indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.SetLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Ubica el volumen en la posición indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.ZXY">
            <summary>
            Traspone las coordenadas del volumen.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.YZX">
            <summary>
            Traspone las coordenadas del volumen.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.Scale(System.Single)">
            <summary>
            Escala el volumen pero lo mantiene en la misma posición.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.Scale(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Escala el volumen pero lo mantiene en la misma posición.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.ContainsAny(Kriptok.Entities.Collisions.Coll3D.BoundingBox3D)">
            <summary>
            Indica si el volumen contiene alguno de los vértices que componen la "bounding-box"
            indicada por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Hsv">
            <summary>
            Representa un color en formato HSB.
            
            https://es.wikipedia.org/wiki/Modelo_de_color_HSV
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Hsv.H">
            <summary>
            Gama de color.
            Valor entre 0f y 360f.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Hsv.S">
            <summary>
            Saturación.
            Valor entre 0f y 1f.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Hsv.V">
            <summary>
            Valor. 
            Valor entre 0f y 1f.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Hsv.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la estructura <see cref="T:Kriptok.Drawing.Hsv"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Hsv.#ctor(System.Drawing.Color)">
            <summary>
            Devuelve una nueva instancia de la estructura <see cref="T:Kriptok.Drawing.Hsv"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Bound.Clamp(System.Int32,System.Int32)">
            <summary>
            Recorta la región representada por el "límite" a los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Bound.Clamp(Kriptok.Drawing.Bound)">
            <summary>
            Recorta la región representada por el "límite" a los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Bound.IsEmpty">
            <summary>
            Indica si el límite no tiene longitud.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Bound.Overlaps(Kriptok.Drawing.Bound)">
            <summary>
            Indica si los "límites" se superponen.
            </summary>        
        </member>
        <member name="F:Kriptok.Drawing.BoundF2.Invalid">
            <summary>
            Declara un <see cref="T:Kriptok.Drawing.BoundF2"/> de tamaños inválidos. 
            Cualquier bound válido, por defecto es mayor que este bound.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Intersects(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si el rectángulo formado por los vértices indicados por parámetro se intersecta con
            el rectángulo actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Intersects(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si el rectángulo formado por los vértices indicados por parámetro se intersecta con
            el rectángulo actual.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Intersects(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Indica si el rectángulo formado por los vértices indicados por parámetro se intersecta con
            el rectángulo actual.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Intersects(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si el rectángulo formado por los vértices indicados por parámetro se intersecta con
            el rectángulo actual.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Intersects(System.Collections.Generic.IEnumerable{Kriptok.Drawing.Algebra.Vector2F})">
            <summary>
            Indica si el rectángulo formado por los vértices indicados por parámetro se intersecta con
            el rectángulo actual.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Intersects(Kriptok.Drawing.BoundF2)">
            <summary>
            Indica si el rectángulo formado por los vértices indicados por parámetro se intersecta con
            el rectángulo actual.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Intersects(System.Drawing.RectangleF)">
            <summary>
            Indica si el rectángulo formado por los vértices indicados por parámetro se intersecta con
            el rectángulo actual.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Extend(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Extiende los límites actuales para incorporar los nuevos dos vértices indicados por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Bound2">
            <summary>
            Representa un area rectangular definida por sus límites.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Bound2.Invalid">
            <summary>
            Declara un <see cref="T:Kriptok.Drawing.Bound2"/> de tamaños inválidos. 
            Cualquier bound válido, por defecto es mayor que este bound.
            </summary>
        </member>
        <member name="T:Kriptok.Drawing.DirectBitmap">
            <summary>
            https://stackoverflow.com/questions/24701703/c-sharp-faster-alternatives-to-setpixel-and-getpixel-for-bitmaps-for-windows-f
            
            Explicación de PrecalculatedAlpha.
            https://microsoft.github.io/Win2D/html/PremultipliedAlpha.htm
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.DirectBitmap.#ctor(System.Drawing.Size,System.Drawing.Imaging.PixelFormat)">
            <summary>
            Bitmap de lectura/escritura rápida.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.DirectBitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Establece el color de un pixel.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.DirectBitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
            <summary>
            Bitmap de lectura/escritura rápida.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.DirectBitmap.BlitRect(System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Dibuja un rectángulo sobre el fondo.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.DirectBitmap.Sample(System.Int32,System.Int32)">
            <summary>
            Devuelve el color que se encuentra en las coordenadas indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.DirectBitmap.BlitX0(Kriptok.Drawing.FastBitmap,System.Int32)">
            <summary>
            Copia la imagen indicada por parámetro en la posición X indicada, y en Y = 0.
            
            El alto del tile a renderizar no debe ser más alto que la imagend donde se está renderizando.
            </summary>
        </member>
        <member name="T:Kriptok.Drawing.FastBitmap">
            <summary>
            Esta clase equivale a la <see cref="T:System.Drawing.Bitmap"/> pero optimizada.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.FastBitmap.on">
            <summary>
            Objteo utilizado para lockear el sistema hasta liberar un recursos.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.FastBitmap.resourceName">
            <summary>
            Nombre del recurso utilizado para generar este bitmap.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.FastBitmap.Width">
            <summary>
            Ancho de la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.FastBitmap.Height">
            <summary>
            Alto de la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.FastBitmap.Length">
            <summary>
            Longitud total del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.FastBitmap.data">
            <summary>
            Valores de los pixels de la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.FastBitmap.transparentColor">
            <summary>
            Color transparente, en caso de tenerlo.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.Clear">
            <summary>
            Limpia toda la imagen dejándola en el color 0x00000000.
            
            Este método no es equivalente a <see cref="M:Kriptok.Drawing.FastBitmap.Clear(System.Drawing.Color)"/> ya que al dejarlo en valores 0x0, 
            se puede hacer a bajo nivel.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.Clear(System.Drawing.Color)">
            <summary>
            Limpia toda la imagen dejándola en el color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.ToThumbnail">
            <summary>
            Transforma el <see cref="T:Kriptok.Drawing.FastBitmap"/> en un <see cref="T:System.Drawing.Bitmap"/> común
            sin transparencias, para ser utilizado en editores de mapas.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.ToBitmap">
            <summary>
            Transforma el <see cref="T:Kriptok.Drawing.FastBitmap"/> en un <see cref="T:System.Drawing.Bitmap"/> común.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.MemoryCopy(System.UInt32*)">
            <summary>
            Copia una porción de memoria hasta la posición indicada con la longitud indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.BlitXY(Kriptok.Drawing.FastBitmap,System.Int32,System.Int32)">
            <summary>
            Copia la imagen indicada por parámetro en la posición indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.BlitX0(Kriptok.Drawing.FastBitmap,System.Int32)">
            <summary>
            Copia la imagen indicada por parámetro en la posición X indicada, y en Y = 0.
            
            El alto del tile a renderizar no debe ser más alto que la imagend donde se está renderizando.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.BlitImage(Kriptok.Drawing.FastBitmap,System.Int32,System.Int32)">
            <summary>
            Copia la imagen indicada por parámetro en la posición indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.BlitImageX0(Kriptok.Drawing.FastBitmap,System.Int32)">
            <summary>
            Copia la imagen indicada por parámetro en la posición X indicada, y en Y = 0.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.BlitTileOn(Kriptok.Drawing.FastBitmap,System.UInt32[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copia la imagen indicada por parámetro en la posición indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.BlitTileOnX0(Kriptok.Drawing.FastBitmap,System.UInt32[],System.Int32,System.Int32)">
            <summary>
            Copia la imagen indicada por parámetro en la posición X indicada, y en Y = 0.
            
            El alto del tile a renderizar no debe ser más alto que la imagend donde se está renderizando.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.RotateFlip(System.Drawing.RotateFlipType)">
            <summary>
            Rota o invierte el mapa de bits.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.ToBrush(Kriptok.Views.Shapes.Texts.WrapModeEnum)">
            <summary>
            Crea una texture brush en base a la imagen generada.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.FastBitmapExtensions">
            <summary>
            Funcionalidades extendidas de la clase <see cref="T:Kriptok.Drawing.FastBitmap"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmapExtensions.GetPixel(Kriptok.Drawing.FastBitmap,System.Int32,System.Int32)">
            <summary>
            Obtiene el color del pixel de las coordenadas indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmapExtensions.ReadPixels``1(Kriptok.Drawing.FastBitmap,System.Func{System.Int32,System.Int32,System.Drawing.Color,``0})">
            <summary>
            Permite transformar un bitmap en otra estructura, pixel por pixel.
            </summary>                
        </member>
        <member name="M:Kriptok.Drawing.Triangle2D.Intersects(Kriptok.Drawing.BoundF2)">
            <summary>
            Indica si el triángulo se intersecta con los límites indicados por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Triangle2D.Area(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            A utility function to calculate area of triangle formed by (x1, y1),   (x2, y2) and (x3, y3) 
            </summary>                
        </member>
        <member name="M:Kriptok.Drawing.Triangle2D.IsInside(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,System.Single,System.Single)">
            <summary>        
            https://stackoverflow.com/questions/2049582/how-to-determine-if-a-point-is-in-a-2d-triangle
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Triangle2D.IsInside(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            A function to check whether point P(x, y) lies inside the triangle formed by A(x1, y1), B(x2, y2) and C(x3, y3)
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Triangle2D.Contains(Kriptok.Drawing.Algebra.Vector2F,System.Int32)">
            <summary>
            Indica si el triángulo contiene el vector indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Triangle2D.Contains(Kriptok.Drawing.Vector2I,System.Int32)">
            <summary>
            Indica si el triángulo contiene el vector indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Triangle3D.ToTriangles(Kriptok.Modes.Context.Base.IProjector,Kriptok.Drawing.BoundF2)">
            <summary>
            Obtiene todos los triángulos bidimensionales en los cuales se debe subdividir un triángulo
            tridimensional para ser renderizado dentro de los límites de la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Triangle3D.ToTriangles(Kriptok.Modes.Context.Base.IProjector)">
            <summary>
            Obtiene todos los triángulos bidimensionales en los cuales se debe subdividir un triángulo
            tridimensional clippeado contra el eje Z de la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Polygon.From(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Lee un <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> y analiza las figuras encontradas.
            Este metodo no triangula las caras superiores e inferiores.
            </summary>
            <param name="gp"></param>                
        </member>
        <member name="M:Kriptok.Drawing.Vertex2.Intersection(Kriptok.Drawing.Vertex2,Kriptok.Drawing.Vertex2,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la intersección entre un segmento definido por un par de vértices 
            de dos dimensiones, y un par de vectores de dos dimensiones.
            
            Puede devolver <see cref="!:null"/> de no intersectarse.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.ColorTransform.Reset">
            <summary>
            Vuelve a poner en la matriz los valores por default.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.ColorTransform.Rotate(System.Int32)">
            <summary>
            Rota la configuración de color actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.ColorTransform.RotateAverage(System.Int32)">
            <summary>
            Rota la configuración de color actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.ColorVector.SetColor(System.UInt32)">
            <summary>
            Establece el color indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.ColorVector.Clear">
            <summary>
            Pone en cero todo el vector.
            </summary>
        </member>
        <member name="T:Kriptok.Drawing.Vector2I">
            <summary>
            Vector bidimensional con valores enteros.
            </summary>    
        </member>
        <member name="F:Kriptok.Drawing.Vector2I.Empty">
            <summary>
            Vector por default con coordenadas 0, 0.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Vector2I.X">
            <summary>
            Coordenada X.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Vector2I.Y">
            <summary>
            Coordenada Y.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Vector2I.#ctor(System.Drawing.Point)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.Vector2I"/>.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.Vector2I.#ctor(System.Drawing.Size)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.Vector2I"/>.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.Vector2I.#ctor(System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.Vector2I"/>.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.Vector2I.ToString">
            <summary>
            No volver a poner el "#if DEBUG" para este método porque se utiliza en los editores de mapas.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Vector2I.Abs">
            <summary>
            Devuelve un nuevo vector con los valores absolutos de las coordenadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Vector2I.Equals(Kriptok.Drawing.Vector2I)">
            <summary>
            Indica si un vector indicado por parámetro tiene las mismas coordenadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Vector2I.Clamp(System.Int32,System.Int32)">
            <summary>
            Clampea ambas coordenadas a los límites especificados.
            </summary>        
        </member>
        <member name="F:Kriptok.Modes.Buffered.BackBuffer.backBuffer">
            <summary>
            Buffer donde se dibujará el fondo.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Buffered.BackBuffer.Scan0">
            <summary>
            Contiene el puntero al primer pixel del buffer.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Buffered.BackBuffer.RenderOn(System.Drawing.Graphics)">
            <summary>
            Renderiza el buffer en el graphics asociado.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Buffered.BackBuffer.Clear">
            <summary>
            Limpia completamente el buffer.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Buffered.BackBuffer.CreateGraphics">
            <summary>
            Crea un objeto Graphics para el buffer.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Buffered.BackBuffer.CreateBlitter(System.Drawing.Rectangle)">
            <summary>
            Crea un blitter para este buffer.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Buffered.BackBuffer.GetTileCanvas">
            <summary>        
            Obtiene un lienzo para renderizar tiles.
            </summary>      
        </member>
        <member name="F:Kriptok.Modes.Buffered.BackBufferGraphics.blitter">
            <summary>
            Objeto que se encarga de transferir los bits renderizados a la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Buffered.BackBufferGraphics.backBufferGraphics">
            <summary>
            Objeto utilizado para dibujar sobre el buffer.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Full3D.Full3DMode">
            <summary>
            Clase base para entornos tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Full3D.Full3DMode.#ctor(System.Drawing.Rectangle)">
            <summary>
            Inicializa el modo 3D para la región indicada.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Full3D.Full3DMode.Full3DRenderContext">
            <summary>
            Contexto de renderización para interfaces tridimensionales.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Full3D.Full3DPlanesMode">
            <summary>
            Modo tridimencional con múltiples planos
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Full3D.Full3DPlanesMode.inverseRegionWidth">
            <summary>
            Utilizado para cálculos de rasterización.        
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Full3D.Full3DPlanesMode.inverseRegionHeight">
            <summary>
            Utilizado para cálculos de rasterización.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Full3D.Full3DPlanesMode.planes">
            <summary>
            Planos actualmente cargados.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Full3D.Full3DPlanesMode.#ctor(System.Drawing.Rectangle)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Full3D.Full3DPlanesMode"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Full3D.Full3DPlanesMode.AddInfiniteGroundTexture(Kriptok.Common.Resource)">
            <summary>
            Agrega un plano con una textura repetida infintamente a la altura cero.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Full3D.Full3DPlanesMode.Full3DPlaneBase">
            <summary>
            Representa un plano tridimencional utilizado en este modo.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Full3D.Full3DPlanesMode.Full3DPlaneBase.#ctor(System.Int32)">
            <summary>
            Inicializa el plano a la altura indicada.
            </summary>            
        </member>
        <member name="F:Kriptok.Modes.Full3D.Full3DPlanesMode.Full3DPlaneBase.InnerScale">
            <summary>
            Escala a aplicar al plano al renderizar.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Full3D.Full3DPlanesMode.Full3DInfiniteTexturePlane">
            <summary>
            Representa un plano tridimencional con una simple textura.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Full3D.Full3DPlanesMode.Full3DInfiniteTexturePlane.#ctor(Kriptok.Common.Resource,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Full3D.Full3DPlanesMode.Full3DInfiniteTexturePlane"/>.
            </summary>            
        </member>
        <member name="T:Kriptok.Modes.Full3D.Cameras.AcumulativeRotationCamera">
            <summary>
            Representa una cámara con rotación "acumulativa". O sea que no obtiene los valores
            de transformación cada frame.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Full3D.Cameras.AcumulativeRotationCamera.rotation">
            <summary>
            Esta natruz es utilizada cuando se utiliza una cámara que puede ser apuntada en cualquier dirección
            desde cualquier dirección.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Full3D.Cameras.AcumulativeRotationCamera.RelativeLocation">
            <summary>
            Indica la posición relativa al objetivo.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Full3D.Cameras.AcumulativeRotationCamera.TargetLocation">
            <summary>
            Posición del objetivo de la cámara (cuando <see cref="!:Distance"/> es una 
            cámara en primera persona.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Full3D.Cameras.AcumulativeRotationCamera.Reset">
            <summary>
            Resetea las transformaciones aplicadas a la cámara 3D.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Full3D.Cameras.AcumulativeRotationCamera.CalculatedAngleX">
            <summary>
            Se utiliza para enderezar la cámara.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Full3D.Cameras.AcumulativeRotationCamera.StraightCamera(System.Single)">
            <summary>
            Endereza suavemente la cámara sobre el ángulo del eje de profundidad.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Full3D.Cameras.RotableTargetCameraBase.Rotation">
            <summary>
            Angulo de rotación de la cámara sobre el ángulo X.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Full3D.Cameras.TargetCameraBase">
            <summary>
            Representa una "cámara" base para implementar que obtiene los valores de transformación
            cada frame.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Full3D.Cameras.FreeTargetCamera.Location">
            <summary>
            Ubicación de la cámara en espacio tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Full3D.Cameras.LookAtTarget.Location">
            <summary>
            Ubicación de la cámara en espacio tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Full3D.Cameras.LookAtTarget.RotationX">
            <summary>
            Angulo de rotación de la cámara sobre el ángulo X.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Full3D.Cameras.LookAtTarget.GetDirectionalVector(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene un vector de dirección para que un objeto mire desde un punto al otro.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Full3D.Cameras.Full3DCameraBase.Init(Kriptok.Modes.Full3D.Full3DMode)">
            <summary>
            Método que se dispara cuando se asigna la cámara a la región.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Full3D.Cameras.Full3DCameraBase.GetCameraLocation">
            <summary>
            Obtiene la ubicación calculada de la cámara en el espacio tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Full3D.Cameras.Full3DCameraBase.GetTransform(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Matrix3x4F)">
            <summary>
            Obtiene la matriz de transformación completa para la cámara.
            </summary>
            <param name="location">Matriz obtenida con el método <see cref="M:Kriptok.Modes.Full3D.Cameras.Full3DCameraBase.GetTargetLocation3D"/>.</param>        
            <param name="rotationTransform">Matriz obtenida con el método <see cref="M:Kriptok.Modes.Full3D.Cameras.Full3DCameraBase.GetRotationTransform"/>.</param>        
        </member>
        <member name="T:Kriptok.Modes.Full3D.Full3DModeBase">
            <summary>
            Clase base para entornos tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Full3D.Full3DModeBase.#ctor(System.Drawing.Rectangle)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Full3D.Full3DModeBase"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Full3D.Full3DModeBase.SetCamera``1(``0)">
            <summary>
            Permite establecer el proceso "cámara" o foco de
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Full3D.Full3DModeBase.GetTargetLocation2D">
            <summary>
            Permite personalizar la coordenada central que se debe utilizar para
            renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Full3D.Full3DModeBase`2">
            <summary>
            Clase base para entornos tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Full3D.Full3DModeBase`2.#ctor(System.Drawing.Rectangle)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Full3D.Full3DModeBase`2"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Full3D.Full3DModeBase`2.NewContext(System.Drawing.Graphics,Kriptok.Drawing.Algebra.Matrix3x4F)">
            <summary>
            Obtiene un nuevo contexto de renderización 3D.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Full3D.Full3DModeBase`2.Render(`1,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Renderiza el entorno tridimensional, así como los objetos que haya.
            </summary> 
        </member>
        <member name="T:Kriptok.Modes.Full3D.Full3DPanel">
            <summary>
            Este componente se utiliza para delegar comportamiento que pueden tener
            paneles de 4 vértices en una interfaz tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Full3D.Full3DPanel.#ctor(Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="!:Pseudo3DVerticalPanel"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Full3D.Full3DPanel.IfVisible(Kriptok.Modes.Context.Base.IRenderContext,System.Action{System.Drawing.PointF[]})">
            <summary>
            Analiza si el panel es visible a la camara.
            
            Se asume que los vértices han sido correctamente transformados al espacio
            tridimensional previamente.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Full3D.Full3DPanel.IfVisible(Kriptok.Modes.Context.Base.IRenderContext,System.Action{Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F})">
            <summary>
            Analiza si el panel es visible a la camara.
            
            Se asume que los vértices han sido correctamente transformados al espacio
            tridimensional previamente.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.GaroudShading.PlaneSample3">
            <summary>
            Estructura utilizada para "samplear" información de un plano texturado en procesos de raycasting.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.GaroudShading.PlaneSample3.U">
            <summary>
            Coordenada U de la textura.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.GaroudShading.PlaneSample3.V">
            <summary>
            Coordenada V de la textura.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.GaroudShading.PlaneSample3.Z">
            <summary>
            Distancia del punto a la cámara. Sólo disponible en modo DEBUG.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.GaroudShading.PlaneSample3.W">
            <summary>
            Distancia del punto "sampleado" a la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.renderPlane">
            <summary>
            Plano utilizado para determinar la inclinación del plano en la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.shadePlane">
            <summary>
            Plano utilizado para determinar el sombreado del plano durante la renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.CustomRenderBounds(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Permite customizar por columna los límites verticales de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.IsVisible(Kriptok.Modes.Pseudo3D.BufferedPseudo3DRenderContext,Kriptok.Drawing.BoundF2)">
            <summary>
            Indica si el polígono es visible, pero además realiza ciertos cálculos para su posterior renderizado.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4">
            <summary>
            Estructura utilizada para "samplear" información de un plano texturado en procesos de raycasting.
            
            Agrega una propiedad extra que es el sammpleo de la incidencia de la luz.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4.innerData">
            <summary>
            Estructura interna básica.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4.U">
            <summary>
            Coordenada U de la textura.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4.V">
            <summary>
            Coordenada V de la textura.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4.W">
            <summary>
            Distancia del punto "sampleado" a la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4.Shade">
            <summary>
            Sombreado del punto "sampleado".
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DMode">
            <summary>
            Clase base para fondos con perspectiva Pseudo3D, que utilizan un buffer
            para renderizar pixel por pixel.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DModeBase`1">
            <summary>
            Clase base para fondos con perspectiva Pseudo3D, que utilizan un buffer
            para renderizar pixel por pixel.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DModeBase`1.regionWidth">
            <summary>
            Ancho de la región. Utilizado en algunos cálculos.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DModeBase`1.regionHeight">
            <summary>
            Alto de la región. Utilizado en algunos cálculos.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DModeBase`1.regionLength">
            <summary>
            Tamaño de la región en la que estoy dibujando.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DModeBase`1.#ctor(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DMode"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DModeBase`1.#ctor(System.Drawing.Rectangle)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DMode"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DModeBase`1.GetScan0">
            <summary>
            Obtiene un puntero a la posición inicial del buffer de pixels.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DModeBase`1.Dispose">
            <summary>
            Libera los recursos de la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DModeBase`1.RasterSolidLine(System.Int32,System.UInt32)">
            <summary>
            Rasteriza una linea de un color determinado.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DModeBase`1.RasterFilterLine(System.Int32,Kriptok.Modes.Ambient.Base.IColorTransformation)">
            <summary>
            Aplica el filtro indicado a la línea indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DModeBase`1.Plot(System.UInt32*,System.UInt32)">
            <summary>
            Pone el pixel indicado del color indicado, pero realiza las validaciones
            necesarias para saber que todo está funcionando perfectamente.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DModeBase`1.RasterColumn(System.UInt32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Dibuja una línea vertical en base a los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Base.BufferedPseudo3DModeBase`1.RasterColumn(System.UInt32,System.Int32,System.UInt32*)">
            <summary>
            Rasteriza una columna de pixels según los parámetros indicados.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Base.IPseudo3DView.SetCamera``1(``0)">
            <summary>
            Establece el objeto sobre el cual se enfoca el modo.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Base.IBufferedPseudo3DMode.RasterFilterLine(System.Int32,Kriptok.Modes.Ambient.Base.IColorTransformation)">
            <summary>
            Aplica el filtro indicado a la línea indicada.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Cameras.AutoShearPseudo3DCamera">
            <summary>
            Cámara para interfaces Pseudo3D que modifica su Y-Shearing para apuntar a un objeto.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.Cameras.AutoShearPseudo3DCamera.Height">
            <summary>
            Altura a la que se encuentra la cámara.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Cameras.AutoShearPseudo3DCameraBase">
            <summary>
            Cámara para interfaces Pseudo3D que modifica su Y-Shearing para apuntar a un objeto.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Cameras.OpenPseudo3DCamera">
            <summary>
            Representa una cámara de Pseudo3D fácil y rápida de implementar.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.Cameras.OpenPseudo3DCamera.Height">
            <summary>
            Altura a la que se encuentra la cámara.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Cameras.Pseudo3DWithMouseLookCamera">
            <summary>
            Cámara en modo Pseudo3D recomendada para interfaces en primera persona.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.Cameras.Pseudo3DWithMouseLookCamera.Height">
            <summary>
            Altura a la que se encuentra la cámara.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Cameras.Pseudo3DWithMouseLookCameraBase">
            <summary>
            Cámara en modo Pseudo3D recomendada para interfaces en primera persona.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Cameras.IPseudo3DCamera">
            <summary>
            Cámara utilizada para definir el comportamiento de la cámara en interfaces Pseudo3D.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Cameras.IPseudo3DCamera.GetYShearing(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext)">
            <summary>
            Obtiene el valor de Y-Shearing que debe presentar la cámara en el siguiente frame.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Cameras.IPseudo3DCamera.GetCameraHeight">
            <summary>
            Obtiene la altura de la cámara (la posición sobre el eje Z).
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Cameras.TargetPseudo3DCameraBase">
            <summary>
            Cámara para interfaces Pseudo3D que tiene un Y-shearing variable.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Cameras.IPseudo3DCameraExtensions.GetCamData(Kriptok.Modes.Pseudo3D.Cameras.IPseudo3DCamera)">
            <summary>
            Obtiene las propiedades de la cámara para renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Cameras.IPseudo3DTarget">
            <summary>
            Los objetos que implementan esta interfaz pueden ser utilizados para ubicar un plano Pseudo3D.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.Base.PlotMode7PlaneBase.Z">
            <summary>
            Altura Y del plano tridimensional sobre el cuál se debe dibujar el plano de Mode7.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.Base.PlotMode7PlaneBase.infiniteScroll">
            <summary>
            Indica si se debe renderizar como un scroll infinito.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.Base.PlotMode7PlaneBase.colorKeyValue">
            <summary>
            Color a mostrar fuera de los límites de la imagen.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.Mode7.Base.PlotMode7PlaneBase.Scale">
            <summary>
            Escala con la cual se debe representar el mapa en Mode7.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Mode7.Base.PlotMode7PlaneBase.OnRendering">
            <summary>
            Permite ejecutar código antes de renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Mode7.Base.PlotMode7PlaneBase.SampleOrDefault(System.Int32,System.Int32)">
            <summary>
            Pone el color correspondiente en el pixel de la pantalla indicado.
            </summary>        
            <param name="x">Coordenada X del pixel en el mapa de textura.</param>
            <param name="y">Coordenada Y del pixel en el mapa de textura.</param>                
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Mode7.Base.PlotMode7PlaneBase.Sample(System.Int32,System.Int32)">
            <summary>
            Permite customizar el color que se dibuja en el la posición actual, modificando el valor y/o
            las coordenadas.
            </summary>        
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.Mode7.Base.PlotMode7PlaneBase.ColorKey">
            <summary>
            Obtiene o establece el "color de fondo" del plano.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Mode7.Base.PlotMode7PlaneBase.CreateBrush(Kriptok.Modes.Pseudo3D.BufferedPseudo3DRenderContext)">
            <summary>
            Obtiene una brocha para rellenar secciones con este plano.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Mode7.Base.PlotMode7PlaneBase.CreateBrushY0(Kriptok.Modes.Pseudo3D.BufferedPseudo3DRenderContext)">
            <summary>
            Obtiene una brocha para rellenar secciones con este plano.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.GdipMode7PlaneShaded">
            <summary>
            Esta clase representa un mapa de Mode7 renderizado con GDI+, pero que 
            se puede ver afectado por el ángulo de la luz.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Mode7.GdipMode7PlaneShaded.GetTextureBrush(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext)">
            <summary>
            Obtiene la textura para renderizar dependiendo de los parámetros de sombreado definidos.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7PlaneShaded.Mode7PlaneShadeBrush">
            <summary>
            Modifica la brocha de tipo <see cref="T:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7PlaneBrush"/> para que reaccione a la
            luz ambiental de la región.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.Mode7PlaneShadingEnum">
            <summary>
            Indica cómo debe sombrearse un plano de Mode7.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.Mode7PlaneShadingEnum.Floor">
            <summary>
            "Piso" del entorno.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.Mode7PlaneShadingEnum.Ceiling">
            <summary>
            "Techo" del entorno.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7ViewY0">
            <summary>
            Representa una vista de Mode7 con un ángulo fijo de -90°.
            
            Es decir, se presenta de forma frontal, similar a un scroll.
            
            Es el modo más restrictivo ya que no presenta rotación en ningún eje.
            
            Por otro lado, es el que renderiza más rápido.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7ViewY0.MinusHalfPI">
            <summary>
            Esta constante permite centralizar un valor para todos los modos pseudo3D que
            mantienen la cámara apuntando en un ángulo fijo.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7ViewY0.Mode7PlaneBrushY0">
            <summary>
            Representa una brocha que toma la información de colores de un plano de Mode7.
            
            Pero que sólo funciona cuando el ángulo es (PI / 2) o (-PI / 2).
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7ViewY0.Pseudo3DBrushY0Base">
            <summary>
            Esta clase se utiliza cuando se desea "pintar" una región de la pantalla con un plano en perspectiva
            tipo "Pseudo3D". Tiene toda la información necesaria para la renderización, además
            de la lógica necesaria.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7ViewY0.Pseudo3DBrushY0Base.relativeY0">
            <summary>
            Valor inicial que debe adoptar <see cref="F:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7ViewY0.Pseudo3DBrushY0Base.relativeY"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7ViewY0.Pseudo3DBrushY0Base.relativeX">
            <summary>
            Coordenada X relativa al centro de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7ViewY0.Pseudo3DBrushY0Base.relativeY">
            <summary>
            Coordenada Y relativa al centro de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7ViewY0.Pseudo3DBrushY0Base.iY">
            <summary>
            Coordenada Y precalculada.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7ViewY0.Pseudo3DBrushY0Base.dX">
            <summary>
            Valor inicial precalculado.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7ViewY0.Pseudo3DBrushY0Base.dIncX">
            <summary>
            Incremento por columna.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7ViewY0.Pseudo3DBrushY0Base.halfRegionWidthFov">
            <summary>
            Mitad del ancho de la pantalla, se guarda para hacer los cálculos de la coordenada Z.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7ViewY0.Pseudo3DBrushY0Base.#ctor(Kriptok.Modes.Pseudo3D.BufferedPseudo3DRenderContext,System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushBase"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7ViewY0.Pseudo3DBrushY0Base.ScanLineDistance">
            <summary>
            La coordenada Z de la línea que se está renderizando en ese momento.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.TiltMode7View">
            <summary>
            Vista de plano en perspectiva que acepta una rotación sobre el eje de profundidad.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.TiltMode7View.regionWidth">
            <summary>
            Ancho de la región donde ser renderiza.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.TiltMode7View.regionHeight">
            <summary>
            Alto de la región donde se renderiza.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Mode7.TiltMode7View.#ctor(System.Drawing.Rectangle,Kriptok.Modes.Pseudo3D.Mode7.Base.PlotMode7PlaneBase)">
            <summary>
            Esta vista renderiza un plano en una perspectiva tridimensional.
            </summary>        
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.TiltMode7View.TiltAngle">
            <summary>
            Obtiene o establece el ángulo de rotación sobre el eje de profundidad.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.GdipMode7Plane`1">
            <summary>
            Mapa de Mode7 que utiliza una <see cref="T:System.Drawing.TextureBrush"/> nativa de GDI+ para renderizar.
            
            Se construye en base a un mapa de tiles. No conserva las animaciones, por obvias razones.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.GdipMode7Plane">
            <summary>
            Mapa de Mode7 que utiliza una <see cref="T:System.Drawing.TextureBrush"/> nativa de GDI+ para renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.GdipMode7Plane.Z">
            <summary>
            Altura Y del plano tridimensional sobre el cuál se debe dibujar el plano de Mode7.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.GdipMode7Plane.Brush">
            <summary>
            Brocha utilizada para renderizar.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.Mode7.GdipMode7Plane.Scale">
            <summary>
            Escala con la cual se debe representar el mapa en Mode7.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.GdipMode7View">
            <summary>
            Vista de plano en perspectiva.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.GdipMode7View.Plane">
            <summary>
            Plano inferior, 
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.GdipMode7View.regionWidth">
            <summary>
            Ancho de la región donde ser renderiza.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.GdipMode7View.topPlane">
            <summary>
            Utilizado cuando el Mode7 también tiene un "techo".
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.GdipMode7View.Location">
            <summary>
            Ubicación del punto central en la renderización de la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Mode7.GdipMode7View.#ctor(System.Drawing.Rectangle,System.Reflection.Assembly,System.String)">
            <summary>
            Esta vista renderiza un plano en una perspectiva tridimensional.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.PlotAnimatedMode7Plane">
            <summary>
            Esta clase representa un bitmap preparador para ser dibujado en Mode7.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.PlotAnimatedMode7Plane.XTiles">
            <summary>
            Para imágenes indexadas, indica cuántos tiles hay en horizontal.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.PlotAnimatedMode7Plane.TileAnimationIndexes">
            <summary>
            Índices de los tiles que deben mostrarse para generar la animación del plano.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.PlotAnimatedMode7Plane.TileAnimation">
            <summary>
            Indica la posición del array del TileAnimationIndexes se encuentra.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.Mode7.PlotAnimatedMode7Plane.AnimationSpeed">
            <summary>
            Velocidad a la cual se deben actualizar los tiles animados.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7PlaneBrush">
            <summary>
            Representa una brocha que toma la información de colores de un plano de Mode7.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7Plane`1">
            <summary>
            Esta clase representa un bitmap preparador para ser dibujado en Mode7.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.TiledMode7Plane`1">
            <summary>
            Vista de plano en perspectiva.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.TiledMode7Plane">
            <summary>
            Vista de plano en perspectiva.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.Mode7.TiledMode7Plane.TileAnimatedSpeed">
            <summary>
            Velocidad a la cual se deben actualizar los tiles animados del mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7View">
            <summary>
            Vista de plano en perspectiva.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7View`1">
            <summary>
            Vista de plano en perspectiva.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7View`1.Plane">
            <summary>
            Plano inferior.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7View`1.topPlane">
            <summary>
            Utilizado cuando el Mode7 también tiene un "techo".
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7View`1.#ctor(System.Drawing.Rectangle,Kriptok.Modes.Pseudo3D.Mode7.Base.PlotMode7PlaneBase)">
            <summary>
            Esta vista renderiza un plano en una perspectiva tridimensional.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Mode7.PlotMode7View`1.CreateBrush(`0,Kriptok.Modes.Pseudo3D.Mode7.Base.PlotMode7PlaneBase)">
            <summary>
            Devuelve una brocha para renderizar los planos en este modo.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.ShadingAlgorithmEnum">
            <summary>
            Algoritmo de sombreado.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.ShadingAlgorithmEnum.None">
            <summary>
            Indica que no debe aplicar sombreados, independientemente de la textura utilizada.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.ShadingAlgorithmEnum.Flat">
            <summary>
            Sombreado "plano". La transformación es por igual a todos los pixels a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.ShadingAlgorithmEnum.Garoud">
            <summary>
            Sombreado con gradiente entre las normales de los vértices.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Pseudo3DRenderizableMetadata">
            <summary>
            Clase con datos para renderizar objetos en entornos Pseudo3D.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.PlotTexturedShapeBase.ScaleZ">
            <summary>
            Se utiliza para ahorrar algunos cálculos, indicando si debe o no escalara verticalmente
            los vértices.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushDataBase">
            <summary>
            Esta clase se utiliza cuando se desea "pintar" una región de la pantalla con un plano en perspectiva
            tipo "Pseudo3D". Tiene toda la información necesaria para la renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushDataBase.#ctor(Kriptok.Common.Box{Kriptok.Drawing.Algebra.Matrix2x3F},System.Single,System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushDataBase"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushDataBase.Round7(System.Single)">
            <summary>
            Redondea un número flotante a 7 decimales.
            </summary>        
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushDataBase.Scale">
            <summary>
            Escala guardada para este brush.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushDataBase.RelativeHeightScale">
            <summary>
            Obtiene una variable a la cual se debe escalar el resultado de <see cref="F:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushDataBase.RelativeHeight"/>
            para saber cuánto se debe aplicar el efecto de neblina.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushDataBase.RelativeHeight">
            <summary>
            Obtiene la altura relativa del plano con respecto a la cámara.
            
            Esta propiedad se puede eliminar y utilizar dentro de los cálculos iniciales.
            Por otro lado, al eliminarla posiblemente quede un algoritmo menos performante.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Brushes.Base.IPseudo3DBrush`1">
            <summary>
            Representa una brocha para "pintar" regiones con un estilo tridimensional plano y Pseudo3D.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Brushes.Base.IPseudo3DBrush`1.Sample">
            <summary>
            Toma el color que se encuentra en el cursor en este momento.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Brushes.Base.IPseudo3DBrush.ResetX(System.Int32)">
            <summary>
            Pone el cursor en la columna X.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Brushes.Base.IPseudo3DBrush.IncX">
            <summary>
            Incrementa la columna de renderización.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushBase">
            <summary>
            Esta clase se utiliza cuando se desea "pintar" una región de la pantalla con un plano en perspectiva
            tipo "Pseudo3D". Tiene toda la información necesaria para la renderización, además
            de la lógica necesaria.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushBase`1">
            <summary>
            Esta clase se utiliza cuando se desea "pintar" una región de la pantalla con un plano en perspectiva
            tipo "Pseudo3D". Tiene toda la información necesaria para la renderización, además
            de la lógica necesaria.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushBase`1.relativeY0">
            <summary>
            Valor inicial que debe adoptar <see cref="F:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushBase`1.relativeY"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushBase`1.relativeX">
            <summary>
            Coordenada X relativa al centro de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushBase`1.relativeY">
            <summary>
            Coordenada Y relativa al centro de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushBase`1.halfRegionWidth">
            <summary>
            Mitad del ancho de la pantalla, se guarda para hacer los cálculos de la coordenada Z.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushBase`1.#ctor(Kriptok.Modes.Pseudo3D.BufferedPseudo3DRenderContext,System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushBase`1.#ctor(Kriptok.Common.Box{Kriptok.Drawing.Algebra.Matrix2x3F},System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushBase"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.Brushes.Base.Pseudo3DBrushBase`1.ScanLineDistance">
            <summary>
            La coordenada Z de la línea que se está renderizando en ese momento.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Brushes.GdipScanlineBrush.v">
            <summary>
            Indica la línea en la que se va a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Brushes.GdipScanlineBrush.s">
            <summary>
            Indica cuánto se debe escalar la brocha al momento de renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Brushes.GdipScanlineBrush.a">
            <summary>
            Matriz utilizada para renderizar.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.BufferedPseudo3DModeBackground">
            <summary>
            Esta clase hace que un fondo común se vea afectado por la neblina, en modos con "back-buffer"
            proyectados en Pseudo-3D.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.PlotViewWrapper">
            <summary>
            Esta vista es sólo para debug y pruebas.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.PlotViewWrapper.PlotFlatVerticalQuadView">
            <summary>
            Representa un panel vertical para planos pseudo3D.        
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.PlotViewWrapper.PlotTexturedVerticalQuadView">
            <summary>
            Representa un panel vertical para planos pseudo3D.        
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalTexturedPanelUVBase`1">
            <summary>
            Este componente se utiliza para delegar comportamiento que pueden tener
            los paneles texturados verticals en una interfaz Pseudo3D.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalTexturedPanelUVBase`1.SetTexture(`0)">
            <summary>
            Establece la textura a utilizar para renderizar.
            </summary>        
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.PlotTexturedVerticalQuadViewBase.v0">
            <summary>
            Coordenada V0 del mapeo de textura para esta figura.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.PlotTexturedVerticalQuadViewBase.texture">
            <summary>
            La textura que realmente va a utilizar para renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.PlotTexturedVerticalQuadViewBase.PlotColumn(Kriptok.Modes.IBufferModeExtensions.Plotter,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Plotea una columna de pixels sin aplicar filtros.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.PlotTexturedVerticalQuadViewBase.Sample(System.Int32,System.Int32)">
            <summary>
            Toma un color de la textura en base a sus coordenadas (U, V).
            </summary>                
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DModeBase`1.Render(System.Drawing.Graphics,Kriptok.Entities.Base.EntityBase[])">
            <summary>
            Renderiza la vista, aplicando las transformaciones correspondientes.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DModeBase`1.Render(`0,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Renderiza el fondo y los objetos pasados por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Pseudo3DModeBase">
            <summary>
            Clase base para fondos con perspectiva Pseudo3D.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Pseudo3DModeBase.regionWidth">
            <summary>
            Ancho de la región de pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Pseudo3DModeBase.regionHeight">
            <summary>
            Alto de la región de pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DModeBase.SetCamera``1(``0)">
            <summary>
            Permite establecer el proceso "cámara" o foco de la cámara.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DModeBase.GetYShearing(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext)">
            <summary>
            Obtiene la modificación sobre el eje Y a realizar para simular "mirar hacia abajo" o "hacia arriba".
            </summary>        
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.rayCastShearing">
            <summary>
            Modificador de la coordenada Y para los rayos utilizados en procesos de RayCasting.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.transform">
            <summary>
            Matriz de transoformaciones. Utilizada para ahorrar recálculos al momento de dibujar vistas.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.rotation">
            <summary>
            Matriz de transformación sobre los ejes de rotación.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.inverseMatrix3D">
            <summary>
            Inversa de la matriz de transformación 3D. Se utiliza para raycasting.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.cameraCoords">
            <summary>
            Coordenadas calculadas de dónde se encuentra la cámara después de aplicar 
            la <see cref="F:Kriptok.Core.Camera.Distance"/>.
            Lo utilizan las <see cref="T:Kriptok.Views.Sprites.DirectionalSpriteView"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.YShearing">
            <summary>
            Modificación vertical del campo de visión que permite simular "mirar hacia abajo y hacia arriba"
            sin realmente rotar la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.RenderClipX">
            <summary>
            Área de renderización sobre el eje X.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.Camera">
            <summary>
            Propiedes de la cámara para renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.ScreenMidPoint">
            <summary>
            Indica el punto medio de la pantalla donde el "techo" pasa a convertirse en "piso",
            o bien tiene una "distancia infinita".
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.DeTransform_XYZ_ZX(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            
            Sólo devuelve, sin embargo, las coordenadas (Z, X), en ese orden.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.DeTransform_X0Z_ZX(System.Single,System.Single)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            
            Se considera la coordenada Y = 0f, por defecto.
            
            Sólo devuelve, sin embargo, las coordenadas (Z, X), en ese orden.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.FillHorizontal(System.Int32,System.Int32,System.Int32,System.Action)">
            <summary>
            Aplica transformaciones de color correspondiente a la renderización
            de líneas horizontales texturadas.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.FillVertical(System.Int32,System.Int32,System.Int32,System.Action)">
            <summary>
            Aplica transformaciones de color correspondiente a la renderización
            de líneas verticales texturadas.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.GetSampleFloorShade">
            <summary>
            Obtiene el nivel de incidencia de la luz para un plano "piso".
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.GetSampleCeilingShade">
            <summary>
            Obtiene el nivel de incidencia de la luz para un plano "techo".
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.GetGdipFloorShade">
            <summary>
            Obtiene el nivel de incidencia de la luz para un plano "piso".
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.GetGdipCeilingShade">
            <summary>
            Obtiene el nivel de incidencia de la luz para un plano "techo".
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.Transform3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.Transform3D_XZ_XZ(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.Transform3D_XZ_X(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.FillFloor(Kriptok.Modes.Pseudo3D.Mode7.GdipMode7Plane)">
            <summary>
            Genera una brocha en base al plano indicado y la utiliza
            para renderizar la región inferior de la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.CenterY">
            <summary>
            Obtiene el valor del centro de la pantalla, pero modificado por el <see cref="F:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.YShearing"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.Dispose">
            <summary>
            Libera los recursos utilizados por la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.LineR(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,System.Action{System.Int32,System.Single})">
            <summary>
            Recorre de un punto al otro del segmento definido por los dos puntos,
            y ejecuta la acción indicada en cada uno.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.ToInt(System.Single)">
            <summary>
            Generaliza la transformación de valores de tipo float a entero
            en interfaces que utilicen este tipo de vistas.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.Rotate(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Rota un vector utilizando la matriz de rotación usada para generar el contexto.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.GetRayY(System.Int32)">
            <summary>
            Obtiene la coordenada Y para la fila indicada de un "rayo" en procesos de RayCasting.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.SetClipX(Kriptok.Drawing.Bound)">
            <summary>
            Establece los límites horizontales de renderización para algunas vistas.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.GetClipX">
            <summary>
            Obtiene los límites horizontales de renderización para algunas vistas.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.ProjectV_X(System.Single,System.Single)">
            <summary>
            Proyecta un vector tridimensional ya transformado, pero
            sólo obtiene la coordenada X.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.ProjectV_Y(System.Single,System.Single)">
            <summary>
            Obtiene la proyección de la coordenada Y, según la coordenada Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.RayCasting(System.Action{Kriptok.Drawing.Algebra.Vector2F})">
            <summary>
            Realiza un paneo columna por columna de la región indicando por parámetro el "rayo" sobre
            el plano XY resultante.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext.RasterRect(Kriptok.Modes.Base.IScanlineBrush,System.Int32,System.Int32,System.Int32,System.Int32,System.Action)">
            <summary>
            Renderiza un rectángulo según los parámetros indicados.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalTexturedPanelUV">
            <summary>
            Este componente se utiliza para delegar comportamiento que pueden tener
            los paneles texturados verticals en una interfaz Pseudo3D.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalTexturedPanelUV.texture">
            <summary>
            Textura que finalmente se va a usar para renderizar en el siguiente frame.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalTexturedPanelUV.CalculateHeight(System.Single,System.Single)">
            <summary>
            Helper para calcular la altura de las columnas de pixels a renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.GdipTexturedVerticalQuadViewBase">
            <summary>
            Represnta una panel vertical para planos pseudo3D.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalTexturedPanelU">
            <summary>
            Este componente se utiliza para delegar comportamiento que pueden tener
            los paneles verticals en una interfaz Pseudo3D.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel">
            <summary>
            Este componente se utiliza para delegar comportamiento que pueden tener
            los paneles verticals en una interfaz Pseudo3D.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel.#ctor(Kriptok.Views.Shapes.Vertices.Vertex25Base,Kriptok.Views.Shapes.Vertices.Vertex25Base,Kriptok.Views.Shapes.Vertices.Vertex25Base,Kriptok.Views.Shapes.Vertices.Vertex25Base)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel.IsInvalid">
            <summary>
            Indica si el panel se encuentra "detrás de la cámara".
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel.ClipZ">
            <summary>
            Clipea los segmentos que describen el panel contra el plano 
            Z = <see cref="F:Kriptok.Drawing.Algebra.Vector3F.InvalidZ"/> de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel.IfVisible(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext,System.Action)">
            <summary>
            Analiza si el panel es visible a la camara.
            
            Se asume que los vértices han sido correctamente transformados al espacio
            pseudo tridimensional previamente.
            
            También se asume que el ángulo sobre el eje de profundidad de la cámara es cero.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel.Project(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext,System.Action{System.Int32,System.Single})">
            <summary>
            Realiza una proyección bidimensional del panel, iterando sobre
            los valores de X que se renderizan en la pantalla, y la coordenada
            Z tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel.Project(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext,System.Boolean,System.Action{System.Int32,System.Single,System.Single,System.Single})">
            <summary>
            Realiza una proyección bidimensional del panel, iterando sobre
            los valores de X que se renderizan en la pantalla, y la coordenada
            Z tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel.Project3D(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext,System.Int32,System.Int32,System.Single,System.Single,System.Action{System.Int32,System.Single,System.Single,System.Single})">
            <summary>
            Proyecta la figura cuando la diferencia entre las coordenadas Z de los
            vértices no se encuentre entre -1 y 1.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel.GetHorizontalBounds(System.Int32)">
            <summary>
            Obtiene los límites horizontales que ocupa el panel.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel.GetCurrentLength">
            <summary>
            Obtiene la longitud del panel.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel.GetCurrentHeight">
            <summary>
            Obtiene la altura actual del panel.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel.GetLightIncidence(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext)">
            <summary>
            Obtiene la incidencia de la luz sobre la figura, de forma optimizada.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel.ClampValues(System.Int32,System.UInt32,System.Int32@,System.Int32@)">
            <summary>
            Permite customizar el área de renderizado vertical.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel.GetNormal">
            <summary>
            Obtiene la normal del plano.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel.IntersectionWithPlane(System.Single)">
            <summary>
            Obtiene la coordenada X de la intersección entre el lado, y el plano Z = z.
            
            Siempre y cuando el valor de Z sea mayor o igual que <see cref="F:Kriptok.Drawing.Algebra.Vector3F.InvalidZ"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Pseudo3DVerticalPanel.ProjectV(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext,System.Single,System.Single,System.Single)">
            <summary>
            Proyecta contra la pantalla un vértice, pero sólo calculando la coordenada Y.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.YBufferDouble">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.YBufferDouble.Height">
            <summary>
            Altura del buffer.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.YBufferDouble.buffer1">
            <summary>
            Buffer inferior.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferDouble.#ctor(System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Pseudo3D.YBufferDouble"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferDouble.Reset">
            <summary>
            Reinicia el estado del buffer.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferDouble.IsVisibleInternal(System.Int32,System.Int32)">
            <summary>
            Indica si el valor indicado por parámetro es visible para la columna indicada.
            </summary> 
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferDouble.ExcludeFromTop(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Excluye una porción del buffer superior definido por el segmento indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferDouble.ExcludeFromBottom(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Excluye una porción del buffer inferior definido por el segmento indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferDouble.GetMinBufferValueFromBottom(System.Int32,System.Int32)">
            <summary>
            Obtiene el menor valor del buffer (o el más alto, si se piensa como altura de abajo
            para arriba), entre los límites indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferDouble.GetMaxBufferValueFromTop(System.Int32,System.Int32)">
            <summary>
            Obtiene el mayor valor del buffer (o el más bajo, si se piensa como altura de arriba
            para abajo), entre los límites indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferDouble.ClampValues(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Ajusta los dos valores indicados por parámetro a los límites
            superior e inferior del Y-Buffer para la columna indicada.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.GdipTexturedVerticalQuadView">
            <summary>
            Represnta una panel vertical para planos pseudo3D.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Voxel.Pseudo3DVoxelTerrainMode">
            <summary>
            Plano básico de un terreno Voxel.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Voxel.Pseudo3DVoxelTerrainMode.yBuffer">
            <summary>
            Buffer de columnas para la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Voxel.Pseudo3DVoxelTerrainMode.voxelTerrain">
            <summary>
            Terreno principal.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Voxel.Pseudo3DVoxelTerrainMode.TiltAngle">
            <summary>
            Rotación de la cámara sobre el eje X. Sólo acepta valores entre:
            <see cref="F:Kriptok.Modes.Pseudo3D.Voxel.Pseudo3DVoxelTerrainMode.minTilt"/> y <see cref="F:Kriptok.Modes.Pseudo3D.Voxel.Pseudo3DVoxelTerrainMode.maxTilt"/>.        
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Voxel.Pseudo3DVoxelTerrainMode.SetRenderDistance(System.Single)">
            <summary>
            Establece la distancia de renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Voxel.VoxelTerrain.GetMaxHeight">
            <summary>
            Obtiene el máximo de altura que puede alcanzar el terreno.
            
            No obstante, este valor no debe ser utilizado en una expresión de cálculo, ya que no es
            para nada performante. Debe obtenerse una vez, guardarse en una variable, y luego ser utilizado.
            </summary>        
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Voxel.VoxelTerrainContext.previewsAngleSin">
            <summary>
            Seno precalculado del ángulo de inclinación de la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.Voxel.VoxelTerrainContext.cameraZ">
            <summary>
            Dato utilizado para cálculos.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Voxel.VoxelTerrainContext.CreateBrush(Kriptok.Modes.Pseudo3D.Voxel.VoxelTerrain,System.Single)">
            <summary>
            Crea una brocha de voxels para los parámetros indicados.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.Voxel.VoxelTerrainContext.ProjectColumn(System.Single,System.Single)">
            <summary>
            Calcula sólo la proyección de la coordenada Y del punto.        
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.Voxel.VoxelYBuffer1">
            <summary>
            Y-Buffer preprado especialmente para entornos de Voxel Terrain.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.BufferedPseudo3DRenderContext.BaseToInt(System.Single)">
            <summary>
            Indica cómo transformar los valores flotantes a enteros para
            renderizar planos pseudo3D.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.BufferedPseudo3DRenderContext.IncToInt(System.Single)">
            <summary>
            Indica cómo transformar los valores flotantes a enteros para
            renderizar planos pseudo3D.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.BufferedPseudo3DRenderContext.RasterFilterLine(System.Int32,Kriptok.Modes.Ambient.Base.IFogTransformation)">
            <summary>
            Aplica el filtro indicado a la línea indicada.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.YBufferBase">
            <summary>
            Representa un buffer de columnas de pixels verticales utilizados en perspectiva pseudo 3D.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.YBufferBase.resetValue">
            <summary>
            Valor al cual se resetean las columnas del buffer.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.YBufferBase.regionHeight">
            <summary>
            Alto de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.YBufferBase.renderHeight">
            <summary>
            Listado del estado actual de las columnas.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferBase.#ctor(System.Drawing.Size,System.UInt16)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Pseudo3D.YBufferBase"/>.
            </summary>
            <param name="size">Tamaño de la pantalla.</param>
            <param name="resetValue">Valor al cual se resetean las columnas del buffer.</param>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferBase.#ctor(System.Int32,System.Int32,System.UInt16)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Pseudo3D.YBufferBase"/>.
            </summary>
            <param name="width">Tamaño de la pantalla.</param>
            <param name="height">Tamaño de la pantalla.</param>
            <param name="resetValue">Valor al cual se resetean las columnas del buffer.</param>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.YBufferBase.Width">
            <summary>
            Ancho del buffer;
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferBase.Reset">
            <summary>
            Reinicia el estado del buffer.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferBase.GetValue(System.Int32)">
            <summary>
            Obtiene el estado actual del buffer para una determinada columna.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferBase.IsVisibleInternal(System.Int32,System.Int32)">
            <summary>
            Indica si el valor indicado por parámetro es visible para la columna indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferBase.IsVisible(System.Int32,System.Int32)">
            <summary>
            Indica si el valor indicado por parámetro es visible para la columna indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferBase.SetRenderHeight(System.Int32,System.Int32)">
            <summary>
            Establece una nueva altura para la columna X.
            </summary>    
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferBase.Exclude(System.Int32,System.Int32)">
            <summary>
            Excluye una línea vertical a partir del punto indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferBase.IfVisible(System.Int32,System.Int32,System.Action{System.UInt16})">
            <summary>
            Ejecuta una acción si se cumple la condición de visibilidad.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferBase.FindMinValue(System.Int32,System.Int32)">
            <summary>
            Obtiene el menor valor entre los límites indicados por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferBase.FindMaxValue(System.Int32,System.Int32)">
            <summary>
            Obtiene el mayor valor entre los límites indicados por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBufferBase.All(System.Func{System.UInt16,System.Boolean})">
            <summary>
            Indica si todas las columnas verticales cumplen una determinada condición.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.YBuffer0">
            <summary>
            Representa un buffer de columnas de pixels verticales utilizados en perspectiva pseudo 3D.
            El buffer se extiende desde la fila X = 0 hasta el final de la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBuffer0.#ctor(System.Drawing.Size)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Pseudo3D.YBuffer0"/>.
            </summary>
            <param name="size">Tamaño de la pantalla.</param>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBuffer0.#ctor(System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Pseudo3D.YBuffer0"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBuffer0.IsVisible(System.Int32,System.Int32)">
            <summary>
            Indica si el valor indicado por parámetro es visible para la columna indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBuffer0.ClampValue(System.Int32,System.Int32)">
            <summary>
            Obtiene el máximo valor para la columna X.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.YBuffer1">
            <summary>
            Representa un buffer de columnas de pixels verticales utilizados en perspectiva pseudo 3D.
            El buffer se extiende desde el final de la pantalla, hacia arriba.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBuffer1.#ctor(System.Drawing.Size)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Pseudo3D.YBuffer1"/>.
            </summary>
            <param name="size">Tamaño de la pantalla.</param>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBuffer1.#ctor(System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Pseudo3D.YBuffer1"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBuffer1.IsVisible(System.Int32,System.Int32)">
            <summary>
            Indica si el valor indicado por parámetro es visible para la columna indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBuffer1.FullyCovered">
            <summary>
            Indica si el buffer está cubierto por completo.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.YBuffer1.ClampValue(System.Int32,System.Int32)">
            <summary>
            Obtiene el mínimo valor para la columna X.
            </summary>        
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.PlotFlatVerticalQuadViewBase.renderColor">
            <summary>
            Color que se va a utilizar para renderizar el siguiente frame.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.PlotFlatVerticalQuadViewBase.FillVertical(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext,System.Int32,System.Single,System.Single)">
            <summary>
            Este método, en una futura implementación, debería ser "abstract",
            para que existiesen distintas implementaciones Gdip y Plot.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Pseudo3D.PlotTexturedHorizontalTriView">
            <summary>
            Esta clase algún día se podría definir como abstracta y eliminar el <see cref="!:PlotTexturedHorizontalTriView.Render(Graphics, ScreenRegion)"/>
            ya que no aporta nada más que como test.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.PlotTexturedHorizontalTriView.swapped">
            <summary>
            No exactamente la funcionalidad del swappeo de caras, pero bastante parecido.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.PlotTexturedHorizontalTriView.inverseTextureScale">
            <summary>
            Inversa de la escala para aplicar a la textura.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Pseudo3D.PlotTexturedHorizontalTriView.texture">
            <summary>
            Textura a utilizar para rellenar el polígono.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.PlotTexturedHorizontalTriView.TextureScale">
            <summary>
            Escala para aplicar a la textura.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Pseudo3D.PlotTexturedHorizontalTriView.IsInvalid">
            <summary>
            Indica si la es o no "inválida", es decir, si está completamente detrás
            de la cámara.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Pseudo3D.PlotTexturedHorizontalTriView.ScaleZ">
            <summary>
            Se utiliza para ahorrar algunos cálculos, indicando si debe o no escalara verticalmente
            los vértices.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Screen.SubScreenMode">
            <summary>
            Representa una sub-sección de la pantalla sin ningún tipo de proyección.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Screen.SubScreenRegionBase">
            <summary>
            Región de la "pantalla completa".
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Screen.SubScreenRegionBase.priority">
            <summary>
            Prioridad de la región en la pantalla. Esta propiedad indica el orden en que las distintas
            regiones deben ser renderizadas en pantalla.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Screen.SubScreenRegionBase.Priority">
            <summary>
            Prioridad de la región en la pantalla. Esta propiedad indica el orden en que las distintas
            regiones deben ser renderizadas en pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Screen.SubScreenRegionBase.Dispose">
            <summary>
            Libera los recursos utilizados por el modo.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Screen.FullScreenRegion">
            <summary>
            Región de la "pantalla completa".
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Screen.SubScreenModeBase">
            <summary>
            Representa una sub-sección de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Screen.SubScreenModeBase.background">
            <summary>
            Imagen utilizada para renderizar un fondo estático en la región.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Screen.SubScreenModeBase.blitter">
            <summary>
            Objeto que se encarga de enviar los bits del background a la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Screen.SubScreenModeBase.RenderBackground(System.Drawing.Graphics)">
            <summary>
            Renderiza el modo actual de la región, y los objetos allí registrados.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Screen.SubScreenModeBase.SetBackground(System.Action{Kriptok.Modes.Screen.ScreenRegionBackground})">
            <summary>
            Inicializa el background.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Screen.SubScreenModeBase.SetBackground(Kriptok.Common.Resource)">
            <summary>
            Limpia el fondo, y establece una imagen de fondo.
            Si la imagen no tiene el mismo tamaño que la pantalla, no se escala.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Screen.SubScreenModeBase.SetBackground(System.Reflection.Assembly,System.String)">
            <summary>
            Limpia el fondo, y establece una imagen de fondo.
            Si la imagen no tiene el mismo tamaño que la pantalla, no se escala.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Screen.SubScreenModeBase.ClearBackground">
            <summary>
            Detiene la renderización del background y lo libera de memoria.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Screen.SubScreenModeBase.GetGdipRotationAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            
            Rotación sobre el ángulo Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Screen.SubScreenModeBase.GetDirectionAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo en que el objeto está "mirando" o "apuntando" en ambientes bidimensinoales.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Screen.SubScreenModeBase.OutOfRegion(Kriptok.Drawing.Bound2)">
            <summary>
            Este método sólo puede ser utilizado por
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Screen.ScreenRegionBackground">
            <summary>
            Representa un modo simple de "pantalla".
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Screen.ScreenRegionBackground.regionBackground">
            <summary>
            Imagen generada para blittear en la pantalla como "fondo" de la región.        
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Screen.ScreenRegionBackground.#ctor(Kriptok.Drawing.DirectBitmap)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Screen.ScreenRegionBackground"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Screen.ScreenRegionBackground.Blit(System.Reflection.Assembly,System.String,System.Int32,System.Int32)">
            <summary>
            Copia los bits de una imagen sobre la imagen generada.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Screen.ScreenRegionBackground.BlitCentered(System.Reflection.Assembly,System.String)">
            <summary>
            Copia los bits de una imagen sobre el fondo, pero centrándola.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Screen.ScreenRegionBackground.Draw(System.Reflection.Assembly,System.String,System.Int32,System.Int32)">
            <summary>
            Dibuja el mapa de bits en la posición indicada, contemplando
            la transparencia de la imagen.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Screen.ScreenRegionBackground.Draw(System.Reflection.Assembly,System.String,System.Int32,System.Int32,Kriptok.Drawing.ColorTransform)">
            <summary>
            Dibuja el mapa de bits en la posición indicada, contemplando la configuración
            de color y la transparencia de la imagen.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Screen.ScreenRegionBackground.FillStretched(System.Reflection.Assembly,System.String)">
            <summary>
            Dibuga el mapa de bits indicado estirándolo o contrayéndolo para que llene toda la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Screen.ScreenRegionBackground.Plot(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Establece el color de un pixel del fondo.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Screen.ScreenRegionBackground.UsingGraphics(System.Action{System.Drawing.Graphics})">
            <summary>
            Permite realizaroperaciones de GDI+ sobre el fondo.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Screen.ScreenRegionBackground.Sample(System.Int32,System.Int32)">
            <summary>
            Devuelve el color que se encuentra en el pixel de las coordenadas indicadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Screen.ScreenRegionBackground.BlitRect(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Dibuja un rectángulo sobre el fondo.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Screen.ScreenRegionBackground.Clear">
            <summary>
            Limpia el fondo.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Scroll.TiledScrollLayer">
            <summary>
            Esta vista es como una scroll view simple, pero optimizada. Por tanto,
            no permite transformaciones.
            
            Esta clase hay que mantenerla interna, ya que de lo contrario tal vez podría
            darse el caso de que se utilice en un modo de scroll que acepte rotaciones.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.TiledScrollLayer.tileCanvas">
            <summary>
            Lienzo donde se renderizarán los tiles.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.TiledScrollLayer.OnScanLine(System.Int32)">
            <summary>
            Se sellan todos los métodos que pudieran modificar el renderizado.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Scroll.TiledScrollLayer.TileAnimatedSpeed">
            <summary>
            Velocidad a la cual se deben actualizar los tiles animados del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.TiledScrollLayer.BlitTile(Kriptok.Maps.Tiles.Base.ITile,System.Int32,System.Int32)">
            <summary>
            Dibuja un tile en el buffer de la vista.
            
            Definido a este nivel, ya que es el que tiene acceso al backBuffer.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Scroll.Axonometric.Base.AxonometricModeBase">
            <summary>
            Clase base para modos de scroll que no necesariamente usen layers para renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.Axonometric.Base.AxonometricModeBase.GetGdipRotationAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            </summary>      
        </member>
        <member name="M:Kriptok.Modes.Scroll.Axonometric.Base.AxonometricModeBase.GetDirectionAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo en que el objeto está "mirando" o "apuntando" en ambientes bidimensinoales.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Scroll.Axonometric.Base.AxonometricModeBase.GetCameraHeight">
            <summary>
            Obtiene la "altura" de la cámara en el entorno axonométrico.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Scroll.Axonometric.Base.IAxonometricScroll">
            <summary>
            Representa un modo 
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.Axonometric.Base.IAxonometricScroll.GetCameraHeight">
            <summary>
            Obtiene la "altura" de la cámara en el entorno axonométrico.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Scroll.Axonometric.AxonometricModeLayered">
            <summary>
            Modo de scroll con perspectiva y transformaciones axonometricas.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.Axonometric.AxonometricModeLayered.GetGdipRotationAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            </summary>  
        </member>
        <member name="M:Kriptok.Modes.Scroll.Axonometric.AxonometricModeLayered.GetDirectionAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo en que el objeto está "mirando" o "apuntando" en ambientes bidimensinoales.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Scroll.Axonometric.AxonometricModeLayered.GetCameraHeight">
            <summary>
            Obtiene la "altura" de la cámara en el entorno axonométrico.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Scroll.Axonometric.AxonometricModeTiled">
            <summary>
            Modo de renderización axonométrica basado en un mapa de tiles, pero que no se puede rotar ni transformar.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.Axonometric.AxonometricModeTiled.GetCameraHeight">
            <summary>
            Obtiene la "altura" de la cámara en el entorno axonométrico.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.Axonometric.AxonometricModeTiled.GetGdipRotationAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.Axonometric.AxonometricModeTiled.GetDirectionAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo en que el objeto está "mirando" o "apuntando" en ambientes bidimensinoales.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Scroll.Axonometric.AxonometricTexture">
            <summary>
            Tipo de textura especial que para rellenar áreas "rectangulares" en lugar de triangulares.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.Axonometric.AxonometricMapGridGenerator.views">
            <summary>
            Colección donde se almacenan las vistas genreadas durante la creción del mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Scroll.Axonometric.AxonometricMapHorizontalView">
            <summary>
            Cuadrilátero horizontal para modos axonométricas.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.Axonometric.AxonometricMapHorizontalView.owner">
            <summary>
            Vista principal a la que pertenece.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.Axonometric.AxonometricMapVerticalView.owner">
            <summary>
            Vista principal a la que pertenece.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.Base.LayeredScrollModeBase.MainLayer">
            <summary>
            Capa principal del modo Scroll, es necesario ya que muchos cálculos para las demás capas pueden
            depender de los cálculos de esta.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.Base.LayeredScrollModeBase.subLayers">
            <summary>
            Capas a recalcular (todas menos <see cref="F:Kriptok.Modes.Scroll.Base.LayeredScrollModeBase.MainLayer"/>).
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.Base.LayeredScrollModeBase.allLayers">
            <summary>
            Capas que conforman el modo scroll.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.Base.LayeredScrollModeBase.Render(Kriptok.Modes.Context.Base.ScrollRenderContextBase,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Renderiza todas las vistas de la región.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Scroll.Base.LayeredScrollModeBase.AddLayer``1(``0)">
            <summary>
            Agrega otra capa a la última capa agregada del modo scroll.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Scroll.Base.LayeredScrollModeBase.SortLayers">
            <summary>
            Ordena las capas según su prioridad.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Scroll.Base.IScrollTarget">
            <summary>
            Los objetos que implementan esta interfaz pueden ser utilizados para ubicar un plano de scroll.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.Base.ScrollModeBase.target">
            <summary>
            Objeto en el que se enfoca el plano de scroll.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Scroll.Base.ScrollModeBase.Assembly">
            <summary>
            Referencia al ensamblado en el que se declaró la clase.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.Base.ScrollModeBase.Render(Kriptok.Modes.Context.Base.ScrollRenderContextBase,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Renderiza todas las vistas de la región.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Scroll.Base.ScrollModeBase.NewRenderContext(Kriptok.Drawing.Algebra.Vector2F,System.Drawing.Graphics)">
            <summary>
            Genera un nuevo contexto de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Scroll.Base.ScrollModeBase.SetTarget(Kriptok.Modes.Scroll.Base.IScrollTarget)">
            <summary>
            Permite establecer el proceso "cámara" o foco del plano de Scroll.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Scroll.Base.ScrollModeBase.SetTarget(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Permite establecer el proceso "cámara" o foco del plano de Scroll.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Scroll.Base.ScrollModeBase.Round(System.Single)">
            <summary>
            Esta funcionalidad es compartida en varios lados, por eso se aísla. No cambiar NUNCA.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Scroll.Base.ScrollModeBase.Round2(System.Single,System.Single)">
            <summary>
            Esta funcionalidad es compartida en varios lados, por eso se aísla. No cambiar NUNCA.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.Base.ScrollModeBase.GetGdipRotationAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            
            Rotación sobre el ángulo Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Scroll.Base.ScrollModeBase.GetDirectionAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo en que el objeto está "mirando" o "apuntando" en ambientes bidimensinoales.
            </summary>        
        </member>
        <member name="F:Kriptok.Modes.Scroll.Base.GdipScrollLayerBase.Antialias">
            <summary>
            Esta propiedad le indica a la vista de Scroll que debe utilizar un objeto
            de tipo TextureBrush para dibujar el fondo. Esto genera un "smoothing" en la imagen,
            similar al que se puede ver cuando se utiliza un scroll infinito en alguna de las 
            direcciones.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.Base.GdipScrollLayerBase.#ctor(Kriptok.Common.Resource,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Scroll.Base.GdipScrollLayerBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.Base.GdipScrollLayerBase.#ctor(System.Drawing.Bitmap)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Scroll.Base.GdipScrollLayerBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.Base.GdipScrollLayerBase.#ctor(System.Drawing.Bitmap,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Scroll.Base.GdipScrollLayerBase"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.Base.ScrollLayerBase.Owner">
            <summary>
            Modo de renderización al cual pertenece esta capa.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.Base.ScrollLayerBase.Location">
            <summary>
            Modificadores de ubicación de renderizado.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.Base.ScrollLayerBase.Scale">
            <summary>
            Dimensionamiento del plano de scroll.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.Base.ScrollLayerBase.ReScale">
            <summary>
            Redimensionamiento del plano de scroll.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.Base.ScrollLayerBase.infinite">
            <summary>
            Indica si el plano es infinito en alguno de sus ejes o en los dos.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.Base.ScrollLayerBase.InfiniteMultipliers">
            <summary>
            Valores por los cuales multiplicar el offset de las coordenadas 
            dependiendo de si debe scrollear horizontal o verticalmente.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Scroll.Base.ScrollLayerBase.Priority">
            <summary>
            Prioridad con la cual se debe dibujar.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Scroll.Base.ScrollLayerBase.Size">
            <summary>
            Obtiene el tamaño de la imagen o mapa utilizada para renderizar esta capa.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.Base.ScrollLayerBase.Dispose">
            <summary>
            Limpia los recursos de la vista.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Scroll.Scroll3DMode">
            <summary>
            Controlador principal que se encarga de manejar los planos de scroll cuando se encuentra en modo Scroll 3D.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Scroll.TileScrollFixedMode">
            <summary>
            Modo de Scroll que no puede ser rotado.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.TileScrollFixedMode.FixedScrollContext.outOfScreenChecker">
            <summary>
            Utilizado para evaluar si un objeto está fuera de la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.GdipBrushScanlineScrollLayer.OnRendering(Kriptok.Modes.Context.Base.IRenderContext)">
            <summary>
            Permite ejecutar código antes de renderizar el siguiente frame.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.BufferedScrollLayerBase.#ctor(System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Scroll.BufferedScrollLayerBase"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Scroll.BufferedScrollLayerBase.OnRendering">
            <summary>
            Se ejecuta este evento al momento de renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.BufferedScrollLayerBase.OnScanLine(System.Int32)">
            <summary>
            Permite ejecutar código por cada línea de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Scroll.BufferedScrollLayerBase.ClearBuffer">
            <summary>
            Limpia el buffer
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.BufferedScrollLayerBase.GetTileCanvas">
            <summary>        
            Obtiene un lienzo para renderizar tiles.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.BufferedScrollTransformedLayerBase.#ctor(System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Scroll.TransformedScrollLayer"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Scroll.BufferedScrollTransformedLayerBase.SampleFor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Permite modificar la coordenada de la cual se va a tomar el color para renderizar el pixel.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Scroll.TileScrollModeBase">
            <summary>
            Representa un modo scroll construido en base a un mapa de tiles, que no acepta
            transformaciones de ningún tipo, pero renderiza mucho más rápido.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.TileScrollModeBase.CreateMapGrid">
            <summary>
            Crea una grilla de durezas con la información del mapa base.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Scroll.TileScrollModeBase.GetMapFullSize">
            <summary>
            Obtiene el tamaño total del mapa. Es decir, cantidad de tiles x tamaño de tile.
            </summary>        
        </member>
        <member name="P:Kriptok.Modes.Scroll.TileScrollModeBase.TileAnimatedSpeed">
            <summary>
            Velocidad a la cual se deben actualizar los tiles animados del mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Scroll.RpgTiledScrollMode">
            <summary>
            Modo específico para renderizar mapas de tiles con elementos que pueden renderizarse 
            sobre las entidades del juego, dependiendo de la "altura".
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.RpgTiledScrollMode.mapTileCountX">
            <summary>
            Ancho del mapa (en tiles.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.RpgTiledScrollMode.layerRow">
            <summary>
            Representa una línea de tiles en una capa "superior", utilizada para tiles que se ven
            por encima de los objetos.
            
            Es necesario que sea una imagen aparte para que al dibujar la fila completa de tiles
            se aplique la transaparencia correspondiente.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Scroll.RpgTiledScrollMode.TileRow">
            <summary>
            Representa cada línea de tiles a renderizar en capas superiores.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Scroll.ScrollMode">
            <summary>
            Controlador principal que se encarga de manejar los planos de scroll cuando se encuentra en modo Scroll.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.GdipBrushScrollLayer.textureBrush">
            <summary>
            Utilizado para el scroll infinito.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.GdipBrushScrollLayer.#ctor(Kriptok.Common.Resource,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Scroll.GdipBrushScrollLayer"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.GdipBrushScrollLayer.#ctor(System.Reflection.Assembly,System.String,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Scroll.GdipBrushScrollLayer"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.GdipBrushScrollLayer.#ctor(System.Drawing.Bitmap)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Scroll.GdipBrushScrollLayer"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.TransformedScrollLayer.#ctor(System.Drawing.Rectangle,Kriptok.Drawing.FastBitmap,Kriptok.Drawing.Vector2{System.Boolean})">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Scroll.TransformedScrollLayer"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Modes.Scroll.TransformedTiledScrollLayer.TileAnimatedSpeed">
            <summary>
            Velocidad a la cual se deben actualizar los tiles animados del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.GdipImageScrollLayer.bitmap">
            <summary>
            Utilizado cuando debe dibujar un bitmap.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.GdipImageScrollLayer.width">
            <summary>
            Ancho de la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Scroll.GdipImageScrollLayer.height">
            <summary>
            Alto de la imagen.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.GdipImageScrollLayer.#ctor(Kriptok.Common.Resource,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Scroll.GdipImageScrollLayer"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.GdipImageScrollLayer.#ctor(System.Reflection.Assembly,System.String,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Scroll.GdipImageScrollLayer"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Scroll.GdipImageScrollLayer.#ctor(System.Drawing.Bitmap,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Scroll.GdipImageScrollLayer"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Base.DepthCameraBase">
            <summary>
            Una cámara base para interfaces tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Base.IDepthView.SetFog(System.UInt32,System.UInt32,System.Drawing.Color)">
            <summary>
            Establece una neblina que afecta los objetos a la distancia en la región.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Base.IDepthCamera.Distance">
            <summary>
            Obtiene la distancia que debe mantener la cámara hasta el objetivo.
            </summary>        
        </member>
        <member name="P:Kriptok.Modes.Base.IDepthCamera.FieldOfView">
            <summary>
            Modificador del campo de visión.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Base.DepthModeBase">
            <summary>
            Clase base para interfaces tridimensionales.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Base.DepthModeBase.camera">
            <summary>
            Propiedades de la cámara a utilizar en la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Base.DepthModeBase.SpriteSizeModifier">
            <summary>
            Indica una constante numérica por la cual todos los tamaños de los sprites de Mode7 deben
            multiplicarse.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Base.DepthModeBase.SetSpriteScaleModifier(System.Single)">
            <summary>
            Establece el multiplicador de escala para figuras bidimencionales en espacios tridimencionales.
            </summary>        
        </member>
        <member name="F:Kriptok.Modes.Base.DepthModeBase.Background">
            <summary>     
            Vista de fondo a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Base.DepthModeBase.fog">
            <summary>
            Efecto de neblina a aplicar al renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Base.DepthModeBase.fullFogValue">
            <summary>
            Valor de color que adopta la neblina cuando se aplica al 100%.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Base.DepthModeBase.fullFogColor">
            <summary>
            Color que adopta la neblina cuando se aplica al 100%.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Base.DepthModeBase.SetBackground(Kriptok.Modes.ModeBackground)">
            <summary>
            Establece el fondo para dibujar.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Base.DepthModeBase.SetBackground(Kriptok.Views.Shapes.Base.ShapeViewBase)">
            <summary>
            Establece el fondo para dibujar.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Base.DepthModeBase.RenderBackground(Kriptok.Modes.Context.Base.IRenderContext)">
            <summary>
            Renderiza el fondo de la vista.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Base.DepthModeBase.BackgroundOrFullFog(Kriptok.Modes.Context.Base.IRenderContext)">
            <summary>
            Si tiene asignado un <see cref="F:Kriptok.Modes.Base.DepthModeBase.Background"/>, lo renderiza, de lo contrario,
            de tener asignado un efecto de "neblina" en la región.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Base.DepthModeBase.RenderBackgroundIfNotNull(Kriptok.Modes.Context.Base.IRenderContext)">
            <summary>
            Limpia la pantalla, o dibuja la vista en <see cref="F:Kriptok.Modes.Base.DepthModeBase.Background"/> si correspondiese.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Base.DepthModeBase.Dispose">
            <summary>
            Libera los recursos de la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Base.DepthModeBase.GetFogFilter">
            <summary>
            Obtiene el filtro de "neblina" que se esté utilizando en ese momento.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Base.DepthModeBase.SetFog(System.UInt32,System.UInt32,System.Drawing.Color)">
            <summary>
            Establece una neblina que afecta los objetos a la distancia en la región.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Base.DepthModeBase.SetFog(Kriptok.Modes.Ambient.BlackFogEffect)">
            <summary>
            Establece un filtro de colores para sombreado y neblina de los objetos renderizados en la región.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Base.DepthModeBase.SetDepthCamera(Kriptok.Modes.Base.IDepthCamera)">
            <summary>
            Permite establecer las propiedades de la cámara a utilizar durante la renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Base.DepthModeBase.GetGdipRotationAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Rotación sobre el ángulo X.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Base.DepthModeBase.GetDirectionAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo en que el objeto está "mirando" o "apuntando" en ambientes bidimensinoales.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Base.DepthModeBase.RotationWithMouseHorizontally(System.Int32)">
            <summary>
            Obtiene un valor para rotar la cámara horizontalmente. Y luego la vuelve a centrar
            utilizando el valor indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Base.DepthModeBase.RotationWithMouseVertically(System.Int32)">
            <summary>
            Obtiene un valor para rotar la cámara verticalmente. Y luego la vuelve a centrar
            utilizando el valor indicado por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Base.IScanlineBrush">
            <summary>
            Representa una brocha que renderiza línea por línea.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Base.IScanlineBrush.ResetY(System.Int32)">
            <summary>
            Indica que se va a renderizar en la línea Y.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Base.IScanlineBrush.IncY">
            <summary>
            Incrementa la línea en la que se está renderizando.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Base.IScanlineBrush.ScanLineDistance">
            <summary>
            Obtiene la distancia a la cual se está renderizando cada línea.        
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Context.Base.ITranslatableRenderContext">
            <summary>
            Indica que se trata de un contexto que para ubicar figuras tridimencionales, traslada el centro de la pantalla,
            en lugar de usar perspectiva.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Context.Base.Render3DContextBase">
            <summary>
            Contexto base de renderización para interfaces tridimensionales.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.Render3DContextBase.HalfWidthFov">
            <summary>
            Campo precalculado para aplicar "field of view".
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.Render3DContextBase.regionHeightF">
            <summary>
            Alto de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.Render3DContextBase.rayCastXSubstraction">
            <summary>
            Valor utilizado para reacomodar la coordenada X en la pantalla cuando se traza un rayo para
            intersectar con un plano.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.Render3DContextBase.rayCastYSubstraction">
            <summary>
            Valor utilizado para reacomodar la coordenada Y en la pantalla cuando se traza un rayo para
            intersectar con un plano.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.Render3DContextBase.currentRenderingDistance">
            <summary>
            Almacena el valor de la distancia hasta la cámara (en entornos tridimensicnales)
            a la cual se está renderizando actualmente.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.Render3DContextBase.fog">
            <summary>
            Indica si no se está utilizando un efecto de neblina.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.Render3DContextBase.spriteScaleMultiplier">
            <summary>
            Multiplicador de escala para sprites y otras vistas bidimensionales.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.Render3DContextBase.FieldOfView">
            <summary>
            Valor inverso del field of view, utilizado para cálculos de raycasting.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.Render3DContextBase.InverseFov">
            <summary>
            Valor inverso del field of view, utilizado para cálculos de raycasting.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.Render3DContextBase.noFog">
            <summary>
            Indica si para este frame no hay efectos de neblina.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.GetTransform">
            <summary>
            Obtiene la matriz de transformación de la cámara, para figuras tridimensionales.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.DeTransform(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.DeTransform(System.Single,System.Single,System.Single)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.DeTransform_XYZ_ZX(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            
            Sólo devuelve, sin embargo, las coordenadas (Z, X), en ese orden.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.DeTransform_X0Z_ZX(System.Single,System.Single)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            
            Se considera la coordenada Y = 0f, por defecto.
            
            Sólo devuelve, sin embargo, las coordenadas (Z, X), en ese orden.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.GetAmbientColorFilter">
            <summary>
            Filtro de color heredado de las configuraciones de la región.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.Render3DContextBase.AngleZDegrees">
            <summary>
            Valor en grados del ángulo Z de la cámara.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Context.Base.Render3DContextBase.CenterX">
            <summary>
            Coordenada X del centro de la pantalla (es virtual ya que en la clase derivada se 
            recalcula en base al Y-Shearing).
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Context.Base.Render3DContextBase.CenterY">
            <summary>
            Coordenada Y del centro de la pantalla (es virtual ya que en la clase derivada se 
            recalcula en base al Y-Shearing).
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.SetDistance(System.Single)">
            <summary>
            Establece la distancia de renderización que se estará utilizando.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.SetNoDistance">
            <summary>
            Establece una distancia precalculada para que parezca que no se aplica perspectiva al renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.GetCalculatedScale">
            <summary>
            Calcula la escala a la que se debe escalar un gráfico dada su distancia hasta la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.ApplyTransformations(Kriptok.Views.Gdip.FlipEnum)">
            <summary>
            Aplica transformaciones correspondientes al estado actual de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.NoFog">
            <summary>
            Indica si no debe aplicar filtros de color según neblina.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.GetTextureFog">
            <summary>
            Obtiene el valor actual de la incidencia de la neblina para
            objetos tridimensionales texturados.        
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.GetFullFogDistance">
            <summary>
            Obtiene la distancia a partir de la cual la transformación de color 
            por distancia (neblina, por ejemplo) renderiza un polígono completamente 
            opacado por el efecto.
            
            Puede utilizarse para realizar polygon culling, de ser necesario.
            </summary>     
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.Render(Kriptok.Views.Base.GdipViewBase)">
            <summary>
            Renderiza una vista de Gdip. Utilizando el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.Render(Kriptok.Views.Shapes.GdipShapeView)">
            <summary>
            Renderiza una forma de Gdip. Utilizando el patrón Double-Dispatch.
            
            Para las figuras que heredan de <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/> debería utilizarse en lugar
            de <see cref="M:Kriptok.Modes.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.TransformVertices(Kriptok.Views.Shapes.VertexCollection)">
            <summary>
            Aplica las transformacinoes correspondientes a los vértices indicados por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.GetShapeTranform(Kriptok.Views.Shapes.Base.FastShapeViewBase)">
            <summary>
            Obtiene una matriz de transformación para la figura indicada por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.GetRayX(System.Int32)">
            <summary>
            Obtiene la coordenada X para la columna indicada de un "rayo" en procesos de RayCasting.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.GetRayY(System.Int32)">
            <summary>
            Obtiene la coordenada Y para la fila indicada de un "rayo" en procesos de RayCasting.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.IsVisible(Kriptok.Views.Shapes.Base.IVisible,Kriptok.Drawing.BoundF2)">
            <summary>
            Esta interfaz es tridimensional, por lo que se valida utilizando <see cref="M:Kriptok.Views.Shapes.Base.IVisible.IsVisible3D(Kriptok.Modes.Context.Base.IProjector,Kriptok.Drawing.BoundF2)"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render3DContextBase.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)">
            <summary>
            Renderiza un objeto según corresponda en la perspectiva que se está utilizando.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Context.Base.IPseudo3DRenderContext">
            <summary>
            Este contexto agrega la posibilidad de utilizar texturas de tipo GDIP
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IPseudo3DRenderContext.FillHorizontal(System.Int32,System.Int32,System.Int32,System.Action)">
            <summary>
            Aplica transformaciones de color correspondiente a la renderización
            de líneas horizontales texturadas.
            </summary>  
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IPseudo3DRenderContext.FillVertical(System.Int32,System.Int32,System.Int32,System.Action)">
            <summary>
            Aplica transformaciones de color correspondiente a la renderización
            de líneas verticales texturadas.
            </summary>  
        </member>
        <member name="T:Kriptok.Modes.Context.Base.IRenderBufferContext">
            <summary>
            Este contexto se utiliza para cargar el buffer de los renderizables
            a, bueno... a renderizar...
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderBufferContext.Transform3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderBufferContext.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderBufferContextExtensions.GetRegionBounds(Kriptok.Modes.Context.Base.IRenderBufferContext)">
            <summary>
            Obtiene los límites de la región en la que se va a renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Context.Base.Render2DContextBase">
            <summary>
            Clase utilizada para unificar comportamientos entre los modos de Screen y Scroll.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render2DContextBase.IsVisible(Kriptok.Views.Shapes.Base.IVisible,Kriptok.Drawing.BoundF2)">
            <summary>
            Esta interfaz es tridimensional, por lo que se valida utilizando <see cref="M:Kriptok.Views.Shapes.Base.IVisible.IsVisible3D(Kriptok.Modes.Context.Base.IProjector,Kriptok.Drawing.BoundF2)"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render2DContextBase.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)">
            <summary>
            Renderiza un objeto según corresponda en la perspectiva que se está utilizando.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.Render2DContextBase.TransformVertices(Kriptok.Views.Shapes.VertexCollection)">
            <summary>
            Aplica las transformacinoes correspondientes a los vértices indicados por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Context.Base.RenderContextBase">
            <summary>
            Contexto de renderización del frame.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.#ctor(System.Drawing.Graphics,Kriptok.Core.ScreenRegion)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Context.Base.RenderContextBase"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Modes.Context.Base.RenderContextBase.Graphics">
            <summary>
            Lienzo donde se renderizan las vistas.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Context.Base.RenderContextBase.Region">
            <summary>
            Región de la pantalla donde se está renderizando.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.RenderContextBase.CalculatedLightSource">
            <summary>
            Foco de luz calculado en base al ángulo de cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.ApplyTransformations(Kriptok.Views.Gdip.FlipEnum)">
            <summary>
            Aplica transformaciones correspondientes al estado actual de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.GetVertexPriority(Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Obtiene la prioridad de un vértice tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.GetLinePriority(Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Obtiene la prioridad para dibujar la figura definida por dos puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.GetFacePriority(Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Obtiene la prioridad para dibujar la figura definida por tres puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.GetFacePriority(Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Obtiene la prioridad para dibujar la figura definida por cuatro puntos 
            (no necesariamente sobre el mismo plano).
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.UpdateLightSource(Kriptok.Drawing.Algebra.Matrix3x4F)">
            <summary>
            Actualiza la fuente de la luz ambiental. La lógica es la siguiente:
            
            En un framework común, a los gráficos poligonales se le aplicarían dos transformaciones.
              1) Rotación/Escalamiento/etc.
                 * * * * Cálculo de incidencia de luz sobre las caras * * * *
              2) Transformaciones de la cámara.
              
            En mi caso, todas las transformaciones se aplican juntas, por tanto, al momento de calcular la
            incidencia de la luz, también tendría que aplicar las transformaciones de la cámara al vector
            que indica el origen de la luz.
              * * * * Adapto la incidencia de la luz a la cámara * * * *
              2) Aplico todas las transformaciones al polígono.
              * * * * Cálculo de incidencia de luz sobre las caras * * * *
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.Transform3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.Render(Kriptok.Views.Base.GdipViewBase)">
            <summary>
            Renderiza una vista de Gdip. Utilizando el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.Render(Kriptok.Views.Shapes.GdipShapeView)">
            <summary>
            Renderiza una forma de Gdip. Utilizando el patrón Double-Dispatch.
            
            Para las figuras que heredan de <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/> debería utilizarse en lugar
            de <see cref="M:Kriptok.Modes.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.TransformVertices(Kriptok.Views.Shapes.VertexCollection)">
            <summary>
            Aplica las transformacinoes correspondientes a los vértices indicados por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.GetShapeTranform(Kriptok.Views.Shapes.Base.FastShapeViewBase)">
            <summary>
            Obtiene una matriz de transformación para la figura indicada por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.Fill(Kriptok.Views.Shapes.IGdipTexture,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Utiliza una textura para llenar una determinada región de la pantalla, con las
            coordenadas indicadas por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.Fill(Kriptok.Views.Shapes.IGdipTexture,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint)">
            <summary>
            Utiliza una textura para llenar una determinada región de la pantalla, con las
            coordenadas indicadas por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.FilterVisible``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Recibe una lista de objetos, y determina si vale la pena evaluar su prioridad basado en su visibilidad.        
            </summary>        
            <typeparam name="T">Tipo de vistas a renderizar.</typeparam>
            <param name="views">Lista de vistas a renderizar.</param>        
            <returns>Devuelve la lista de vistas a renderizar que son visibles en el contexto indicado.</returns>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.IsVisible(Kriptok.Views.Shapes.Base.IVisible,Kriptok.Drawing.BoundF2)">
            <summary>
            Evalúa si una figura es visible actualmente, para saber si debe agregarla al buffer de renderización.
            </summary>   
        </member>
        <member name="M:Kriptok.Modes.Context.Base.RenderContextBase.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)">
            <summary>
            Renderiza un objeto según corresponda en la perspectiva que se está utilizando.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Context.Base.ScrollRenderContextBase">
            <summary>
            Contexto base de renderización de modos bidimensionales con scroll.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.ScrollRenderContextBase.Sin">
            <summary>
            Seno del ángulo Z de la cámara.
            Utilizado para no recalcular cada vez que sea necesario.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.ScrollRenderContextBase.Cos">
            <summary>
            Coseno del ángulo Z de la cámara.
            Utilizado para no recalcular cada vez que sea necesario.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.ScrollRenderContextBase.transform">
            <summary>
            Matriz de transformación de la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.ScrollRenderContextBase.Rotation">
            <summary>
            Ángulo de rotación de la cámara para el renderizado.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Base.ScrollRenderContextBase.CameraLocation">
            <summary>
            Ubicación del objeto en base al cual se renderiza el plano de scroll.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.ScrollRenderContextBase.UsingMatrix(System.Action{System.Drawing.Drawing2D.Matrix})">
            <summary>
            Permite ejecutar una porción de código transformando la
            <see cref="T:Kriptok.Drawing.Algebra.Matrix2x3F"/> en una <see cref="T:System.Drawing.Drawing2D.Matrix"/> y liberándola después.
            </summary> 
        </member>
        <member name="M:Kriptok.Modes.Context.Base.ScrollRenderContextBase.Transform3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.ScrollRenderContextBase.CustomTransform(Kriptok.Drawing.Algebra.Matrix2x3F)">
            <summary>
            Permite aplicar transformaciones extra al momento de renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.ScrollRenderContextBase.TranslateWithTransformations(System.Drawing.Drawing2D.Matrix,System.Single,System.Single)">
            <summary>
            Traslada la matriz al centro para transformarla.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.ScrollRenderContextBase.TransformWithTransformations(System.Drawing.Graphics)">
            <summary>
            Transformaciones sobre el objeto "Graphics".
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Context.Base.IRenderContext">
            <summary>
            Contexto actual de renderización.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Context.Base.IRenderContext.Graphics">
            <summary>
            Lienzo donde se renderizan las vistas.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContext.GetAngleToCamera2D(Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Obtiene el ángulo desde la cámara, para vistas de tipo <see cref="T:Kriptok.Views.Sprites.DirectionalSpriteView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContext.Render(Kriptok.Views.Base.GdipViewBase)">
            <summary>
            Renderiza una vista de Gdip. Utilizando el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContext.Render(Kriptok.Views.Shapes.GdipShapeView)">
            <summary>
            Renderiza una forma de Gdip. Utilizando el patrón Double-Dispatch.
            
            Para las figuras que heredan de <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/> debería utilizarse en lugar
            de <see cref="M:Kriptok.Modes.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContext.FillPolygon(System.UInt32,System.Drawing.PointF[])">
            <summary>
            Renderiza el polígono con el material indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContext.UsingSolidBrush(System.UInt32,System.Action{System.Drawing.SolidBrush})">
            <summary>
            Abre un contexto para la utilización de una brocha de color sólido.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContext.ApplyTransformations(Kriptok.Views.Gdip.FlipEnum)">
            <summary>
            Aplica transformaciones correspondientes al estado actual de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContext.GetLightIncidence(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene la incidencia de la luz ambiental calculada en base a los
            vértices tridimencionales indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContext.Fill(System.Drawing.PointF[],System.Action)">
            <summary>
            Aplica transformaciones de color correspondiente a la renderización
            de polígonos texturados.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContext.Fill(Kriptok.Views.Shapes.IGdipTexture,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Utiliza una textura para llenar una determinada región de la pantalla, con las
            coordenadas indicadas por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContext.Fill(Kriptok.Views.Shapes.IGdipTexture,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint)">
            <summary>
            Utiliza una textura para llenar una determinada región de la pantalla, con las
            coordenadas indicadas por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)">
            <summary>
            Renderiza un objeto según corresponda en la perspectiva que se está utilizando.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Context.Base.IRenderContext3D">
            <summary>
            Contexto actual de renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContext3D.SetDistance(System.Single)">
            <summary>
            Establece la distancia de renderización que se estará utilizando.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContextExtensions.RenderAxis(Kriptok.Modes.Context.Base.IRenderContext,System.Single)">
            <summary>
            Renderiza el eje de coordenadas para tener 
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContextExtensions.Project3D(Kriptok.Modes.Context.Base.IRenderContext,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Proyecta un vector tridimensional a las dos dimensiones de la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContextExtensions.ProjectEdge(Kriptok.Modes.Context.Base.IRenderContext,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Proyecta un segmento definido por dos vértices contra la pantalla. Y los recorta contra
            el plano Z = <see cref="F:Kriptok.Drawing.Algebra.Vector3F.InvalidZ"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContextExtensions.GetElapsedTime(Kriptok.Modes.Context.Base.IRenderContext)">
            <summary>
            Obtiene el tiempo transcurrido desde el último frame.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IRenderContextExtensions.RandF(Kriptok.Modes.Context.Base.IRenderContext,System.Single,System.Single)">
            <summary>
            Obtiene un número aleatorio de punto flotante entre los valores indicados por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Context.Base.IProjector">
            <summary>
            Interfaz que debe implementarse con la forma de proyectar las coordenadas tridimensionales en 
            el plano bidimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IProjector.ProjectP(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Proyecta un vector tridimensional contra la pantalla en un <see cref="T:System.Drawing.PointF"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IProjector.ProjectV(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Proyecta un vector tridimensional contra la pantalla en un <see cref="T:Kriptok.Drawing.Algebra.Vector3F"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IProjector.ProjectV(Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Proyecta un vector tridimensional contra la pantalla en un <see cref="T:Kriptok.Drawing.Algebra.Vector3F"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IProjector.GetVertexPriority(Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Obtiene la prioridad de un vértice tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IProjector.GetLinePriority(Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Obtiene la prioridad para dibujar la figura definida por dos puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IProjector.GetFacePriority(Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Obtiene la prioridad para dibujar la figura definida por tres puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IProjector.GetFacePriority(Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Obtiene la prioridad para dibujar la figura definida por cuatro puntos 
            (no necesariamente sobre el mismo plano).
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IProjector.TransformVertices(Kriptok.Views.Shapes.VertexCollection)">
            <summary>
            Aplica las transformacinoes correspondientes a los vértices indicados por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IProjector.GetShapeTranform(Kriptok.Views.Shapes.Base.FastShapeViewBase)">
            <summary>
            Obtiene una matriz de transformación para la figura indicada por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IProjector.FilterVisible``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Recibe una lista de objetos, y determina si vale la pena evaluar su prioridad basado en su visibilidad.        
            </summary>        
            <typeparam name="T">Tipo de vistas a renderizar.</typeparam>
            <param name="views">Lista de vistas a renderizar.</param>        
            <returns>Devuelve la lista de vistas a renderizar que son visibles en el contexto indicado.</returns>
        </member>
        <member name="M:Kriptok.Modes.Context.Base.IProjector.IsVisible(Kriptok.Views.Shapes.Base.IVisible,Kriptok.Drawing.BoundF2)">
            <summary>
            Indica si un objeto pasado por parámetro es visible para el contexto.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Context.Base.IProjectorExtensions">
            <summary>
            Funcionalidades extendidas del proyector.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Context.AxonometricModeTiledContext">
            <summary> 
            Contexto de renderización de modo scroll Axonométrico sin transformciones.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Context.AxonometricRenderContext">
            <summary>
            Contexto de renderización de modo scroll axonométrico general.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.AxonometricRenderContext.scroll">
            <summary>
            Región de pantalla sobre la que se está renderizando.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.AxonometricRenderContext.cameraCoords">
            <summary>
            Coordenadas calculadas de dónde se encuentra la cámara.
            Lo utilizan las <see cref="T:Kriptok.Views.Sprites.DirectionalSpriteView"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.AxonometricRenderContext.cameraZ">
            <summary>
            Altura de la cámara. Guardada para realizar cálculos.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.AxonometricRenderContext.ProjectTransformed(Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Este método sólo tiene sentido para vistas bidimensionales y para
            la perspectiva isométrica.
            </summary>    
        </member>
        <member name="M:Kriptok.Modes.Context.AxonometricRenderContext.GetLinePriority(Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Obtiene la prioridad para dibujar la figura definida por dos puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.AxonometricRenderContext.GetFacePriority(Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Obtiene la prioridad para dibujar la figura definida por tres puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.AxonometricRenderContext.GetFacePriority(Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Obtiene la prioridad para dibujar la figura definida por cuatro puntos 
            (no necesariamente sobre el mismo plano).
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.AxonometricRenderContext.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.AxonometricRenderContext.Render(Kriptok.Views.Base.GdipViewBase)">
            <summary>
            Renderiza una vista de Gdip. Utilizando el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.AxonometricRenderContext.Render(Kriptok.Views.Shapes.GdipShapeView)">
            <summary>
            Renderiza una forma de Gdip. Utilizando el patrón Double-Dispatch.
            
            Para las figuras que heredan de <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/> debería utilizarse en lugar
            de <see cref="M:Kriptok.Modes.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.AxonometricRenderContext.GetShapeTranform(Kriptok.Views.Shapes.Base.FastShapeViewBase)">
            <summary>
            Obtiene una matriz de transformación para la figura indicada por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Context.Full3DRenderContextBase`2">
            <summary>
            Contexto de renderización para interfaces tridimensionales.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Full3DRenderContextBase`2.owner">
            <summary>
            Objeto al cual pertenece el contexto de renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Full3DRenderContextBase`2.cameraAngle">
            <summary>
            Indica el ángulo de la cámara para la renderización de imágenes direccionales
            como <see cref="T:Kriptok.Views.Sprites.DirectionalSpriteView"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Full3DRenderContextBase`2.inverseMatrix3D">
            <summary>
            Matriz inversa de tranformación.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.Full3DRenderContextBase`2.transform">
            <summary>
            Matriz de transformaciones. Utilizada para ahorrar recálculos al momento de dibujar vistas.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Full3DRenderContextBase`2.DeTransform_XYZ_ZX(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            
            Sólo devuelve, sin embargo, las coordenadas (Z, X), en ese orden.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Full3DRenderContextBase`2.DeTransform_X0Z_ZX(System.Single,System.Single)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            
            Se considera la coordenada Y = 0f, por defecto.
            
            Sólo devuelve, sin embargo, las coordenadas (Z, X), en ese orden.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Full3DRenderContextBase`2.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Full3DRenderContextBase`2.Transform3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Full3DRenderContextBase`2.GetCameraLocation">
            <summary>
            Obtiene la ubicación calculada de la cámara en el espacio tridimensional.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Full3DRenderContextBase`2.GetRotationAngleInDegrees(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo de rotación para sprites y otras figuras planas.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Context.ScreenProjector">
            <summary>
            Este proyector arma una perspectiva simple que no genera errores de renderización (por tener polígonos detrás
            de la cámara), pero tampoco crea una perspectiva realista.
            
            De hecho, a larga distancia, puede generar errores de renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.ScreenProjector.RenderShapes(Kriptok.Modes.Context.Base.ITranslatableRenderContext,Kriptok.Views.Shapes.GdipShapeView)">
            <summary>
            Método generado para reutilizar código.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Context.Scroll3DRenderContext">
            <summary>
            Contexto de renderización de modos scroll.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Scroll3DRenderContext.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Scroll3DRenderContext.GetScrollCoords(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Calcula las coordenadas de Scroll manteniendo la coordenada Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.Scroll3DRenderContext.Render(Kriptok.Views.Base.GdipViewBase)">
            <summary>
            Renderiza una vista de Gdip. Utilizando el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Scroll3DRenderContext.Render(Kriptok.Views.Shapes.GdipShapeView)">
            <summary>
            Renderiza una forma de Gdip. Utilizando el patrón Double-Dispatch.
            
            Para las figuras que heredan de <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/> debería utilizarse en lugar
            de <see cref="M:Kriptok.Modes.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.Scroll3DRenderContext.GetShapeTranform(Kriptok.Views.Shapes.Base.FastShapeViewBase)">
            <summary>
            Obtiene una matriz de transformación para la figura indicada por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Context.ScrollRenderContext">
            <summary>
            Contexto de renderización de modos scroll.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.ScrollRenderContext.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.ScrollRenderContext.GetScrollCoords(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Calcula las coordenadas de Scroll manteniendo la coordenada Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Context.ScrollRenderContext.Render(Kriptok.Views.Base.GdipViewBase)">
            <summary>
            Renderiza una vista de Gdip. Utilizando el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.ScrollRenderContext.Render(Kriptok.Views.Shapes.GdipShapeView)">
            <summary>
            Renderiza una forma de Gdip. Utilizando el patrón Double-Dispatch.
            
            Para las figuras que heredan de <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/> debería utilizarse en lugar
            de <see cref="M:Kriptok.Modes.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.ScrollRenderContext.GetShapeTranform(Kriptok.Views.Shapes.Base.FastShapeViewBase)">
            <summary>
            Obtiene una matriz de transformación para la figura indicada por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Context.ScreenRenderContext">
            <summary>
            Contexto de renderización de toda la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Context.ScreenRenderContext.projector">
            <summary>
            El projector no puede estar como "sólo lectura" aunque se cree en el constructor,
            ya que se trata de una estructura, no de un objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.ScreenRenderContext.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.ScreenRenderContext.Render(Kriptok.Views.Base.GdipViewBase)">
            <summary>
            Renderiza una vista de Gdip. Utilizando el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.ScreenRenderContext.Render(Kriptok.Views.Shapes.GdipShapeView)">
            <summary>
            Renderiza una forma de Gdip. Utilizando el patrón Double-Dispatch.
            
            Para las figuras que heredan de <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/> debería utilizarse en lugar
            de <see cref="M:Kriptok.Modes.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.ScreenRenderContext.GetShapeTranform(Kriptok.Views.Shapes.Base.FastShapeViewBase)">
            <summary>
            Obtiene una matriz de transformación para la figura indicada por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Context.ScreenRenderContext.Transform3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.IBufferModeExtensions.Plotter.Sample">
            <summary>
            Obtiene el color que hay actualmente en la posición en la que se encuentra el <see cref="T:Kriptok.Modes.IBufferModeExtensions.Plotter"/>.
            </summary>            
        </member>
        <member name="T:Kriptok.Modes.Ambient.Masks.GreenFilterColorMask">
            <summary>
            Aplica una máscara que acentúa el color verde.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.GreenFilterColorMask.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.Masks.RedFilterColorMask"/>.
            </summary>   
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.GreenFilterColorMask.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.Masks.RedFilterColorMask"/>.
            </summary>        
            <param name="intensity">Valor entre 0 y 1 que indica la intensidad de la máscara.</param>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.GreenFilterColorMask.Transform(System.UInt32,System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Ambient.Masks.BlueFilterColorMask">
            <summary>
            Aplica una máscara que acentúa el color azul.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.BlueFilterColorMask.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.Masks.BlueFilterColorMask"/>.
            </summary>   
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.BlueFilterColorMask.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.Masks.BlueFilterColorMask"/>.
            </summary>        
            <param name="intensity">Valor entre 0 y 1 que indica la intensidad de la máscara.</param>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.BlueFilterColorMask.Transform(System.UInt32,System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Ambient.Masks.RedFilterColorMask">
            <summary>
            Aplica una máscara que acentúa el color rojo.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.RedFilterColorMask.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.Masks.RedFilterColorMask"/>.
            </summary>   
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.RedFilterColorMask.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.Masks.RedFilterColorMask"/>.
            </summary>        
            <param name="intensity">Valor entre 0 y 1 que indica la intensidad de la máscara.</param>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.RedFilterColorMask.Transform(System.UInt32,System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Ambient.Masks.IntensityMaskBase">
            <summary>
            Aplica una máscara dependiendo de una intensidad determinada.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.IntensityMaskBase.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.Masks.IntensityMaskBase"/>.
            </summary>                
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.IntensityMaskBase.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.Masks.IntensityMaskBase"/>.
            </summary>        
            <param name="intensity">Valor entre 0 y 1 que indica la intensidad de la máscara.</param>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.IntensityMaskBase.GetIntensity(System.Single)">
            <summary>
            Permite customizar el cálculo de intensidad.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.IntensityMaskBase.Transform(System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>              
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.IntensityMaskBase.Transform(System.UInt32,System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Ambient.Masks.DarkColorMask">
            <summary>
            Aplica una máscara que oscurece todos los colores.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.DarkColorMask.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.Masks.DarkColorMask"/>.
            </summary>   
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.DarkColorMask.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.Masks.DarkColorMask"/>.
            </summary>        
            <param name="intensity">Valor entre 0 y 1 que indica la intensidad de la máscara.</param>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.DarkColorMask.Transform(System.UInt32,System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Ambient.Masks.ColorMask">
            <summary>
            Aplica una máscara al color indicado.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Ambient.Masks.ColorMask.Orange">
            <summary>
            Mascara que aplica una paleta anaranjada.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Ambient.Masks.ColorMask.mask">
            <summary>
            Mascara a aplicar.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.ColorMask.#ctor(System.UInt32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.Masks.ColorMask"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.ColorMask.Transform(System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Ambient.Masks.BrightColorMask">
            <summary>
            Aplica una máscara que aclara todos los colores.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.BrightColorMask.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.Masks.BrightColorMask"/>.
            </summary>            
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.BrightColorMask.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.Masks.BrightColorMask"/>.
            </summary>        
            <param name="intensity">Valor entre 0 y 1 que indica la intensidad de la máscara.</param>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.BrightColorMask.Transform(System.UInt32,System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>                      
        </member>
        <member name="T:Kriptok.Modes.Ambient.Masks.LightColorMask">
            <summary>
            Aplica una máscara que aclara u oscurece el color, dependiendo
            de un parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Ambient.Masks.OrangeColorMask">
            <summary>
            Aplica una máscara anaranjada al color indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Masks.OrangeColorMask.Transform(System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>              
        </member>
        <member name="T:Kriptok.Modes.Ambient.Base.IFlatColorTransformation">
            <summary>
            Este es un modificador que indica que una transformación de color puede
            por algún motivo, completamente anular el color de origen, y en ese caso,
            aplicar un color por default.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Base.IFlatColorTransformation.FlatColorEffect(System.UInt32@)">
            <summary>
            Este método indica si, dada la aplicación del filtro, dado cualquier color, el resultado
            será el del color del efecto aplicado en su máxima expresión.
            
            Devuelve el color resultante de aplicar totalmente el efecto, para poder dibujar lo que
            corresponta con un color sólido, y no necesariamente transformarlo.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Ambient.Base.IFlatColorTransformation.NoEffect">
            <summary>
            Indica si debe 
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Ambient.Base.IFlatColorTransformation.GetFullEffectColor">
            <summary>
            Obtiene directamente el color del efecto aplicado al 100%.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Ambient.Base.IFlatColorTransformationExtensions">
            <summary>
            Extensiones de la interfaz <see cref="T:Kriptok.Modes.Ambient.Base.IFlatColorTransformation"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Ambient.Base.IDistanceColorTransformation">
            <summary>
            Representa una transformación de color que depende de la distancia
            a la cual se está renderizando.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Base.IDistanceColorTransformation.Transform(System.UInt32,System.Single)">
            <summary>
            Obtiene el color transformado según la distancia a la cual se encuentra.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Base.IDistanceColorTransformation.GetFullEffectDistance">
            <summary>
            Obtiene la distancia a partir de la cual la transformación renderiza
            un polígono completamente opacado por el efecto.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Ambient.Base.IFogTransformation">
            <summary>
            Aplica una transformación de color según la distancia a la cual se está renderizando.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Base.IFogTransformation.SetDistance(System.Single)">
            <summary>
            Establece la distancia de renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Base.IFogTransformation.GetFogColorEffect">
            <summary>
            Obtiene el valor actual de la incicencia de la neblina para
            objetos tridimensionales texturados.        
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Ambient.Base.IColorTransformation">
            <summary>
            Aplica una transformación a un color.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Base.IColorTransformation.Transform(System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Filters.FogColorFilter.SetDistance(System.Single)">
            <summary>
            Establece la distancia de renderización (utilizado normalmente para 
            efectos de neblina).
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Filters.FogColorFilter.Transform(System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Filters.FogColorFilter.GetFogColorEffect">
            <summary>
            Obtiene el valor actual de la incicencia de la neblina para
            objetos tridimensionales texturados.        
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.Filters.FogColorFilter.GetFullEffectColor">
            <summary>
            Obtiene directamente el color del efecto aplicado al 100%.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Ambient.Filters.FogColorFilter.GetFullEffectDistance">
            <summary>
            Obtiene directamente el color del efecto aplicado al 100%.
            </summary>        
        </member>
        <member name="T:Kriptok.Modes.Ambient.ColorFogEffect">
            <summary>
            Permite establecer un efecto de neblina de color para figuras que se renderizan lejos 
            de la cámara en un entorno tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Ambient.ColorFogEffect.color">
            <summary>
            Color de la niebla.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Ambient.ColorFogEffect.currentMask">
            <summary>
            Máscara de luminiscencia de la neblina de color.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Ambient.ColorFogEffect.allMasks">
            <summary>
            Guarda todas las máscaras de colores, para no tener que recalcularlas.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.ColorFogEffect.#ctor(System.Single,System.Single,System.UInt32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.ColorFogEffect"/>.
            </summary>
            <param name="fromDistance">Distancia a partir de la cual se debe empezar a aplicar la neblina.</param>
            <param name="toDistance">Distancia hasta la cual debe aplicarse la neblina. Más allá de esta distancia, 
            se aplicará sólo el color de la neblina correspondiente.</param>
            <param name="color">Color de la niebla.</param>
        </member>
        <member name="M:Kriptok.Modes.Ambient.ColorFogEffect.ScaleColor(System.UInt32,System.UInt32)">
            <summary>
            Obtiene el color transformado.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.ColorFogEffect.GetFogValue(System.Single)">
            <summary>
            Devuelve el valor de neblina a aplicar según la distancia indicada.
            </summary>    
        </member>
        <member name="M:Kriptok.Modes.Ambient.ColorFogEffect.GetFullEffectColor">
            <summary>
            Obtiene el color que se debe mostrar cuando la neblina está aplicada al 100%,
            en este caso particular, el color negro.
            </summary>      
        </member>
        <member name="T:Kriptok.Modes.Ambient.WhiteFogEffect">
            <summary>
            Permite establecer un efecto de neblina blanca para figuras que se renderizan lejos 
            de la cámara en un entorno tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.WhiteFogEffect.#ctor(System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.WhiteFogEffect"/>.
            </summary>
            <param name="fromDistance">Distancia a partir de la cual se debe empezar a aplicar la neblina.</param>
            <param name="toDistance">Distancia hasta la cual debe aplicarse la neblina. Más allá de esta distancia, 
            se aplicará sólo el color de la neblina correspondiente.</param>
        </member>
        <member name="M:Kriptok.Modes.Ambient.WhiteFogEffect.ScaleColor(System.UInt32,System.UInt32)">
            <summary>
            Obtiene el color transformado.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.WhiteFogEffect.GetFullEffectColor">
            <summary>
            Obtiene el color que se debe mostrar cuando la neblina está aplicada al 100%,
            en este caso particular, el color negro.
            </summary>      
        </member>
        <member name="T:Kriptok.Modes.Ambient.BlackFogEffect">
            <summary>
            Permite establecer un efecto de neblina negra para figuras que se renderizan lejos 
            de la cámara en un entorno tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Ambient.BlackFogEffect.fromDistance">
            <summary>
            Distancia a partir de la cual se debe empezar a aplicar la neblina.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Ambient.BlackFogEffect.toDistance">
            <summary>
            Distancia hasta la cual debe aplicarse la neblina. Más allá de esta distancia, se aplicará
            sólo el color de la neblina correspondiente.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Ambient.BlackFogEffect.inverseDistance">
            <summary>
            Valor inverso de la distancia para algunos cálculos.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.BlackFogEffect.#ctor(System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Modes.Ambient.BlackFogEffect"/>.
            </summary>
            <param name="fromDistance">Distancia a partir de la cual se debe empezar a aplicar la neblina.</param>
            <param name="toDistance">Distancia hasta la cual debe aplicarse la neblina. Más allá de esta distancia, 
            se aplicará sólo el color de la neblina correspondiente.</param>
        </member>
        <member name="M:Kriptok.Modes.Ambient.BlackFogEffect.Transform(System.UInt32,System.Single)">
            <summary>
            Obtiene el color transformado según la distancia a la cual se encuentra.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.BlackFogEffect.ScaleColor(System.UInt32,System.UInt32)">
            <summary>
            Obtiene el color transformado.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.BlackFogEffect.GetFogValue(System.Single)">
            <summary>
            Devuelve el valor de neblina a aplicar según la distancia indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Ambient.BlackFogEffect.GetFullEffectColor">
            <summary>
            Obtiene el color que se debe mostrar cuando la neblina está aplicada al 100%,
            en este caso particular, el color negro.
            </summary>        
        </member>
        <member name="M:Kriptok.Modes.Ambient.BlackFogEffect.CreateFogEffect(System.UInt32,System.UInt32,System.Drawing.Color)">
            <summary>
            Crea un objeto de efecto de niebla para una región.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.BlackFogEffect.GetFullEffectDistance">
            <summary>
            Obtiene la distancia a partir de la cual la transformación renderiza
            un polígono completamente opacado por el efecto.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.Ambient.RegionAmbience">
            <summary>
            Esto no puede dejar de ser un struct, porque es utilizado para mantener una copia
            de seguridad del ambiente en <see cref="!:M8RenderContext.SavingAmbientState(Action)"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Ambient.RegionAmbience.InnerLightSource">
            <summary>
            Indica desde dónde viene el foco de luz de ambiente para los espacios 3D/Mode7.
            
            Es internal por cuestiones de optimización.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Ambient.RegionAmbience.AbsoluteLight">
            <summary>
            Indica si la incidencia de la luz "negativa" debe ser
            convertida a positiva.
            </summary>
        </member>
        <member name="M:Kriptok.Modes.Ambient.RegionAmbience.SetLightSource(System.Single,System.Single,System.Single)">
            <summary>
            Permite especificar el origen de la luz de ambiente para los espacios 3D/Mode7.
            </summary>
        </member>
        <member name="P:Kriptok.Modes.Ambient.RegionAmbience.LightSource">
            <summary>
            Devuelve un vector indicando la dirección desde la que se percive la luz ambiental.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.Ambient.RegionAmbience.DisableAmbientLight">
            <summary>
            Indica o establece si está activada o no la "luz ambiental" en la región.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.BufferedBlitterBase">
            <summary>
            Transfiere los bits de color desde un "backbuffer" a la pantalla.
            </summary>
        </member>
        <member name="T:Kriptok.Modes.ModeBackground">
            <summary>
            Esta clase sirve para convertir vistas comunes en "skyboxes", u otras
            vistas que pudieran utilizarse para renderizar fondos.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.ModeBackground.shape">
            <summary>
            Figura que voy a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Modes.ModeBackground.vertices">
            <summary>
            Vértices de la vista que se transformarán, ya que la vista en sí no tiene un "Owner".
            </summary>
        </member>
        <member name="T:Kriptok.Queries.Queries.IMouseLocationContext">
            <summary>
            Indica que la región puede obtener y devolver las coordenadas del mouse en el plano.
            
            Sólo funciona en determinados modos.
            </summary>
        </member>
        <member name="M:Kriptok.Queries.Queries.IMouseLocationContext.GetMouseLocation">
            <summary>
            Obtiene la ubicación del mouse proyectado al modo de renderización correspondiente.
            </summary>
        </member>
        <member name="T:Kriptok.Queries.Queries.IOutOfScreenContext">
            <summary>
            Esta interfaz es implementada por modos de pantalla que permiten evaluar si determinados tipos de
            vista se encuentran fuera de la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Queries.Queries.IOutOfScreenContext.OutOfRegion(Kriptok.Drawing.Bound2)">
            <summary>
            Indica si el rectángulo indicado por parámetro se encuentra fuera de la pantalla.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Queries.Base.IQuery`1">
            <summary>
            Consulta de colisiones entre un objeto y un tipo de objetos.
            </summary>    
        </member>
        <member name="T:Kriptok.Entities.Queries.MouseScrollLocationQuery">
            <summary>
            Consulta para obtener las coordenadas del mouse en el plano de scroll.
            
            Sólo funciona para modos de pantalla determinados.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Queries.OutOfScreenQuery">
            <summary>
            Consulta para descubrir si el objeto se encuentra fuera de la pantalla.
            
            Sólo funciona para modos de pantalla determinados.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.JumpFallStatusEnum">
            <summary>
            Estados posibles del objeto.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallStatusEnum.None">
            <summary>
            No se está moviendo.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallStatusEnum.Jumping">
            <summary>
            Está saltando, moviéndose hacia arriba.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallStatusEnum.Falling">
            <summary>
            Está cayendo, moviéndose hacia abajo.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.JumpFallHandlerY">
            <summary>
            Controlador de salto para entornos tipo screen/scroll en que los objetos se muevan 
            sobre el plano XY.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.JumpFallHandlerZ">
            <summary>
            Controlador de salto para entornos tipo tridimensionales en que los objetos "salten" sobre el eje Z.    
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallHandlerBase.Gravity">
            <summary>
            Constante de aceleración gravitatoria.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallHandlerBase.inverseGravity">
            <summary>
            Inversa de la gravedad.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallHandlerBase.halfGravity">
            <summary>
            Variable precalculada.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallHandlerBase.initialHeight">
            <summary>
            Altura a partir de la cual se empezó a calcular el salto/caída.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallHandlerBase.initialSpeed">
            <summary>
            Aceleración al comienzo del movimiento.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallHandlerBase.timer">
            <summary>
            Tiempo acumulado del salto/caída.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.JumpFallHandlerBase.Status">
            <summary>
            Estado en el que se encuentra actualmente.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.StartJump(System.Single,System.Single)">
            <summary>
            Inicia un salto con la aceleración indicada por parámetro.
            
            Como este método puede ser utilizado para un "double jump", no valida que se
            encuentre en un estado válido.
            
            Esa validación debe realizare previamente.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.StartFall(System.Single)">
            <summary>
            Inicia una caída desde la altura inicial hasta la altura del piso.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.StartFall(System.Single,System.Single)">
            <summary>
            Inicia una caída desde la altura inicial hasta la altura del piso.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.IncTimer(System.Single,System.Single,System.Single,System.Single@)">
            <summary>
            Incrementa el tiempo y devuelve el valor de la altura.
            </summary>        
            <param name="t">Tiempo a incrementar.</param>
            <param name="floorHeight">Altura del "piso" cuando se está cayendo.</param>
            <param name="ceilingHeight">Altura del "techo" cuando se está saltando.</param>
            <param name="newHeight">Resultado de la función.</param>        
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.OverCeiling(System.Single,System.Single)">
            <summary>
            Indica si la altura del objeto es superior a la del techo.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.UnderFloor(System.Single,System.Single)">
            <summary>
            Indica si la altura del objeto es inferior a la altura del piso.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.GetModifier(System.Single,System.Single)">
            <summary>
            Obtiene el modificar de altura en base a la velocidad inicial y a la aceleración.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Base.ObjectStartHandler">
            <summary>
            Este objeto permite customizar propiedades del objeto que sólo
            son posibles de establecer al iniciar.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.ObjectStartHandler.obj">
            <summary>
            Objeto que se va a inicializar.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.ObjectStartHandler.Region">
            <summary>
            Región de renderización del objeto.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.ObjectStartHandler.RegionSize">
            <summary>
            Obtiene el tamaño de la región de pantalla a la que pertenece el objeto.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.ObjectStartHandler.CollisionType">
            <summary>
            Establece el tipo de caja de colisión 2D a aplicar para este objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ObjectStartHandler.SetCustomHitbox2D(System.Action{System.Drawing.Drawing2D.GraphicsPath})">
            <summary>
            Establece una caja de colisión custom para este objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.ObjectStartHandler.SetCustomMapbox2D(System.Action{System.Drawing.Drawing2D.GraphicsPath})">
            <summary>
            Establece una caja de colisión custom para mapas de tipo <see cref="!:MapRegion"/> para este objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.ObjectStartHandler.GetCollision2D``1">
            <summary>
            Le indica al sistema que debe detectar colisiones entre este objeto, y un 
            objeto específico.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ObjectStartHandler.GetCollision2D(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Le indica al sistema que debe detectar colisiones entre este objeto, y el tipo
            de objetos indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ObjectStartHandler.GetCollisions2D``1">
            <summary>
            Le indica al sistema que debe detectar colisiones entre este objeto, múltiples
            instancias de otro tipo de objetos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ObjectStartHandler.GetCollision3D``1">
            <summary>
            Le indica al sistema que debe detectar colisiones entre este objeto, y el tipo
            de objetos indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ObjectStartHandler.GetCollisions3D``1">
            <summary>
            Le indica al sistema que debe detectar colisiones entre este objeto, múltiples
            instancias de otro tipo de objetos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ObjectStartHandler.SetCollision3DVertex">
            <summary>
            Establece que el objeto colisionará sólo como un punto en el espacio.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.ObjectStartHandler.SetCollision3DObjectSphere">
            <summary>
            Establece una caja de colisión esférica alrededor de la ubicación del objeto.
            
            El radio de la esfera es el radio del objeto.
            
            Si el radio es 0, funciona igual que <see cref="M:Kriptok.Entities.Base.ObjectStartHandler.SetCollision3DVertex"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.ObjectStartHandler.SetCollision3DViewAABB">
            <summary>
            Establece el tipo de colisión "Axis Aligned Bounding Boxes" para este objeto.
            
            El volumen de colisión está definido por la vista que lo representa.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ObjectStartHandler.GetOutOfScreenQuery">
            <summary>
            Obtiene una consulta que evalúa si el objeto ya no se encuentra en la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ObjectStartHandler.GetMouseScrollLocationQuery">
            <summary>
            Obtiene una consulta que permite conocer la posición del mouse proyectada para la región.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Base.ItemBase.Audio">
            <summary>
            Agrupamiento de funciones de audio (sonido y música).
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBase.Audio.PlaySound(System.Reflection.Assembly,System.String)">
            <summary>
            Reproduce un sonido que esté señalado como Recurso Embebido. Este método sólo
            permite reproducir un sonido a la vez.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra el sonido.</param>
            <param name="resourceName">Nombre del recurso a reproducir.</param>
            <returns>Devuelve un handler del sonido que permite volver a reproducirlo o detenerlo.</returns>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBase.Audio.PlaySound(Kriptok.Common.Resource)">
            <summary>
            Reproduce un sonido que esté señalado como Recurso Embebido. Este método sólo
            permite reproducir un sonido a la vez.
            </summary> 
            <param name="resource">Recurso a reproducir.</param>
            <returns>Devuelve un handler del sonido que permite volver a reproducirlo o detenerlo.</returns>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBase.Audio.PlaySoundSync(System.Reflection.Assembly,System.String)">
            <summary>
            Reproduce un sonido de forma sincrónica.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra el sonido.</param>
            <param name="resourceName">Nombre del recurso a reproducir.</param> 
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBase.Audio.StopMusic">
            <summary>
            Detiene la música que esté sonando en ese momento.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBase.Audio.PlayMusic(System.Reflection.Assembly,System.String,System.Int32,System.Int32,System.Double)">
            <summary>
            Reproduce un segmento de la canción indicada según los parámetros.
            
            Esta forma de reproducción no puede repetirse en continuado.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra la música.</param>
            <param name="resourceName">Nombre del recurso a reproducir.</param>             
            <param name="from">Indica desde qué punto debe empezar a reproducirse.</param>
            <param name="to">Indica hasta qué punto debe reproducirse.</param>
            <param name="volume">Volumen de reproducción.</param>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBase.Audio.PlayMusic(System.Reflection.Assembly,System.String,System.Boolean,System.Double)">
            <summary>
            Reproduce la música indicada según los parámetros.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra la música.</param>
            <param name="resourceName">Nombre del recurso a reproducir.</param> 
            <param name="loop">Indica si se reproduce en loop.</param>
            <param name="volume">Volumen de reproducción.</param>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBase.Mouse.ReCenterX(System.Int32)">
            <summary>
            Centra el mouse horizontalmente en la pantalla.
            </summary>            
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBase.Mouse.ReCenterY(System.Int32)">
            <summary>
            Centra el mouse horizontalmente en la pantalla.
            </summary>            
        </member>
        <member name="T:Kriptok.Entities.Base.ItemBase.Sys">
            <summary>
            Funcionalidades de sistemas.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.ItemBase.Sys.lastFrameTime">
            <summary>
            Último momento en que se tomó el tiempo. Utilizado para calcular el tiempo entre frame y frame.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.ItemBase.Sys.TimeDelta">
            <summary>
            Indica el porcentaje de tiempo que pasó entre frame y frame.
            Se utiliza para generar una 
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.ItemBaseBase.Assembly">
            <summary>
            Obtiene el ensamblado en el que se encuentra definida esta clase.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBaseBase.Input.Button01">
            <summary>
            Tecla:            
            SNES:        
            Playstation: Triángulo
            XBOX:        
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBaseBase.Input.AnalogDirection(Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Obtiene la dirección en coordenadas cartesianas del control analógico del joystick.
            </summary>            
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBaseBase.Input.Button02">
            <summary>
            Tecla: 2         
            SNES:        
            Playstation: O (o "X" en la playstation japonesa).
            XBOX:        
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBaseBase.Input.Button03">
            <summary>
            Tecla:       Espacio
            SNES:        B
            Playstation: X (o "O" en la playstation japonesa).
            XBOX:        A
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBaseBase.Input.Button04">
            <summary>
            Tecla:       Shift            
            SNES:        X
            Playstation: Cuadrado
            XBOX:        Y                        
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBaseBase.Input.L1">
            <summary>
            Tecla:              Q
            SNES:               L
            Playstation / XBOX: L1            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBaseBase.Input.R1">
            <summary>
            Tecla:              E
            SNES:               R
            Playstation / XBOX: R1            
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBaseBase.Input.L2">
            <summary>
            Tecla:              1           
            Playstation / XBOX: L2
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBaseBase.Input.R2">
            <summary>
            Tecla:              3            
            Playstation / XBOX: R2     
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBaseBase.Input.Escape">
            <summary>
            Indica si está presionada la tecla de "Esc".
            </summary>            
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBaseBase.Rand.NextF">
            <summary>
            Produce un número aleatorio entre 0f y 1f.
            </summary>            
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBaseBase.Rand.NextF(System.Single,System.Single)">
            <summary>
            Obtiene un número aleatorio de punto flotante entre los valores indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBaseBase.Rand.Next(System.Int32,System.Int32)">
            <summary>
            Obtiene un número aleatorio entre los valores indicados por parámetro.
            
            Los dos se consideran incluidos en el rango posible.
            </summary>            
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBaseBase.Rand.Reset">
            <summary>
            Inicializa el generador de números aleatorios general tomando 0 como seed.
            
            Utilizar este método cuando se requiera que el comportamiento del juego parezca random, pero 
            siempre se comporte de la misma manera.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBaseBase.Rand.Randomize">
            <summary>
            Inicializa el generador de números aleatorios general tomando como seed el <see cref="!:DateTime.Now.Ticks"/>.
            
            Utilizar este método cuando se requiere que la aplicación se comporte realmente de forma aleatoria.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Base.Process2Base`1">
            <summary>
            Objeto básico del juego, pero con comportamiento asincrónico.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.Process2Base`1.#ctor(`0)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.ProcessBase"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Base.Process2Base">
            <summary>
            Objeto básico del juego, pero con comportamiento asincrónico.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.Process2Base.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.Process2Base"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.Process2Base.#ctor(Kriptok.Views.Base.IView)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.Process2Base"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.Process2Base.OnBegin(Kriptok.Scenes.ProcessHandler)">
            <summary>
            Método para definir el comportamiento del proceso.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Base.ProcessBase`1">
            <summary>
            Objeto básico del juego, pero con comportamiento asincrónico.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase`1.#ctor(`0)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.ProcessBase"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Base.ProcessBase">
            <summary>
            Objeto básico del juego, pero con comportamiento asincrónico.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.ProcessBase.EmptyArray">
            <summary>
            Array vacío de procesos.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.ProcessBase.cancellationTaskToken">
            <summary>
            Token de cancelación de flujo.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.ProcessBase.myThread">
            <summary>
            Puntero al thread en el que corre el proceso.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.ProcessBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.#ctor(Kriptok.Views.Base.IView)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.ProcessBase"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.ProcessBase.ReadyToFrameFlag">
            <summary>
            Indica si el proceso está "listo para renderizar", es decir, que ha encontrado un frame en el código.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.Frame">
            <summary>
            Este método genera una "espera" hasta que el proceso es renderizado.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.FadeOff(System.Byte)">
            <summary>
            Oscurece la pantalla a negro.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.FadeTo(System.Drawing.Color,System.Byte)">
            <summary>
            Oscurece la pantalla al color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.FadeOn(System.Byte)">
            <summary>
            Vuelve a aclarar la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.FadeFrom(System.Drawing.Color,System.Byte)">
            <summary>
            Vuelve a aclarar la pantalla desde el color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.OnStart(Kriptok.Entities.Base.ProcessStartHandler)">
            <summary>
            Este método se ejecuta cuando un ítem es agregado a la lista de procesos vivos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.OnStart(Kriptok.Entities.Base.ObjectStartHandler)">
            <summary>
            Este método se ejecuta cuando un ítem es agregado a la lista de procesos vivos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.OnBegin">
            <summary>
            Define el comportamiento del proceso como un thread independiente.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.OnFrame">
            <summary>
            Este método se ejecuta en cada frame de la aplicación, mientras el objeto esté vivo.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.ReadyToRender">
            <summary>
            Indica si el objeto está listo para renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.TriggerFrame">
            <summary>
            Indica si el objeto está listo para renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.Sync(System.Action,System.Boolean)">
            <summary>
            Congela/duerme a todos los procesos activos, menos al actual, y ejecuta una acción. Cuando la acción termina,
            descongela/despierta a los procesos que había dormido.
            </summary>        
            <param name="action">Acción a ejecutar mientras los procesos están dormidos.</param>
            <param name="force">Indica si al momento de "despertar" a los procesos, debe también despertar a 
            procesos que tal vez ya se encontraban dormidos, y/o que no habían sido dormidos por este proceso en particular.</param>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.IsDisposed">
            <summary>
            Indica si el elemento ha sido completamente destruido.
            </summary>  
        </member>
        <member name="T:Kriptok.Entities.Base.EntityBase`1">
            <summary>
            Clase base de todos los objetos que forman parte de un juego.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase`1.#ctor(`0)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.EntityBase"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.EntityBase`1.View">
            <summary>
            Obtiene la vista asociada al objeto.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Base.EntityBase">
            <summary>
            Clase base de todos los objetos que forman parte de un juego.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Id">
            <summary>
            Id único del objeto.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.alive">
            <summary>
            Indica si el proceso está vivo.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.EntityBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.#ctor(Kriptok.Views.Base.IView)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.EntityBase"/>.
            </summary>        
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Region">
            <summary>
            Accede al controlador central de la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Add``1(``0)">
            <summary>
            Agrega un objeto al juego y lo devuelve.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetLocation2D">
            <summary>
            Obtiene la ubicación bidimensional de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetRotationAngle2D">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetRenderLocation">
            <summary>
            Obtiene la ubicación tridimensional de renderización del objeto.
            
            Este método permite customizar la ubicación del objeto al momento de renderizar.
            
            Ideal cuando la posición del objeto depende de otro objeto.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Location">
            <summary>
            Dependiendo del sistema de coordenadas que utiliza el proceso, la coordenada Z puede representar
            profundidad (interfaces tridimensionales), o prioridad (interfaces planas).
            
            De cualquier manera, cuanto menor sea Z, más cerca de la cámara se dibujará el proceso.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Radius">
            <summary>
            Utilizado para determina collisiones de tipo <see cref="F:Kriptok.Entities.Collisions.Collision2DTypeEnum.Radius"/> en 2 y 3 dimensiones.
            Es de tipo <see cref="T:System.UInt16"/> para que sea fácil de castear a int, pero al mismo tiempo no 
            soporte valores negativos.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Angle">
            <summary>
            Ángulos del proceso, utilizados para renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.DrawPriority">
            <summary>
            Esta propiedad puede fácilmente ser reemplazada en la mayoría de los casos por la coordenada Z.
            Ya que esta coordenada será utilizada para calcular el orden de los sprites a representar en todas
            las interfaces. Sin embargo, en el caso de que ambas "Z" sean iguales, es imposible saber qué 
            proceso tiene prioridad sobre cuál. Por tanto, se creó esta nueva prioridad.
            
            La mayoría de las veces, es suficiente con que sea 0. Sólo casos muy particulares pueden requerir
            de utilizarla para un ordenamiento extra.
            
            A diferencia de la coordenada Z, que es menor cuanto más cerca está de la cámara, esta propiedad
            funciona al revés. Cuanto más grande sea, más "cerca" se encontrará el sprite de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Advance2D(System.Single)">
            <summary>
            Mueve el objeto la distancia indicada sobre el plano XY en el ángulo que está mirando.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Advance3D(System.Single)">
            <summary>
            Mueve el objeto la distancia indicada el espacio tridimensional en el ángulo que está mirando.
            </summary>    
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Strafe2D(System.Single)">
            <summary>
            Mueve el objeto la distancia indicada en el plano XY a 90° del ángulo en que está mirando.
            </summary>           
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Strafe3D(System.Single,System.Single)">
            <summary>
            Mueve el objeto la distancia indicada en el espacio a 90° del ángulo en que está mirando.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.XAdvance2D(System.Single,System.Single)">
            <summary>
            Mueve el objeto la distancia indicada sobre el plano XY en el ángulo indicado.
            </summary>    
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.XAdvance3D(System.Single,System.Single,System.Single)">
            <summary>
            Mueve el objeto la distancia indicada en el espacio 3D, en los ángulos indicados.
            </summary>   
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Asleep">
            <summary>
            Indica si el proceso debe continuar moviéndose, se puede utilizar por ejemplo,
            para pausar el juego.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Sleep">
            <summary>
            Duerme a un objeto. Se lo puede despertar con <see cref="M:Kriptok.Entities.Base.EntityBase.Wakeup"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Sleep(System.Boolean)">
            <summary>
            Intenta dormir a un objeto, indicando en el resultado si fue exitoso o no.
            </summary>
            <param name="force">Indica si debe forzar a dormir a un objeto. Por defecto, si un objeto ya
            está dormido, lo ignora. Este parámetro hace que se fuerce a intentar dormirlo aunque ya esté dormido
            y que la función devuelva <see cref="!:true"/> siempre.</param>
            <returns>Devuelve <see cref="!:true"/> si pudo dormir al objeto y <see cref="!:false"/> de lo contrario.</returns>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Wakeup">
            <summary>
            Despierta a un objeto dormido con <see cref="M:Kriptok.Entities.Base.EntityBase.Sleep(System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.EntityBase.View">
            <summary>
            Propiedad que indica el gráfico que debe renderizar asociado a este proceso.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.DistX(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Calcula la distancia sobre el eje X hasta el objeto indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.DistY(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Calcula la distancia sobre el eje Y hasta el objeto indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetAngle2D(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Obtiene el ángulo en dirección al objeto indicado sobre el eje Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetDistance2D(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Obtiene la distancia en dirección al objeto indicado sobre el plano XY.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetDistance3D(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Obtiene la distancia en dirección al objeto indicado sobre el plano XY.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.LookAt3D(System.Single,System.Single,System.Single)">
            <summary>
            Este método orienta la dirección del objeto en tres dimensiones hacia la ubicación indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.LookAt3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Este método orienta la dirección del objeto en tres dimensiones hacia la ubicación indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.SetHitbox2D(Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase)">
            <summary>
            Establece la nueva caja de colisión, liberando de memoria la anterior, si la tuviese.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.SetCustomMapbox2D(System.Action{System.Drawing.Drawing2D.GraphicsPath})">
            <summary>
            Establece una caja de colisión custom para mapas de tipo <see cref="T:Kriptok.Maps.MapRegion"/> para este objeto.
            </summary>        
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Hitbox2D">
            <summary>
            Caja de colisión bidimensional para este objeto.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Hitbox3D">
            <summary>
            Caja de colisión tridimencional para este objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Radius2DCollision``1">
            <summary>
            Obtiene el el objeto con el que se encuentra a una distancia de "colisión de radios", es decir, 
            a una distancia menor a la suma de sus radios.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Radius3DCollision``1">
            <summary>
            Obtiene el el objeto con el que se encuentra a una distancia de "colisión de radios", es decir, 
            a una distancia menor a la suma de sus radios.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.RadiusCollision``1(System.Func{``0,System.Int32})">
            <summary>
            Obtiene el el objeto con el que se encuentra a una distancia de "colisión de radios", es decir, 
            a una distancia menor a la suma de sus radios.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Radius2DCollisions``1">
            <summary>
            Obtiene el el objeto con el que se encuentra a una distancia de "colisión de radios", es decir, 
            a una distancia menor a la suma de sus radios.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Radius3DCollisions``1">
            <summary>
            Obtiene el el objeto con el que se encuentra a una distancia de "colisión de radios", es decir, 
            a una distancia menor a la suma de sus radios.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.RadiusCollisions``1(System.Func{``0,System.Int32})">
            <summary>
            Obtiene el el objeto con el que se encuentra a una distancia de "colisión de radios", es decir, 
            a una distancia menor a la suma de sus radios.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.IsAlive">
            <summary>
            Indica si el objeto aún está "vivo".
            
            Es decir, si tiene comportamiento y debe ser renderizado.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetDirection">
            <summary>
            Obtiene la dirección del objeto sobre el plano XY.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.OnStart">
            <summary>
            Este método se ejecuta cuando un ítem es agregado a la lista de procesos vivos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.OnStart(Kriptok.Entities.Base.ObjectStartHandler)">
            <summary>
            Este método se ejecuta cuando un ítem es agregado a la lista de procesos vivos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.OnFrame">
            <summary>
            Este método se ejecuta en cada frame de la aplicación, mientras el objeto esté vivo.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.ReadyToRender">
            <summary>
            Indica si el objeto está listo para renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.TriggerFrame">
            <summary>
            Indica si el objeto está listo para renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetIdentifier">
            <summary>
            Obtiene un texto para identificar al objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetOccupiedGridCells(Kriptok.Drawing.Vector2I)">
            <summary>
            Para objetos que deben moverse por un mapa tipo "grilla" (estrategia, rol, etcétera), este método
            permite, dada la ubicación del objeto (en la grilla) indicada por parámetro, este método
            permite implementar la ocupación de múltiples celdas y casillas simplemente devolviendo una lista
            de las casillas ocupadas.        
            </summary>        
            <param name="coordinates">Las coordenadas que devuelve el metodo <see cref="!:GetTileCoords"></see></param>
            <returns>Devuelve una liasta de los casilleros que ocupa el objeto dentro del mapa.</returns>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Die">
            <summary>
            Indica al objeto que deja de formar parte de la operatoria del juego
            y que debería liberarse de memoria.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.IsDisposed">
            <summary>
            Mata el objeto, libera los recursos, e
            indica si el elemento ha sido completamente destruido.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Base.EntityBase.Find">
            <summary>
            Funcionalidades de búsqueda de objetos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Find.First``1">
            <summary>
            Busca el primer objeto vivo del tipo indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Find.All``1">
            <summary>
            Devuelve todos los objetos vivos del tipo indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Find.All">
            <summary>
            Devuelve todos los objetos vivos alrededor.
            </summary>            
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Find.Others(System.Int32)">
            <summary>
            Devuelve todos los objetos vivos menos el indicado por parámetro.
            </summary>            
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Find.Others``1(System.Int32)">
            <summary>
            Devuelve todos los objetos vivos menos el indicado por parámetro.
            </summary>            
        </member>
        <member name="T:Kriptok.Entities.Base.EntityBase.Scene">
            <summary>
            Funcionalidades para comunicarse con la escena actual.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Scene.SendMessage(System.Object)">
            <summary>
            Envía el menasje a la escena. El mensaje puede ser cualquier cosa.
            Pero depende de la escena saber interpretarlo en la implementación del método
            <see cref="M:Kriptok.Scenes.SceneBase.OnMessage(Kriptok.Scenes.SceneHandler,System.Object)"/>,
            </summary>            
        </member>
        <member name="T:Kriptok.Entities.Collisions.Base.ICollisionQuery">
            <summary>
            Consulta de colisiones entre un objeto y un tipo de objetos.
            </summary>    
        </member>
        <member name="P:Kriptok.Entities.Collisions.Base.ICollisionQuery.RegionId">
            <summary>
            Id de región a la que pertenece el objeto que realiza la consulta.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.ICollisionQuery.GetCandidatesHashCode">
            <summary>
            Devuelve un código identificatorio para agrupar candidatos a colisiones.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.ICollisionQuery.GetCandidates(Kriptok.Entities.Base.EntityBase[])">
            <summary>
            Obtiene los candidatos para evaluar colisiones.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.ICollisionQuery.Clear">
            <summary>
            Limpia los resultados para que no se pasen de un frame al otro.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Collisions.Base.CollisionQueryBase`1.Result">
            <summary>
            Obtiene el resultado de la última colisión evaluada.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.CollisionQueryBase`1.Filter(Kriptok.Entities.Base.EntityBase[])">
            <summary>
            Filtra la lista de objetos con la cual se debe evaluar colisiones.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.CollisionQueryBase`1.Clear">
            <summary>
            Limpia los resultados.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Base.HitboxBase.owner">
            <summary>
            Obejto al que pertenece esta caja de colisión.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Collisions.Base.HitboxBase.OwnerId">
            <summary>
            Obtiene el identificador del objeto para que no se registren colisiones contra sí mismo.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Collisions.Base.HitboxBase.RegionId">
            <summary>
            Obtiene el Id de región del objeto, para sólo evaluar colisiones con objetos de la misma región.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.HitboxBase.IsAlive">
            <summary>
            Indica si el objeto propietario de esta caja de colisión está vivo.
            </summary>        
        </member>
        <member name="P:Kriptok.Entities.Collisions.Base.HitboxBase.Location">
            <summary>
            Obtiene la última ubicación del objeto para chequear la colisión.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.HitboxBase.GetCollisionsWith``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Obtiene una lista de objetos con los que colisiona este objeto.
            </summary>      
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.HitboxBase.GetCollisionWith``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Obtiene el primer objeto que encuentre que esté colisionando con este objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.HitboxBase.GetCollisionWith(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Indica si está colisionando con el objeto indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.HitboxBase.StartCollisionDetection">
            <summary>
            Permite ejecutar código antes de iniciar el análisis de intersección de cajas de colisión.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Queries.IObjectCollisionQuery">
            <summary>
            Consulta que sólo evalúa colisión con un objeto en particular.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Queries.IObjectCollisionQuery.OnCollision">
            <summary>
            Indica si se detectó la colisión.
            </summary>        
        </member>
        <member name="F:Kriptok.Entities.Collisions.Queries.CollisionQueryObject.to">
            <summary>
            Objeto específico con el cual se debe evaluar la colisión.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Queries.CollisionQueryObject.GetCandidatesHashCode">
            <summary>
            No especifico nada, ya que la resolución 
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Queries.CollisionQueryObject.Filter(Kriptok.Entities.Base.EntityBase[])">
            <summary>
            No filtro nada, ya que no es necesario, ya se tiene una referncia al objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Queries.CollisionQueryObject.Resolve(Kriptok.Entities.Base.EntityBase[])">
            <summary>
            No uso los objetos indicados por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Queries.IMultipleCollisionQuery`1">
            <summary>
            Tipo de colisión que sólo retorna el primer resultado encontrado.
            </summary>    
        </member>
        <member name="T:Kriptok.Entities.Collisions.Queries.ISingleCollisionQuery`1">
            <summary>
            Tipo de colisión que sólo retorna el primer resultado encontrado.
            </summary>    
        </member>
        <member name="M:Kriptok.Entities.Collisions.Queries.ISingleCollisionQuery`1.OnCollision(`0@)">
            <summary>
            Método utilizado para detectar la colisión del objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Queries.ISingleCollisionQuery`1.OnCollision">
            <summary>
            Método utilizado para detectar la colisión del objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.GetCollisionsWith``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Médoto sobreescrito para agregar el llamado a <see cref="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.EndCollisionDetection"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.GetCollisionWith``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Médoto sobreescrito para agregar el llamado a <see cref="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.EndCollisionDetection"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.GetCollisionWith(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Indica si está colisionando con el objeto indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.GetLocation2D">
            <summary>
            Obtiene la ubicación bidimensional de la vista.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.EndCollisionDetection">
            <summary>
            Permite liberar los recursos utilizados para la detección de colisiones.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.Collide(Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase)">
            <summary>
            Resuelve la colisión entre dos objetos, el propietario del hitbox, y el
            indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.CheckToPixel(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Resuelve la colisión entre este tipo de caja de cólisión y un punto en el espacio bidimensional.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.Dispose">
            <summary>
            Libera los recursos utilizados.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DCircle.matrix">
            <summary>
            Matriz de transformación para colisiones con vistas de GDI+, se genera sólo si es necesaria.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DCircle.polygon">
            <summary>
            Polígono para intersectar.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DCircle.rectangle">
            <summary>
            Rectángulo para intersectar.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DCircle.Kriptok#Entities#Collisions#Coll2D#ICircleCollisionContext#GetMatrix">
            <summary>
            Matriz de transformación para colisiones con vistas de GDI+, se genera sólo si es necesaria.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.Hitbox2DDoubleCheckBase">
            <summary>
            Caja de colisión que realiza la validación en dos etapas.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DDoubleCheckBase.CheckToRegion(Kriptok.Entities.Collisions.Coll2D.Hitbox2DDoubleCheckBase.DoubleCheckContext)">
            <summary>
            Sólo por motivos de debug.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.Hitbox2DDoubleCheckBase.DoubleCheckContext">
            <summary>
            Contexto de intersección de regiones con dos chequeos.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DEllipse.SecondCheckEllipse.view">
            <summary>
            Vista a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DEllipse.SecondCheckEllipse.size">
            <summary>
            Tamaño actual del elpise a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DEllipse.SecondCheckEllipse.ellipse">
            <summary>
            Elipse utilizada para detectar colisiones.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DEllipse.SecondCheckEllipse.GetEllipse">
            <summary>
            Obtiene el elipse para renderizarlo.
            </summary>            
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.Hitbox2DPath.SecondCheckPath">
            <summary>
            Indica que la caja de colisión es un rectángulo.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.matrix">
            <summary>
            Matriz de transformación para colisiones con vistas de GDI+, se genera sólo si es necesaria.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.GetCollisionRectangle">
            <summary>
            Obtiene el rectángulo de colisión del la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.IsVisible(System.Drawing.Region,System.Drawing.Drawing2D.Matrix)">
            <summary>
            En principio sólo valida la visibilidad del rectángulo.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.IsVisible(System.Drawing.Region)">
            <summary>
            Indica si la figura es visible en la región indicada por parámetro.
            
            En principio, sólo se chequea el rectángulo que funciona como "Bounding-Box".
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.IsVisibleRectangle(System.Drawing.Region)">
            <summary>
            Indica si la "Bounding-Box" de la vista está visible en la región indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.GetMatrix">
            <summary>
            Obtiene o crea y devuelve la matriz de transformación de esta vista.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.GetBounds">
            <summary>
            Obtiene los límites (AABB) de la figura.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.RegionCollisionContext">
            <summary>
            Representa las propiedades de colisión de un objeto bidimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.RegionCollisionContext.rectangle">
            <summary>
            Rectángulo que envuelve el área de colisión.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.RegionCollisionContext.bounds">
            <summary>
            Límites calculados de la región de colisión.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.DrawOn(System.Drawing.Graphics)">
            <summary>
            Dibuja el contorno de la caja de colisión.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.SecondCheckBase">
            <summary>
            Clase base para el segundo chequeo que se realiza con figuras más complejas que un rectángulo.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.SecondCheckNone">
            <summary>
            Indica que no debe realizar ningún segundo chequeo.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.SecondCheckRectangle">
            <summary>
            Indica que la caja de colisión es un rectángulo.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.SecondCheckSprite">
            <summary>
            Esta caja de colisión para sprites sólo deriva el comportamiento a la verdadera caja de colisión
            generada para ese sprite.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.SpriteSecondCheckNone">
            <summary>
            Indica que no debe realizar ningún segundo chequeo.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.SpriteSecondCheckRectangle">
            <summary>
            Indica que la caja de colisión es un rectángulo.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.BoundingBox3D">
            <summary>
            Caja de colisiones tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.BoundingBox3D.GetCollisionVertices">
            <summary>
            Devuelve un texto con los vértices para poner en Metasequoia y analizar la colisión.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.BoundingBox3D.GetCollisionVertices(System.Collections.Generic.IEnumerable{Kriptok.Drawing.Algebra.Vector3F})">
            <summary>
            Devuelve un texto con los vértices para poner en Metasequoia y analizar la colisión.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.BoundingBox3D.GetNormals">
            <summary>
            Obtiene tres direcciones de rotación (los primeros tres vectores),
            para reorientar las figuras en la detección de colisiones.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.BoundingBox3D.BoundingBoxNormals">
            <summary>
            Objeto con tres direcciones sobre las cuales se pueden rotar las figuras
            para calcular colisiones.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.Collision3DShape">
            <summary>
            Datos utilizados para el cálculo de intersección de una figura 3D con rotación y escalamiento.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Collision3DShape.VolumeContains(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Indica si el volumen descripto por la figura contiene el vértice indicado por parámetro.
            Para esto debe realizar transformaciones de coordenadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Collision3DShape.DeTransformVector(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Transforma y devuelve el vértice indicado por parámetro al sistema de coordenadas del volumen.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Collision3DShape.TransformVolume(Kriptok.Drawing.Shapes.Volume)">
            <summary>
            Transforma un volumen utilizando la matriz de transformación de la figura.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase.GetCollision3DType">
            <summary>
            Obtiene el tipo de colisión para graficarla.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase.Collide(Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase)">
            <summary>
            Resuelve la colisión entre dos objetos, el propietario del hitbox, y el
            indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase.CheckToPoint(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Indica cómo resolver una colisión cuando la que es pasada por parámetro es
            un punto en el espacio tridimencional.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase.CheckToSphere(Kriptok.Drawing.Shapes.Sphere)">
            <summary>
            Indica cómo resolver una colisión cuando la que es pasada por parámetro es
            una esfera tridimencional.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase.CheckToVolume(Kriptok.Drawing.Shapes.Volume)">
            <summary>
            Indica cómo resolver una colisión cuando la que es pasada por parámetro es
            un volumen.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase.CheckToShape(Kriptok.Entities.Collisions.Coll3D.Collision3DShape)">
            <summary>
            Indica cómo resolver una colisión cuando se recibe una figura rotada y escalada.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.Hitbox3DShapeMultiple">
            <summary>
            Tipo de colisión por volumen, pero toma en cuenta las rotaciones aplicadas a la figura.
            Generando así una caja de colisión más estrecha y estricta.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll3D.Hitbox3DSphere.mySphere">
            <summary>
            Devuelve la esfera representada por la ubicación y radio del objeot.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DSphere.CheckToSphere(Kriptok.Drawing.Shapes.Sphere)">
            <summary>
            Colisión esfera/esfera.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.Hitbox3DShape">
            <summary>
            Tipo de colisión por volumen, pero toma en cuenta las rotaciones aplicadas a la figura.
            Generando así una caja de colisión más estrecha y estricta.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll3D.Hitbox3DShape.currentShape">
            <summary>
            Volumen calculado para este frame.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.Hitbox3DVolume">
            <summary>
            Tipo de colisión por volumen. Recomendada para figuras que ocupen todo el espacio del
            volumen y no tengan rotaciones.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll3D.Hitbox3DVolume.currentVolume">
            <summary>
            Volumen calculado para este frame.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.IBoundCollision">
            <summary>
            Esta interfaz indica que se puede evaluar una colisión en tres dimensiones, utilizando
            los límites de las figuras tridimencionales.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Collision2DHelper">
            <summary>
            Agrupa todas las funcionalidades necesarias para chequear collisiones entre objetos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Collision2DHelper.Collide(Kriptok.Drawing.Shapes.Circle,System.Drawing.RectangleF)">
            <summary>
            Devuelve si las figuras indicadas por parámetro se superponen.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Collision3DTypeEnum">
            <summary>
            Tipo de caja de colisión 3D. Utilizado para mostrar la caja de colisión gráficamente.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Collision3DHelper">
            <summary>
            Agrupa todas las funcionalidades necesarias para chequear collisiones entre objetos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Collision3DHelper.SphereVolumeCollision(Kriptok.Drawing.Shapes.Volume,Kriptok.Drawing.Shapes.Sphere)">
            <summary>
            Indica si hay una intersección entre un volumen y una esfera en tres dimensiones.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Collision3DHelper.GetEllipsoidVolume(Kriptok.Entities.Collisions.Coll3D.Collision3DShape,Kriptok.Drawing.Shapes.Sphere)">
            <summary>
            Transforma la esfera en un elipsoide para evaluar intersección con volumenes alineados a los ejes.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Collision3DHelper.EllipsoidVolumeCollision(Kriptok.Drawing.Shapes.Volume,Kriptok.Drawing.Shapes.Volume)">
            <summary>
            Indica si hay una intersección entre un volumen y un elipsoide de tres dimensiones definido por un volumen.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Collision3DHelper.ShapeVolumeCollision(Kriptok.Entities.Collisions.Coll3D.Collision3DShape,Kriptok.Drawing.Shapes.Volume,Kriptok.Drawing.Shapes.Volume,Kriptok.Drawing.Shapes.Volume)">
            <summary>
            Detecta la colisión entre una figura, y un volumen.
            </summary>
            <param name="shape">Figura rotada/escalada a colisionar.</param>
            <param name="volume">Volumen a colisionar.</param>
            <param name="shapeVolume">Volumen de la figura.</param>
            <param name="shapeCalculatedVolume">Volumen calculado de la figura.</param>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Collision3DHelper.CollisionShapeShape(Kriptok.Entities.Collisions.Coll3D.Collision3DShape,Kriptok.Entities.Collisions.Coll3D.Collision3DShape)">
            <summary>
            Detecta la intersección entre dos figuras, realizando varios cambios de coordenadas.
            </summary>        
        </member>
        <member name="F:Kriptok.Entities.Collisions.Collision2DTypeEnum.Point">
            <summary>
            Un único vertice en dos dimensiones.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.SpriteAnimation">
            <summary>
            Este objeto utiliza un <see cref="T:Kriptok.Views.Sprites.IndexedSpriteView"/> para representar una animación.
            
            Itera por todas las imágenes de la vista y luego muere.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Debug.ScrollCustomizer">
            <summary>
            Este proceso puede ser utilizado por cualquier aplicación. Su objetivo es el de permitir modificar 
            la perspectiva del espacio tridimensional (o Mode7), y loggea las configuraciones actuales, de forma
            de poder utilizarlo temporalmente hasta encontrar la perspectiva deseada.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Debug.LightSourceRotator">
            <summary>
            Esta es una clase de prueba que hacer rotar la luz ambiental para verificar cómo afecta la luz
            dependiendo de dónde se encuentre.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Debug.LineOfSight">
            <summary>
            Este objeto se utiliza para analizar la visión de un proceso sobre otro/s.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Debug.LineOfSight.#ctor(Kriptok.Entities.Base.EntityBase,Kriptok.Entities.Base.EntityBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Debug.LineOfSight"/>.
            </summary>
            <param name="from">Proceso de origen (propietario de la linea de visión).</param>
            <param name="to">Proceso destino u objetivo.</param>
        </member>
        <member name="M:Kriptok.Entities.Debug.LineOfSight.IsInSight(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Indica si un objeto determinado está dentro del rango de visión del objeto propietario.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Debug.LinesOfSight">
            <summary>
            Esta clase indica gráficamente hacia dónde se encuentra mirando el personaje.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Debug.LinesOfSight.#ctor(Kriptok.Entities.Base.EntityBase,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Debug.LinesOfSight"/>.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Debug.MapGridMarker">
            <summary>
            Este objeto se utiliza para marcar el lugar donde se encuentra un objeto dentro de una cuadrícula
            en una situación que puede ser confusa (un mapa de Mode7, por ejemplo).
            </summary>
        </member>
        <member name="T:Kriptok.Entities.BasicObject">
            <summary>
            Este objeto puede ser utilizado como decorado, u otros objetos que no 
            requieren un comportamiendo complejo o no interactuan con otros objetos.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.DistanceTo`1">
            <summary>
            Esta clase representa una relación de distancia entre un objeto y otro.
            </summary>    
        </member>
        <member name="P:Kriptok.Entities.DistanceTo`1.Object">
            <summary>
            Objeto hasta el cuál se está midiendo la distancia.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.DistanceTo`1.Distance">
            <summary>
            Distancia hasta el objeto referenciado.
            </summary>        
        </member>
        <member name="T:Kriptok.Scenes.SceneBase">
            <summary>    
            Las escenas representan cada "instancia" de un juego.
            
            Ejemplos:
             * Presentación.
             * Menú principal.
             * Nivel/Mapa de juego.
             * Créditos.
             * etcétera.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneBase.processingMessageOn">
            <summary>
            Objeto utilizado para lockear mientras se procesa un mensaje.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneBase.processingMessage">
            <summary>
            Variable que indica si se está procesando un mensaje.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneBase.mainForm">
            <summary>
            Formulario principal del juego.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.Init(Kriptok.Scenes.SceneInitializer)">
            <summary>
            Lógica a realizar durante la inicialización de la escena.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.Run(Kriptok.Scenes.SceneHandler)">
            <summary>
            Lógica principal a realizar por la escena.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.OnStop">
            <summary>
            Evento que se dispara al terminar o detener la escena.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.InstanceProcess">
            <summary>
            Crea el proceso inicial de la escena.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.Start">
            <summary>
            Inicia la escena.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.Message(System.Object)">
            <summary>
            Recibe un mensaje de algún objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.OnMessage(Kriptok.Scenes.SceneHandler,System.Object)">
            <summary>
            Método que permite implementar el comportamiento de la escena
            al recibir un mensaje de algún objeto del juego.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.LockMessage(System.Action)">
            <summary>
            Lockea para indicar que se está empezando o terminando de procesar un mensaje.
            </summary>        
        </member>
        <member name="T:Kriptok.Scenes.SceneBase.SceneProcessBase">
            <summary>
            Proceso que se utiliza para manejar a la escena asincrónicamente.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneBase.SceneProcessBase.mainForm">
            <summary>
            Formulario principal del juego.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneBase.SceneProcessBase.scene">
            <summary>
            Actividad a la que pertenece.
            </summary>
        </member>
        <member name="T:Kriptok.Scenes.SceneBase.SceneRunProcess">
            <summary>
            Proceso que se utiliza para manejar la confección de la escena asincrónicamente.
            </summary>
        </member>
        <member name="T:Kriptok.Scenes.SceneBase.SceneMessageProcess">
            <summary>
            Proceso que se utiliza para manejar un mensaje que recibe la escena.
            </summary>
        </member>
        <member name="T:Kriptok.Scenes.SceneHandler">
            <summary>
            Representa un agrupador de las funciones que puede tener una escena.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneHandler.mainForm">
            <summary>
            Formulario principal del juego.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneHandler.scene">
            <summary>
            Actividad a la que pertenece.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneHandler.process">
            <summary>
            Proceso asincrónico relacionado a la escena.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.#ctor(Kriptok.Forms.MainForm,Kriptok.Scenes.SceneBase,Kriptok.Scenes.SceneBase.SceneProcessBase)">
            <summary>
            Constructor interno, para asegurar que no se pueda heredar la clase.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.PlayMusic(System.Reflection.Assembly,System.String,System.Boolean,System.Int32)">
            <summary>
            Reproduce la música indicada según los parámetros.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra la música.</param>
            <param name="resourceName">Nombre del recurso a reproducir.</param> 
            <param name="loop">Indica si se reproduce en loop.</param>
            <param name="from">Indica desde qué punto debe empezar a reproducirse.</param>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.PlayMidiNote(Kriptok.Audio.MidiInstrumentEnum,System.Byte,System.Byte,System.Byte)">
            <summary>
            Reproduce una nota midi con los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.StartSubScreen(System.Drawing.Rectangle)">
            <summary>
            Inicializa una sub-región de pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.StartScroll``1(``0)">
            <summary>
            Inicializa un modo de Scroll.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.StartPseudo3D``1(``0)">
            <summary>
            Inicializa un modo de Scroll con la "capa" indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.StartFull3D``1(``0)">
            <summary>
            Inicializa un modo de Scroll con la "capa" indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.Set(Kriptok.Scenes.SceneBase)">
            <summary>
            Establece la escena indicada por parámetro como la única actividad.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.Kill``1">
            <summary>
            Elimina todos los objetos vivos del tipo indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.WaitWhile(System.Func{System.Boolean})">
            <summary>
            Espera mientras se cumpla la condición.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.WaitFrame">
            <summary>
            Espera un frame antes de continuar.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.WaitFrames(System.Int32)">
            <summary>
            Espera una cantidad determinada de renderizados de pantalla indicados por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.ResetTimer">
            <summary>
            Resetea los frames por segundo, el tiempo desde el inicio del programa, y el contador
            de frames.
            
            Sólo disponible en modo DEBUG.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.FadeTo(System.Drawing.Color,System.Byte)">
            <summary>
            Oscurece la pantalla al color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.FadeFrom(System.Drawing.Color,System.Byte)">
            <summary>
            Vuelve a aclarar la pantalla desde el color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.Write(Kriptok.Views.Texts.SuperFont,System.Int32,System.Int32,System.String)">
            <summary>
            Escribe un texto en pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.Write(Kriptok.Views.Texts.SuperFont,System.Int32,System.Int32,System.Func{System.String})">
            <summary>
            Escribe un texto en pantalla que se actualiza automáticamente con la expressión indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.Write(Kriptok.Views.Texts.SuperFont,System.Int32,System.Int32,System.Func{System.Int32})">
            <summary>
            Escribe un texto en pantalla que se actualiza automáticamente con la expressión indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.Wait(System.UInt32)">
            <summary>
            Espera hasta que pasen la cantidad de milisegundos indicados por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.WaitOrKeyPress(System.Int32)">
            <summary>
            Espera una determinada cantidad de milisegundos, o hasta que se presione una tecla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.WaitForKeyPress">
            <summary>
            Espera hasta que se presione una tecla, y devuelve su valor.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.FadeOn(System.Byte)">
            <summary>
            Enciende la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.FadeOff(System.Byte)">
            <summary>
            Apaga la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.StartSingleMenu(Kriptok.Views.Texts.SuperFont,System.Action{Kriptok.Scenes.SceneHandler.SceneMenuBuilder})">
            <summary>
            Inicia un nuevo menú, y espera hasta que se seleccione una opción, para actuar en consecuencia.
            </summary>        
        </member>
        <member name="T:Kriptok.Scenes.SceneHandler.SceneMenuBuilder">
            <summary>
            Representa una clase para construir menues simples.
            </summary>
        </member>
        <member name="P:Kriptok.Scenes.SceneHandler.SceneMenuBuilder.OnChangeOption">
            <summary>
            Método que se dispara al mover el cursor a otra opción del menú.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartSubScreen(Kriptok.Scenes.SceneHandler,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Inicializa una sub-región de pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartScroll(Kriptok.Scenes.SceneHandler,Kriptok.Modes.Scroll.Base.ScrollLayerBase)">
            <summary>
            Inicializa un modo de Scroll con la "capa" indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartScroll(Kriptok.Scenes.SceneHandler,System.Drawing.Rectangle,Kriptok.Modes.Scroll.Base.ScrollLayerBase)">
            <summary>
            Inicializa un modo de Scroll con la "capa" indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartScroll(Kriptok.Scenes.SceneHandler,System.Drawing.Rectangle,Kriptok.Maps.Tiles.TileMapInfo)">
            <summary>
            Establece el modo de renderización Scroll para la región con un mapa de tiles.
            </summary>  
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartScroll3D(Kriptok.Scenes.SceneHandler,Kriptok.Modes.Scroll.Base.ScrollLayerBase)">
            <summary>
            Inicializa un modo de Scroll tridimencional con la "capa" indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartScroll3D(Kriptok.Scenes.SceneHandler,System.Drawing.Rectangle,Kriptok.Modes.Scroll.Base.ScrollLayerBase)">
            <summary>
            Inicializa un modo de Scroll tridimencional con la "capa" indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartAxonometric``1(Kriptok.Scenes.SceneHandler,System.Drawing.Rectangle,Kriptok.Maps.Tiles.Editor.TileMapX)">
            <summary>
            Establece el modo de renderización Scroll para la región con un mapa de tiles.
            </summary>  
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartAxonometric(Kriptok.Scenes.SceneHandler,Kriptok.Modes.Scroll.Base.ScrollLayerBase)">
            <summary>
            Inicia un modo de renderización en perspectiva axonométrica para toda la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartAxonometric``1(Kriptok.Scenes.SceneHandler,``0)">
            <summary>
            Inicia un entorno de scroll axonométrico.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartAxonometric(Kriptok.Scenes.SceneHandler,System.Drawing.Rectangle,Kriptok.Modes.Scroll.Base.ScrollLayerBase)">
            <summary>
            Inicia un modo de renderización en perspectiva axonométrica en la región de pantalla indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartMode7(Kriptok.Scenes.SceneHandler,System.Reflection.Assembly,System.String,System.Boolean,System.Action{Kriptok.Modes.Pseudo3D.Mode7.PlotMode7View})">
            <summary>
            Inicializa una interfaz Mode7 en toda la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartPseudo3D(Kriptok.Scenes.SceneHandler,System.Action{Kriptok.Modes.Pseudo3D.Mode7.PlotMode7View})">
            <summary>
            Inicializa la perspectiva pseudo 3D en toda la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartFull3D(Kriptok.Scenes.SceneHandler,System.Drawing.Rectangle)">
            <summary>
            Inicializa un modo 3D en el área del rectángulo indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartFull3D(Kriptok.Scenes.SceneHandler)">
            <summary>
            Inicializa un modo 3D en toda la pantalla.
            </summary>        
        </member>
        <member name="T:Kriptok.Scenes.SceneInitializer">
            <summary>
            Representa las acciones que puede realizar una escena al iniciar.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneInitializer.scene">
            <summary>
            Escena a la que pertenece.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneInitializer.#ctor(Kriptok.Scenes.SceneBase)">
            <summary>
            Constructor interno, para asegurar que no se pueda heredar la clase.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.#ctor">
            <summary>
            Constructor interno, para asegurar que no se pueda heredar la clase fuera de esta librería.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.PlaySound(System.Reflection.Assembly,System.String)">
            <summary>
            Reproduce un sonido que esté señalado como Recurso Embebido. Este método sólo
            permite reproducir un sonido a la vez.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra el sonido.</param>
            <param name="resourceName">Nombre del recurso a reproducir.</param>
            <returns>Devuelve un handler del sonido que permite volver a reproducirlo o detenerlo.</returns>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.PlaySoundLooping(System.Reflection.Assembly,System.String)">
            <summary>
            Reproduce repetidamente un sonido que esté señalado como Recurso Embebido. Este método sólo
            permite reproducir un sonido a la vez.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra el sonido.</param>
            <param name="resourceName">Nombre del recurso a reproducir.</param>
            <returns>Devuelve un handler del sonido que permite volver a reproducirlo o detenerlo.</returns>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.PlaySound(Kriptok.Common.Resource)">
            <summary>
            Reproduce un sonido que esté señalado como Recurso Embebido. Este método sólo
            permite reproducir un sonido a la vez.
            </summary> 
            <param name="resource">Recurso a reproducir.</param>
            <returns>Devuelve un handler del sonido que permite volver a reproducirlo o detenerlo.</returns>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.PlaySoundSync(System.Reflection.Assembly,System.String)">
            <summary>
            Reproduce un sonido de forma sincrónica.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra el sonido.</param>
            <param name="resourceName">Nombre del recurso a reproducir.</param> 
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.StopMusic">
            <summary>
            Detiene la música que esté sonando en ese momento.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.PlayMusic(Kriptok.Audio.PlayMusicOptions)">
            <summary>
            Reproduce la música indicada por parámetro.
            </summary>
            <param name="options">Música y configuración a reproducir.</param>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.PlayMusic(System.Reflection.Assembly,System.String,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Double)">
            <summary>
            Reproduce la música indicada según los parámetros.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra la música.</param>
            <param name="resourceName">Nombre del recurso a reproducir.</param> 
            <param name="loop">Indica si se reproduce en loop.</param>
            <param name="from">Indica desde qué punto debe empezar a reproducirse.</param>
            <param name="to">Indica hasta qué punto debe reproducirse.</param>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.PauseMusic">
            <summary>
            Pausa la música que esté escuchándose en el momento.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.ResumeMusic">
            <summary>
            Continúa con la música que estába escuchándose y que fue pausada.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.ConsoleBeep(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Reproduce un sonido de la consola.
            </summary>
            <param name="frequency">Valor entre 37 - 32767.</param>
            <param name="duration">Duración en milisegundos.</param>
            <param name="async">Indica si lo debe ejecutar de forma sincrónica o asincrónica.</param>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.FindFirst``1">
            <summary>
            Busca el primer objeto vivo del tipo indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.FindAll``1">
            <summary>
            Devuelve todos los objetos vivos del tipo indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.Exit">
            <summary>
            Se abandona completamente el juego, independientemente del estado de los procesos.
            </summary>
        </member>
        <member name="P:Kriptok.Scenes.FrameHandler.ScreenRegion">
            <summary>
            Obtiene una referencia a la región de la pantalla completa.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.Rand(System.Int32,System.Int32)">
            <summary>
            Obtiene un número aleatorio entre los valores indicados por parámetro.
            
            Los dos se consideran incluidos en el rango posible.
            </summary>    
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.Key(System.Windows.Forms.Keys)">
            <summary>
            Devuelve si la tecla indicada por parámetro está presionada.
            </summary>    
        </member>
        <member name="M:Kriptok.Scenes.FrameHandlerExtensions.PlayCursorMoveSound(Kriptok.Scenes.FrameHandler)">
            <summary>
            Reproduce un sonido de la librería interna para mover cursores en menúes.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.FrameHandlerExtensions.PlayMenuOKSound(Kriptok.Scenes.FrameHandler)">
            <summary>
            Reproduce un sonido de la librería interna para seleccionar una opción de menú.
            </summary>        
        </member>
        <member name="T:Kriptok.Scenes.ProcessHandler">
            <summary>
            Esta clase se utiliza para controlar el flujo de un proceso, que es en escencia un objeto
            que actua asincrónicamente.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.ProcessHandler.process">
            <summary>
            Proceso utilizado por la escena para definir comportamiento.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.ProcessHandler.#ctor(Kriptok.Entities.Base.ProcessBase)">
            <summary>
            Constructor interno, para asegurar que no se pueda heredar la clase.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.ProcessHandler.Frame(System.Int32)">
            <summary>
            Realiza una cantidad de llamados a <see cref="M:Kriptok.Scenes.ProcessHandler.Frame"/> indicada por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Common.FastList`1">
            <summary>
            Lista rápida que funciona con un array de tamaño definido internamente.
            </summary>
        </member>
        <member name="M:Kriptok.Common.FastList`1.#ctor(System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Common.FastList`1"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Common.FastList`1.Clear">
            <summary>
            Limpia la lista.
            </summary>
        </member>
        <member name="M:Kriptok.Common.FastList`1.Add(`0)">
            <summary>
            Agrega un ítem a la lista.
            </summary>        
        </member>
        <member name="M:Kriptok.Common.FastList`1.ForEach(System.Action{`0})">
            <summary>
            Ejecuta una acción para cada item de la lista.
            </summary>        
        </member>
        <member name="T:Kriptok.Common.RecursiveList`1">
            <summary>
            Representa una lista para ser recorrida recursivamente.
            </summary>
        </member>
        <member name="T:Kriptok.Common.Base.ILocalizable3D">
            <summary>
            Indica que el objeto se puede ubicar en un entorno bidimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Base.ILocalizable3D.GetRenderLocation">
            <summary>
            Obtiene la ubicación donde se encuentra la vista a renderizar.
            </summary>
        </member>
        <member name="T:Kriptok.Common.Base.IRotable3D">
            <summary>
            Representa un objeto que puede ser rotado sobre un ángulo. Una imagen o una primitiva bidimensional
            son ejemplos.
            </summary>
        </member>
        <member name="T:Kriptok.Common.Base.IRotable2D">
            <summary>
            Representa un objeto que puede ser rotado sobre un ángulo. Una imagen o una primitiva bidimensional
            son ejemplos.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Base.IRotable2D.GetRotationAngle2D">
            <summary>
            Obtiene el ángulo de rotación del objeto.
            </summary>        
        </member>
        <member name="T:Kriptok.Common.Base.IDirectionable2D">
            <summary>
            Indica que el objeto tiene una dirección sobre el plano XY.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Base.IDirectionable2D.GetDirection">
            <summary>
            Obtiene la dirección en la que "mira" el objeto.
            </summary>        
        </member>
        <member name="T:Kriptok.Common.Base.ILocalizable2D">
            <summary>
            Indica que el objeto se puede ubicar en un entorno bidimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Base.ILocalizable2D.GetLocation2D">
            <summary>
            Obtiene la ubicación donde se encuentra la vista a renderizar.
            </summary>
        </member>
        <member name="T:Kriptok.Common.IGrid3DReader`1">
            <summary>
            Representa una grilla tridimensional de un tipo indicado por parámetro.
            </summary>    
        </member>
        <member name="P:Kriptok.Common.IGrid3DReader`1.Width">
            <summary>
            Cantidad de casilleros sobre el eje X.
            </summary>
        </member>
        <member name="P:Kriptok.Common.IGrid3DReader`1.Height">
            <summary>
            Cantidad de casilleros sobre el eje Y.
            </summary>
        </member>
        <member name="P:Kriptok.Common.IGrid3DReader`1.Depth">
            <summary>
            Cantidad de casilleros sobre el eje Z.
            </summary>
        </member>
        <member name="M:Kriptok.Common.IGrid3DReader`1.Get(System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene el elemento en la posición indicada.
            </summary>        
        </member>
        <member name="T:Kriptok.Common.Box`1">
            <summary>
            Se utiliza para hacer una "caja" para estructuras como una <see cref="!:Matrix3x4F"/>. Principalmente utilizado
            para no tener que copiar toda la estructura completa cada vez.
            </summary>
        </member>
        <member name="T:Kriptok.Common.Resource">
            <summary>
            Representa información de un recurso del sistema.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Resource.#ctor(System.Reflection.Assembly,System.String)">
            <summary>
            Devuleve una nueva instancia de la clase <see cref="T:Kriptok.Common.Resource"/>.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra el recurso.</param>
            <param name="name">Nombre identificatorio del recurso.</param>
        </member>
        <member name="M:Kriptok.Common.Resource.GetStream">
            <summary>
            Obtiene el stream del recurso indicado.
            </summary>
            <returns>Devuelve el stream del recurso indicado.</returns>
        </member>
        <member name="M:Kriptok.Common.Resource.UsingStream``1(System.Func{System.IO.Stream,``0})">
            <summary>
            Ejecuta una función que recibe por parámetro el stream del recurso.
            </summary>
            <typeparam name="T">Tipo del resultado de la función.</typeparam>
            <param name="func">Función a ejecutar utilizando el stream del recurso.</param>
            <returns>Devuelve el resultado de la evaluación de la función indicada por parámetro.</returns>
        </member>
        <member name="M:Kriptok.Common.Resource.UsingStream(System.Action{System.IO.Stream})">
            <summary>
            Ejecuta una acción que recibe por parámetro el stream del recurso.
            </summary>        
            <param name="func">Acción a ejecutar utilizando el stream del recurso.</param>        
        </member>
        <member name="F:Kriptok.Common.Resource.Assembly">
            <summary>
            Referencia al ensamblado que tiene el recurso.
            </summary>
        </member>
        <member name="F:Kriptok.Common.Resource.Name">
            <summary>
            Nombre completo del recurso.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Resource.ToSampleTexture">
            <summary>
            Mantener como método aparte, recordar que está como virtual porque se hace override.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kriptok.Common.Resource.ReaddAllLines">
            <summary>
            Lee el recurso asumiendo que es texto plano.
            </summary>        
        </member>
        <member name="T:Kriptok.Common.Cache.CacheFactory">
            <summary>
            Esta clase se mantiene pública para poder monitorear la caché desde otros proyectos en modo DEBUG,
            pero interna e inaccesible en modo Release, ya que no es necesaria.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Cache.CacheFactory.#ctor">
            <summary>
            Para que no se pueda instanciar. Test Comment
            </summary>
        </member>
        <member name="T:Kriptok.Common.Cache.ItemCache`2">
            <summary>
            Esta clase se mantiene pública para poder monitorear la caché desde otros proyectos en modo DEBUG,
            pero interna e inaccesible en modo Release, ya que no es necesaria.
            </summary>  
        </member>
        <member name="M:Kriptok.Common.Cache.ItemCache`2.Clear">
            <summary>
            Limpia todos los recursos de la caché, y libera todos los recursos que se hubiesen cargado.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Cache.ItemCache`2.Resolve(`0,System.Func{`1})">
            <summary>
            Resolve utiliza el patrón doble check (antes y después de lockear).
            </summary>
            <param name="key"></param>
            <param name="resolution"></param>
            <returns></returns>
        </member>
        <member name="T:Kriptok.Helpers.DebugHelper">
            <summary>
            Funcionalidades de ayuda para el modo DEBUG.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.DebugHelper.AddToViewCount(System.Int32)">
            <summary>
            Incrementa la cantidad de vistas a renderizar en el número indicado.
            </summary>
        </member>
        <member name="T:Kriptok.Helpers.SinCosHelper">
            <summary>
            Clase utilizada para el cálculo de Senos y Cosenos tabulados.
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.SinCosHelper.tableSize">
            <summary>
            Cantidad de valores a tabular.
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.SinCosHelper.tableMask">
            <summary>
            Máscara para truncar valores.
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.SinCosHelper.multiplier">
            <summary>
            Multiplicador para transformar valores.
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.SinCosHelper.sinTable">
            <summary>
            Tabla de valores de SENO precalculados.
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.SinCosHelper.cosTable">
            <summary>
            Tabla de valores del coseno precalculados.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.SinCosHelper.TabSinF(System.Single)">
            <summary>
            Obtiene el seno precalculado para el ángulo (en radianes) indicado.
            
            Sólo optimiza en modo DEBUG, de lo contrario, se utiliza la misma función que antes.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.SinCosHelper.TabCosF(System.Single)">
            <summary>
            Obtiene coseno precalculado para el ángulo (en radianes) indicado.
            
            Sólo optimiza en modo DEBUG, de lo contrario, se utiliza la misma función que antes.
            </summary>
        </member>
        <member name="T:Kriptok.Helpers.ThreadMessagingHelper">
            <summary>
            Funcionalidades utilizadas para comunicarse entre threads.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.TypeHelper.RetrieveAll(System.Boolean)">
            <summary>
            
            </summary>
            <param name="force">Fuerza a cargar todos los ensamblados que encuentre en la ruta
            donde se encuentra corriendo el programa.</param>        
        </member>
        <member name="M:Kriptok.Helpers.TypeHelper.GetByName(System.String)">
            <summary>
            Esta función busca en todas las librerías referenciadas un tipo indicado por su nombre.
            Si dos tipos se llaman exactamente igual, devolverá la primera que encuentre que puede o no ser la correcta.
            Por tanto, se debería especificar la clase con todo su namespace.
            </summary>
            <param name="typeName">Nombre de la clase.</param>        
        </member>
        <member name="M:Kriptok.Helpers.TypeHelper.GetByAssemblyQualifiedName(System.String)">
            <summary>
            Esta función busca en todas las librerías referenciadas un tipo indicado por su nombre.
            Si dos tipos se llaman exactamente igual, devolverá la primera que encuentre que puede o no ser la correcta.
            Por tanto, se debería especificar la clase con todo su namespace.
            </summary>
            <param name="assemblyQualifiedName">Nombre de la clase.</param>        
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwSize">
            <summary>
            size of structure
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwFlags">
            <summary>
            flags to dicate what to return
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwXpos">
            <summary>
            x position
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwYpos">
            <summary>
            y position
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwZpos">
            <summary>
            z position
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwRpos">
            <summary>
            rudder/4th axis position
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwUpos">
            <summary>
            5th axis position
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwVpos">
            <summary>
            6th axis position
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwButtons">
            <summary>
            button states
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwButtonNumber">
            <summary>
            current button number pressed
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwPOV">
            <summary>
            point of view state
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwReserved1">
            <summary>
            reserved for communication between winmm driver
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwReserved2">
            <summary>
            reserved for future expansion
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JoystickHelper.connectedWhenStarted">
            <summary>
            Indica si el joystick estaba conectado cuando se inició el juego.
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JoystickHelper.connected">
            <summary>
            Indica si el joystick sigue conectado.
            </summary>
        </member>
        <member name="T:Kriptok.Helpers.PointFHelper">
            <summary>
            Funcionalidades de ayuda relacionadas a la clase <see cref="T:System.Drawing.PointF"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.PointFHelper.SortClockwise(System.Drawing.PointF[])">
            <summary>
            Ordena los puntos bidimensionales en el orden de las agujas del reloj.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.PointFHelper.TriangleArea(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Calcula el área interior de un triángulo dado por tres <see cref="T:System.Drawing.PointF"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.PointFHelper.TriangleAreaX2(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Calcula el doble del área interior de un triángulo dado por tres <see cref="T:System.Drawing.PointF"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.PointFHelper.TriangleAreaX2(System.Drawing.PointF[])">
            <summary>
            Calcula el doble del área interior de un triángulo dado por tres <see cref="T:System.Drawing.PointF"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.ExceptionHelper.ValidateRangeCO(System.Int32,System.Int32,System.Int32)">
            <summary>
            Valida que el rango del valor sea entre [0, max), es decir, cerrado en 0, abierto en max)
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.ExceptionHelper.MsgBox(System.Exception)">
            <summary>
            Muestra por pantalla la excepción recibida.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.ImageAttributesHelper.Alpha(System.Single)">
            <summary>
            Crea una instancia de <see cref="T:System.Drawing.Imaging.ImageAttributes"/> que sólo modifica la transparencia de la imagen.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.IntHelper.Iota(System.Int32)">
            <summary>
            Genera un arreglo de números secuenciales a partir del 0, hasta el número
            indicado por parámetro (no incluído).
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.IntHelper.Iota(System.Int32,System.Int32)">
            <summary>
            Genera un arreglo de números secuenciales en el rango descripto por
            los parámetros (no incluyendo al límite superior).
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Kriptok.Helpers.IntHelper.BetweenCloseOpen(System.Int32,System.Int32,System.Int32)" -->
        <member name="T:Kriptok.Helpers.XmlHelper">
            <summary>
            Funcionalidades de ayuda rápida para trabajar con texto Xml.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.XmlHelper.Serialize(System.Object,System.Boolean)">
            <summary>
            Serializa un objeto a XML.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.XmlHelper.Deserialize``1(System.String)">
            <summary>
            Deserializa un texto Xml al tipo indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.XmlHelper.DeserializeFile``1(System.String)">
            <summary>
            Deserializa un archivo de texto en formato Xml al tipo indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.XmlHelper.Deserialize``1(System.Reflection.Assembly,System.String)">
            <summary>
            Deserializa un recurso en formato Xml al tipo indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.XmlHelper.SerializeTo(System.Object,System.String)">
            <summary>
            Serializa un objeto a Xml y lo guarda en el archivo indicado.
            </summary>        
        </member>
        <member name="T:Kriptok.Helpers.ArrayHelper">
            <summary>
            Grupo de funcionalidades comunes para arrays.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.ArrayHelper.FastCopy(System.Int32[0:,0:])">
            <summary>
            Hace una copia en memoria de una matrix para hacerlo más performante.
            </summary>        
            <param name="matrix">Matrix de la cuál se desea generar la copia.</param>
            <returns>Devuelve una copia de la matriz indicada por parámetro.</returns>
        </member>
        <member name="M:Kriptok.Helpers.ArrayHelper.AreEqual(System.Int32[],System.Int32[])">
            <summary>
            Indica si dos vectores son iguales. Para esto, los valores "null" se toman como si 
            el array estuviera vacío.
            </summary>        
        </member>
        <member name="T:Kriptok.Helpers.BitmapHelper">
            <summary>
            Agrupador de funcionalidades de ayuda sobre <see cref="T:System.Drawing.Bitmap"/>s.
            </summary>
        </member>
        <member name="T:Kriptok.Helpers.ResourcesHelper">
            <summary>
            Clase estática dedicada a facilitar la obtención y manipulación de recursos.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.ResourcesHelper.GetResources(System.Reflection.Assembly,System.String)">
            <summary>
            Obtiene una lista con varios recursos que contengan la cadena indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.ResourcesHelper.GetBytes(System.Reflection.Assembly,System.String)">
            <summary>
            Obtiene los datos binarios del recurso indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.ResourcesHelper.ResolveId(Kriptok.Common.Resource)">
            <summary>        
            Graba un recurso indicado por parámetro como archivo para ser ejecutado más tarde. Devuelve
            el id del recurso para identificarlo.
            </summary>        
        </member>
        <member name="T:Kriptok.Helpers.KeyboardHelper">
            <summary>
            Esta clase es utilizada para descubrir las interacciones del usuario.
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.KeyboardHelper.ScanCode">
            <summary>
            Código de la última tecla presionada.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.KeyboardHelper.Key(System.Windows.Forms.Keys)">
            <summary>
            Indica si la tecla indicada se encuentra presionada.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.KeyboardHelper.AnyKeyPressed">
            <summary>
            Devuelve la tecla presionada si se ha presionado una tecla.
            </summary>        
        </member>
        <member name="T:Kriptok.Helpers.MathHelper">
            <summary>
            Funciones matemáticas extra.
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.MathHelper.Gravity">
            <summary>
            Constante de aceleración gravitatoria.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.SinF(System.Single)">
            <summary>
            Obtiene el seno de un ángulo y lo devuelve en tipo de dato <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.CosF(System.Single)">
            <summary>
            Obtiene el coseno de un ángulo y lo devuelve en tipo de dato <see cref="T:System.Single"/>.
            </summary>     
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetDistance(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Calcula la distancia tridimensional entre dos puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetDistanceF(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Calcula la distancia tridimensional entre dos puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetDistance(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Calcula la distancia bidimensional entre dos puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetDistanceF(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Calcula la distancia bidimensional entre dos puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetDistance(Kriptok.Drawing.Vector2I,Kriptok.Drawing.Vector2I)">
            <summary>
            Calcula la distancia bidimensional entre dos puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetDistanceF(Kriptok.Drawing.Vector2I,Kriptok.Drawing.Vector2I)">
            <summary>
            Calcula la distancia bidimensional entre dos puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.SinF(System.Double)">
            <summary>
            
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.RadiansToDegrees(System.Single)">
            <summary>
            Convierte un ángulo en radiantes a grados.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.RadiansToMinusDegrees(System.Single)">
            <summary>
            Convierte un ángulo en radiantes a grados negativos.
            Es un cambio de signo que se ahorra en ciclos.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetDistance(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calcula la distancia entre los puntos indicados.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetDistanceF(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calcula la distancia entre los puntos indicados.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetDistance(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calcula la distancia entre los puntos indicados.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.SimplifyAngle(System.Double)">
            <summary>
            Busca el ángulo correspondiente al indicado que se encuentra entre 0 y 2pi.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.SimplifyAngle(System.Single)">
            <summary>
            Busca el ángulo correspondiente al indicado que se encuentra entre 0 y 2pi.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetAngle(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Devuelve el ángulo entre dos puntos indicados por las coordenadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetAngleF(System.Single,System.Single)">
            <summary>
            Devuelve el ángulo del vector indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetAngleF(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Devuelve el ángulo del vector indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetAngleF(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Devuelve el ángulo entre dos vectores.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetAngleF(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Devuelve el ángulo entre dos puntos indicados por las coordenadas.
            </summary>      
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.TileCoord(System.Int32,System.Int32)">
            <summary>
            Ubica una coordenada entre el 0 y el máximo.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.Avg(System.Single,System.Single)">
            <summary>
            Obtiene el promedio entre dos valores. 
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.Avg(System.Single,System.Single,System.Single)">
            <summary>
            Obtiene el promedio entre dos valores. 
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.Avg(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Obtiene el negativo del promedio entre cuatro valores. 
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.NAvg(System.Single,System.Single)">
            <summary>
            Obtiene el promedio entre dos valores. 
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.NAvg(System.Single,System.Single,System.Single)">
            <summary>
            Obtiene el negativo del promedio entre tres valores. 
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.NAvg(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Obtiene el negativo del promedio entre cuatro valores. 
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.SignedMax(System.Single,System.Single)">
            <summary>
            Obtiene el valor que se encuentra más lejos del 0 en la recta numérica,
            independientemente de su signo.
            </summary>        
        </member>
        <member name="M:Kriptok.IO.MaxScore.CheckAndSave(System.Int32)">
            <summary>
            Actualiza el "máximo puntaje", siempre y cuando sea mayor que el actual.
            Luego devuelve el valor máximo.
            </summary>        
        </member>
        <member name="T:Kriptok.IO.Memory`1">
            <summary>
            Utilizada para guardar un archivo con datos del juego para continuar después.
            </summary>    
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.Face3DBase.isValid">
            <summary>
            Indica si la vista está completamente delante de la cámara para el siguiente frame.
            
            Esto obviamente sólo tiene sentido en interfaces tridimensionales.
            
            Si la cara es válida, los vértices los vértices <see cref="F:Kriptok.Views.Shapes.Base.Face3DBase.P0"/>, <see cref="F:Kriptok.Views.Shapes.Base.Face3DBase.P1"/> y <see cref="F:Kriptok.Views.Shapes.Base.Face3DBase.P2"/>
            tienen las coordenadas bidimensionales de la pantalla calculadas.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.IsVisible3D(Kriptok.Modes.Context.Base.IProjector,Kriptok.Drawing.BoundF2)">
            <summary>
            Método para filtrar la visibilidad de las vistas en entornos tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.BackFaceCull3D(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Indica si la cara debe ser excluída de la renderización por "darle la espalda a la cámara".
            
            Este algoritmo sólo tiene sentido en tres dimensiones.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.IsVisible2D(Kriptok.Modes.Context.Base.IProjector,Kriptok.Drawing.BoundF2)">
            <summary>
            Método para filtrar la visibilidad de las vistas en entornos bidimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.BackFaceCulling2D">
            <summary>
            Indica si la cara debe ser excluída de la renderización por "darle la espalda a la cámara".
            
            Este algoritmo sólo tiene sentido en dos dimensiones dimensiones.
            
            Y re quiere que se pre-calculen los vétices <see cref="F:Kriptok.Views.Shapes.Base.Face3DBase.P0"/>, <see cref="F:Kriptok.Views.Shapes.Base.Face3DBase.P1"/> y <see cref="F:Kriptok.Views.Shapes.Base.Face3DBase.P2"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.IsInBounds(Kriptok.Modes.Context.Base.IProjector,Kriptok.Drawing.BoundF2)">
            <summary>
            Este método chequea si los vértices de la figura están dentro de los límites de definidos de la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.Swap">
            <summary>
            Invierte la normal de la cara, para que sae visible desde el otro lado.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.GetVertex(System.Int32)">
            <summary>
            Obtiene el vértice indicado por su índice.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.IsInvalid">
            <summary>
            Se mantiene virtual para que los "quads" puedan agregar el V3.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.IsValid">
            <summary>
            Se mantiene virtual para que los "quads" puedan agregar el V3.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Base.Face3DBase.Vertices">
            <summary>
            Obtiene los vértices que componen la figura tridimensional.        
            Se mantiene virtual para que se pueda sobreescribir en los "quads".
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.GetTriangles2D(Kriptok.Modes.Context.Base.IProjector,Kriptok.Drawing.BoundF2,Kriptok.Drawing.Triangle3D)">
            <summary>
            Este método obtiene los triángulos bidimensinales que se deben renderizar
            en base a un triángulo tridimensional, ya clippeados contra el plano Z, y los
            bordes de la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.Z0">
            <summary>
            Indica si todas las coordenadas Z de los vértices de la cara son = 0f.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.IRenderBranch">
            <summary>
            Esta interfaz indica que la vista en cuestión puede renderizarse en entornos bidimensionales y tridimencionales.    
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.IVisible">
            <summary>
            Interfaz que permite a una figura saber si es visible según una proyección determinada, o
            si está dentro de los límites de la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.IVisible.IsVisible2D(Kriptok.Modes.Context.Base.IProjector,Kriptok.Drawing.BoundF2)">
            <summary>
            Indica si la cara es visible en pantalla (o por lo menos a primera vista).
            
            Este método asume que los puntods son válidos (es decir, en un entorno tridimensional, están
            delante de la cámara.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.IVisible.IsVisible3D(Kriptok.Modes.Context.Base.IProjector,Kriptok.Drawing.BoundF2)">
            <summary>
            Indica si la cara es visible en pantalla (o por lo menos a primera vista).
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Particle.GetVertex(System.Int32)">
            <summary>
            Obtiene el vértice indicado por su índice.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Particle.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Particle.Project(Kriptok.Modes.Context.Base.IRenderContext)">
            <summary>
            Proyecta el vector calculado contra la pantalla.
            </summary>        
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.Particle`1.Angle">
            <summary>
            Angulo de rotación de la figura bidimensional.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.PolygonFaceBase">
            <summary>
            Esta clase representa un polígono que se renderiza en tres dimensiones. Puede ser utilizado
            como las tapas de un <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> tridimensional, por ejemplo, como en la
            <see cref="T:Kriptok.Views.Shapes.FlatPathView"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.PolygonFaceBase.Dispose">
            <summary>
            Libera el graphicspath utilizado.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.QuadFace3D">
            <summary>
            Representa una cara de cuatro lados.    
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Base.QuadFace3D.Vertices">
            <summary>
            Obtiene los vértices que componen la figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.QuadFace3D.GetVertex(System.Int32)">
            <summary>
            Obtiene el vértice indicado por su índice.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.QuadFace3D.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipFace3DBase.Render2D(Kriptok.Modes.Context.Base.IRenderContext)">
            <summary>
            Renderiza la vista para entornos bidimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipFace3DBase.Render3D(Kriptok.Modes.Context.Base.IRenderContext3D)">
            <summary>
            Renderiza la vista para entornos tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipFace3DBase.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.FastShapeViewBase">
            <summary>
            Representa la clase base para figuras geométricas.
            
            Contiene todos los cálculos necesarios para ubicar puntos tridimensionales.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.FastShapeViewBase.rotable">
            <summary>
            Rotaciones a aplicar a la figura.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.FastShapeViewBase.Scale">
            <summary>
            Aplica transformaciones de escalamiento antes de rotar la figura.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.FastShapeViewBase.ReScale">
            <summary>
            Aplica transformaciones de escalamiento después de rotar la figura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.FastShapeViewBase.Translate2D(Kriptok.Modes.Context.Base.ITranslatableRenderContext)">
            <summary>
            Traslada el espacio de gráficos bidireccionales para que se pueda renderizar utilizando cualquier perspectiva,
            pero que siempre quede como si se renderizara en el centro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ISwappable.Swap">
            <summary>
            Invierte la normal del polígono.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.IFace">
            <summary>
            Interfaz que representa una cara de una figura poligonal.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.IShape">
            <summary>
            Indica que se trata de una figura geométrica, es decir, que tiene vértices.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Base.IShape.Vertices">
            <summary>
            Obtiene los vértices que componen la figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.IShape.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.IShape.GetVertex(System.Int32)">
            <summary>
            Obtiene el vértice indicado por su índice.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.IShape.GetPriority(Kriptok.Modes.Context.Base.IProjector)">
            <summary>
            Indica la prioridad de dibujo de la figura, según la proyección correspondiente.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.IShape.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.IShapeExtensions">
            <summary>
            Funcionalidades extra para figuras.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.IShapeExtensions.AllVertices(Kriptok.Views.Shapes.Base.IShape,System.Func{Kriptok.Views.Shapes.Vertices.Vertex3,System.Boolean})">
            <summary>
            Evalúa una condición todos los vértices de la figura, e indica si todos cumplen con la condición.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.VertexBase">
            <summary>
            Clase base para vértices de espacio tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.VertexBase.Transformed">
            <summary>
            Este es el punto transformado después de aplicar las transformaciones.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.VertexBase.Location">
            <summary>
            Punto base de las coordenadas, antes de transformar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.VertexBase.CalculateBounds(Kriptok.Views.Shapes.Base.VertexBase[])">
            <summary>
            Obtiene los puntos máximos y mínimos de entre todos los vértices de la figura.
            </summary>
            <param name="vertices">Arreglo con todos los vértices de la figura.</param>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.VertexBase.GetLocation">
            <summary>
            Obtiene la ubicación no proyectada ni transformada del vértice.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.VertexBase.GetLocationZ">
            <summary>
            Obtiene la coordenada Z del vértice.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.VertexBase.SortClockwiseZX(System.Collections.Generic.IEnumerable{Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Ordena los vectoras en el sentido de las agujas del reloj.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.ShapeViewBase">
            <summary>
            Esta clase representa una figura tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.ShapeViewBase.vertices">
            <summary>
            Listado con todos los vértices de la figura que hay que transformar.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.ShapeViewBase.vertexCollection">
            <summary>
            Colección de vértices, utilizada para aplicar transformaciones masivas a los vértices.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.ShapeViewBase.boundVertices">
            <summary>
            Las esquinas de la figura. Son utilizadas para validar si se encuentra en pantalla de una forma
            más rápida.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.ShapeViewBase.hasToTransformVertices">
            <summary>
            Indica si se deben transformar con la matriz los vértices de los "límites" de la figura.
            
            Cuando tiene menos de 8 vértices, los límites de la figura son los mismos que los que componen
            la figura. Por lo tanto, en esos casos no es necesario transformarlos.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.ShapeViewBase.boundWires">
            <summary>
            Acá almaceno los pares ordenados de líneas que componen los límites de la figura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.#ctor(Kriptok.Views.Shapes.Base.VertexBase[])">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Base.ShapeViewBase"/>.
            </summary>
            <param name="vertices">Arreglo con todos los vértices de la figura.</param>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.RecalculateBounds">
            <summary>
            Recalcula los límites de la figura.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.CreateBoundVertices(Kriptok.Views.Shapes.Base.VertexBase[])">
            <summary>
            Crea 8 vértices alrededor de la figura para determinar los límites de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.AddViews(System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable},Kriptok.Modes.Context.Base.IRenderBufferContext)">
            <summary>
            Invierto los parámetros para diferenciarla del otro método <see cref="M:Kriptok.Views.Shapes.Base.ShapeViewBase.AddViews(System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable},Kriptok.Modes.Context.Base.IRenderBufferContext)"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.ApplyTransformationMatrix(Kriptok.Modes.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable},Kriptok.Common.Box{Kriptok.Drawing.Algebra.Matrix3x4F})">
            <summary>
            Este método lo que hace es ignorar la validación de si "está visible". Y ya de una asume que 
            ya tenés la matriz de transformación de la cámara.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.GetCollisionBounds">
            <summary>
            Obtiene los límites de la figura para la colisión.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.Get25DBoundValues(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext,System.Single)">
            <summary>
            Obtiene los límites bidimensionales de la figura, pero centrados en el origen.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.GetClosestPoint">
            <summary>
            Obtiene la distancia desde la cámara al vértice más cercano que compone la figura.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA0100">
            <summary>
            Este material representa un color fijo.
            
            Alpha       = 
            Diffuse     =   0f
            Emission    =   1f
            Specularity =   0f
            Power       =   0b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA0E00">
            <summary>
            Este material representa un color fijo.
            
            Alpha       = 
            Diffuse     =   0f
            Emission    =   
            Specularity =   0f
            Power       =   0b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat0">
            <summary>
            Material simple, sin decoraciones.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat11E000">
            <summary>    
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   0f
            Power       =   0b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat110100">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
            
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   1f
            Power       =   0b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA10100">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
                
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   1f
            Power       =   0b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat110110">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
            
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   1f
            Power       =   1b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA10110">
            <summary>       
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   1f
            Power       =   1b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat1101P0">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
            
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   1f
            Power       =   
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA101P0">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
                
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   1f
            Power       =   
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat110S10">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
            
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   
            Power       =   1b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA10S10">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
                
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   
            Power       =   1b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat110S00">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
            
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   
            Power       =   0
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA10S00">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
            
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   
            Power       =   0
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat110SP0">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
            
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   
            Power       =   
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA10SP0">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
                
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   
            Power       =   
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat110000">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
            
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   0f
            Power       =   0b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA10000">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
                
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   0f
            Power       =   0b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MaterialAD10P0">
            <summary>
            Esta clase representa un color básico, no se ve afectado por la luz ambiental.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Wireframe.FlatSphereView">
            <summary>
            Vista que representa una "esfera" con meridianos y paralelos.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Wireframe.WireframeOctahedronView">
            <summary>
            Octaedro tridimensional sólo con lineas.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Wireframe.WireframeSphereView">
            <summary>
            Vista que representa una "esfera" con meridianos y paralelos.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Wireframe.WireframePlaneView">
            <summary>
            Representa rectangulo tridimensional dividido en secciones.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Wireframe.WireframePlaneView.#ctor(System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Wireframe.WireframePlaneView"/>
            </summary>        
        </member>
        <member name="F:Kriptok.Views.Shapes.MeshBuilderBase.instancedTextures">
            <summary>
            Texturas instanciadas para crear el modelo tridimencional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.SimplifyKey(System.String)">
            <summary>
            "simplifica" las claves de las texturas utilizadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.ProcessFileAsModel(System.String[])">
            <summary>
            Este método implementa el parseo del archivo.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.MeshBuilderBase.Faces">
            <summary>
            Obtiene todas las caras generadas para el modelo.
            </summary>   
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.SwapAllFaces">
            <summary>
            Invierte las normales de todas las caras de la figura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.InstanceTextureFor(Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderFace,System.Collections.Generic.IDictionary{System.String,Kriptok.Views.Shapes.TextureResource})">
            <summary>
            Instancia la textura utilizada en la cara indicada por parámetro.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderFace.Vertices">
            <summary>
            Obtiene los tres vértices que conforman la cara.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderFace.MaterialId">
            <summary>
            Obtiene el Id del material que utiliza esta cara.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderFace.IsTexturedFace">
            <summary>
            Indica si la cara es texturada.
            </summary>            
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderFace.Swap">
            <summary>
            Invierte la normal de la cara.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderFace.ThrowMissingTextureException">
            <summary>
            Lanza una excepción de que no se ha encontrado información del recurso.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderMaterial">
            <summary>
            Material de modelo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderTexture.Instance(Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderMaterial,System.Collections.Generic.IDictionary{System.String,Kriptok.Views.Shapes.TextureResource})">
            <summary>
            Instancia la textura.
            </summary>            
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderTexture.ThrowMissingTextureException">
            <summary>
            Lanza una excepción de que no se ha encontrado información del recurso.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.SpaceShipMeshView">
            <summary>
            Vista de una simple nave espacial poligonal, simple y básica.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.TextureResource">
            <summary>
            Representa un recurso de textura para utilizar con modelos texturados.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.TextureResource.DisableShading">
            <summary>
            Activa o desactiva la incidencia de la luz sobre la textura.
            Ideal para pruebas no relacionadas a la performance.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Textured.TexturedSphereView">
            <summary>
            Vista que representa una "esfera" con meridianos y paralelos.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Textured.PlotTexturedPolygonView">
            <summary>
            Representa un polígono tridimensional texturado.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Textured.TexturedTerrainView">
            <summary>
            Esta vista representa una montaña tridimensional con textura basado en una cuadrícula.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Textured.TexturedTerrainView.#ctor(Kriptok.Maps.Terrains.ITerrainData,System.Reflection.Assembly,System.String)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Textured.TexturedTerrainView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textured.TexturedTerrainView.#ctor(Kriptok.Maps.Terrains.ITerrainData,Kriptok.Views.Shapes.TextureBuilder)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Textured.TexturedTerrainView"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Textured.TexturedTerrainView.#ctor(Kriptok.Maps.Terrains.ITerrainData,Kriptok.Views.Shapes.TextureBuilder,System.Drawing.Size)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Textured.TexturedTerrainView"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Textured.TexturedTerrainView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            
            Los terrenos son en principio no convexos. Puede ser que hay algún terreno convexo, pero en general
            se infiere que no será el caso.
            </summary>      
        </member>
        <member name="M:Kriptok.Views.Shapes.Textured.TexturedTerrainView.RemoveY0Faces">
            <summary>
            Remueve las caras que tiene Y = 0 en todas los vértices.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.TexturedTriFace3DClippable">
            <summary>
            Esta forma representa un polígono de tres caras con una textura aplicada.
            
            La particularidad es que esta figura se "clippea" contra el eje Z.
            Esto se debe a que si el polígono es muy grande, puede producir errores al clippearse.
            Por tanto sólo se debe usar en instancias controladas donde los polígonos sean de tamaño moderado.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DClippable.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DClippable.FillClipping(Kriptok.Modes.Context.Base.IRenderContext,Kriptok.Views.Shapes.IGdipTexture,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint)">
            <summary>
            Utiliza una textura para llenar una determinada región de la pantalla, con las
            coordenadas indicadas por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Vertices.Vertex25Base">
            <summary>
            Representa una clase base para vértices de 2.5 dimensiones.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Vertices.Vertex25Base.pivot">
            <summary>
            Punto de apoyo bidimensional del vértice de 2.5 dimensiones.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.Vertex25Base.#ctor(Kriptok.Drawing.Vertex2)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Vertices.Vertex25Base"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.Vertex25Base.#ctor(Kriptok.Views.Shapes.Vertices.Vertex25Base)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Vertices.Vertex25Base"/>,
            utilizando como pivote el pivote del vértice indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.Vertex25Base.GetDistance2D(Kriptok.Views.Shapes.Vertices.Vertex25Base,Kriptok.Views.Shapes.Vertices.Vertex25Base)">
            <summary>
            Calcula la distancia bidimensional entre dos vértices de 2.5 dimensiones.
            </summary>    
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.Vertex25Base.SamePivot(Kriptok.Views.Shapes.Vertices.Vertex25Base)">
            <summary>
            Indica si ambos vértices comparten el mismo pivot.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Vertices.Vertex25Normal">
            <summary>
            Representa un tipo de vértice para entorno Pseudo3D que además tiene una normal.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.Vertex25Normal.#ctor(Kriptok.Views.Shapes.Vertices.Vertex25Normal)">
            <summary>
            Constructor utilizado para poder reutilizar el pivot de uno de los vértices.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.Vertex25Normal.GetNormal">
            <summary>
            Obtiene la normal asociada a este vértice.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.Vertex25.#ctor(Kriptok.Views.Shapes.Vertices.Vertex25)">
            <summary>
            Constructor utilizado para poder reutilizar el pivot de uno de los vértices.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Vertices.CalculatedVertex">
            <summary>
            Representa un vértice cuya transformación es buscar el punto intermedio
            entre varios vértices.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Vertices.CalculatedVertex.vertices">
            <summary>
            Indica los puntos en base a los cuales debe promediar su posición.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Vertices.CalculatedVertex.verticesDivisor">
            <summary>
            Inverso de la cantidad de vértices por los que habría que dividir
            para calcular el promedio.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.CalculatedVertex.#ctor(Kriptok.Views.Shapes.Base.VertexBase[])">
            <summary>        
            </summary>
            <param name="vertices">Indica los puntos en base a los cuales debe promediar su posición.</param>
        </member>
        <member name="T:Kriptok.Views.Shapes.Vertices.Vertex3">
            <summary>
            Representa un vértice tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Meshes.cache">
            <summary>
            Cache de recursos parseados.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Meshes.ClearCache">
            <summary>
            Limpia los modelos cargados en memoria.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Meshes.Load(System.String)">
            <summary>
            Esta forma de cargar modelos sólo está disponible para la carga de archivos en memoria
            para programas de edición. En los juegos deben utilizarse recursos embebidos.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.TexturedTriFace3DBase">
            <summary>
            Esta forma representa un polígono de tres vértices con una textura aplicada.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TexturedTriFace3DBase.texture">
            <summary>
            Textura utilizada para renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TexturedTriFace3DBase.Swapped">
            <summary>
            Las caras texturadas no swappean a nivel vector, sólo invierten el valor del
            <see cref="!:GdipFace3DBase.IsVisible"/> ya que al swappearlo también cambarían las coordenadas
            de mapeo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DBase.#ctor(Kriptok.Views.Shapes.IGdipTexture,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.TexturedTriFace3DBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DBase.#ctor(Kriptok.Views.Shapes.TexturedTriFace3DBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.TexturedTriFace3DBase"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.TexturedTriFace3DBase.TextureWidth">
            <summary>
            Ancho de la textura.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.TexturedTriFace3DBase.TextureHeight">
            <summary>
            Alto de la textura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DBase.Swap">
            <summary>
            Invierte la normal del polígono.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DBase.SetTexture(Kriptok.Views.Shapes.IGdipTexture)">
            <summary>
            Permite establecer una nueva textura para el polígono.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DBase.BackFaceCulling2D">
            <summary>
            Indica si la normal del polígono apunta hacia la cámara.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DBase.BackFaceCull3D(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Indica si la cara debe ser excluída de la renderización por "darle la espalda a la cámara".
            
            Este algoritmo sólo tiene sentido en tres dimensiones.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DBase.GetTexture(Kriptok.Modes.Context.Base.IRenderContext)">
            <summary>
            Obtiene la textura para renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.TexturedTriFace3DUV">
            <summary>
            Esta forma representa un polígono de tres caras con una textura aplicada.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TexturedTriFace3DUV.matrix">
            <summary>
            Matriz de transformación a aplicar en el renderizado.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TexturedTriFace3DUV.unitaryRectangle">
            <summary>
            Rectángulo unitario.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DUV.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DUV.GetUV(System.Single,System.Single)">
            <summary>
            Invierte un par de coordenadas y recupera los UV originales.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.VertexCollection">
            <summary>
            Colección de vértices.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollection.Update(Kriptok.Modes.Context.Base.IRenderBufferContext)">
            <summary>
            Aplica las transformaciones sobre los vértices tridimensionales
            para que puedan ser proyectados a la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollection.UsingVertexCollection(Kriptok.Views.Shapes.Base.VertexBase[],System.Action{Kriptok.Views.Shapes.VertexCollection})">
            <summary>
            Instancia una <see cref="T:Kriptok.Views.Shapes.VertexCollection"/> para realizar transformaciones
            masivas a una colección de vértices.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollection.UsingVertexCollection(Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderVertex[],System.Action{Kriptok.Views.Shapes.VertexCollection})">
            <summary>
            Instancia una <see cref="T:Kriptok.Views.Shapes.VertexCollection"/> para realizar transformaciones
            masivas a una colección de vértices.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Texts.GdipTextureConfig">
            <summary>
            Estructura utilizada para definir la creación de texturas.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Texts.GdipTextureConfig.Options">
            <summary>
            Opciones de renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Texts.GdipTextureConfig.WrapMode">
            <summary>
            Opciones internas.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.GdipTextureShade.FullBlackShade.Size">
            <summary>
            Implementado para evitar errores.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTextureShade.SetShade(System.UInt32)">
            <summary>
            Establece el nivel de incidencia de la luz ambiental sobre la figura a renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTextureShade.ToAffineTexture">
            <summary>
            Transforma la textura en una textura de tipo <see cref="T:Kriptok.Views.Shapes.IGdipTexture"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTextureShade.WithShade(System.UInt32)">
            <summary>
            Obtiene una textura adaptada a la luz ambiental actual, si es que
            esta la toma en cuenta.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.GdipTextureBase.Animated">
            <summary>
            Por defecto, estas texturas no son animadas.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Texts.ITexture">
            <summary>
            Representa una textura general con la que llenar una región determinada.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.ITexture.Size">
            <summary>
            Obtiene el tamaño de la textura.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.ITexture.Animated">
            <summary>
            Indica si se trata de una textura animada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.ITexture.UpdateTile(System.Int32)">
            <summary>
            Actualiza la animación de un tile animado.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.ITexture.SetId(System.Int32)">
            <summary>
            Establece el id de la textura.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.IShadedTexture`1.WithShade(System.UInt32)">
            <summary>
            Obtiene una textura adaptada a la luz ambiental actual, si es que
            esta la toma en cuenta.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.ITextureExtensions.NullOrDisposed(Kriptok.Views.Shapes.Texts.ITexture)">
            <summary>
            Indica si la refencia es null, o bien ha sido limpiada de memoria.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.ITextureExtensions.HasBeenDisposed(Kriptok.Views.Shapes.Texts.ITexture)">
            <summary>
            Indica si se ha descargado de memoria.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.SampleTexture.Id">
            <summary>
            Indica el identificador del elemento dentro de la colección de texturas.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.SampleTexture.Animated">
            <summary>
            Indica si la textura tiene más de un fotograma. Es decir, si es animada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.SampleUW(System.Int32,System.Int32)">
            <summary>
            Este método asume que la coordenada V puede estar no-tileada, pero siempre es positiva.
            </summary>         
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.UpdateTile(System.Int32)">
            <summary>
            Actualiza la textura animada al estado indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.GetThumbnail">
            <summary>
            Obtiene un bitmap correspondiente a la imagen que está actualmente seleccionada.
            
            Uso un formato RGB, ya que se utiliza para los editores de mapas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.ClearCache">
            <summary>
            Limpia la caché de las texturas cargadas.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.GetFastBitmaps">
            <summary>
            Devuelve una lista con todas las imágenes 
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.GetFastBitmap">
            <summary>
            Devuelve la imagen seleccionada actualmente.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.SetShade(System.UInt32)">
            <summary>
            Establece el nivel de incidencia de la luz ambiental sobre la figura a renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.ToAffineTexture">
            <summary>
            Transforma la textura en una textura de tipo <see cref="T:Kriptok.Views.Shapes.IGdipTexture"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.WithShade(System.UInt32)">
            <summary>
            Obtiene una textura adaptada a la luz ambiental actual, si es que
            esta la toma en cuenta.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.GdipTextureBrush.Animated">
            <summary>
            Indica si la textuar actual es animada.
            La textura se considera "animada" si tiene más de una imagen sobre la que iterar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.GdipTextureBrush.FillHorizontal(System.Drawing.Graphics,System.Drawing.Drawing2D.Matrix,System.Int32,System.Int32,System.Int32)">
            <summary>
            Llena una línea horizontal con la transformación indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.GdipTextureBrush.CastY(System.Single)">
            <summary>
            Utilizado para centralizar la transformación de float a int necesaria
            en esta clase.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.GdipTextureBrush.WithShade(System.UInt32)">
            <summary>
            Obviamente se retorna a sí misma.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.ISampleTexture">
            <summary>
            Representa una textura que se utilizar para renderizar figuras pixel por pixel.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.ISampleTexture.Sample(System.Int32,System.Int32)">
            <summary>
            Obtiene el valor de color de la posición indicada por los parámetros.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.ISampleTexture.SampleUW(System.Int32,System.Int32)">
            <summary>
            Obtiene el valor de color de la posición indicada por parámatro,
            asumiendo que la coordenada Y es siempre positiva.
            </summary>                 
        </member>
        <member name="M:Kriptok.Views.Shapes.ISampleTexture.SetShade(System.UInt32)">
            <summary>
            Establece el nivel de incidencia de la luz ambiental sobre la figura a renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.ISampleTexture.ToAffineTexture">
            <summary>
            Transforma la textura en una textura de tipo <see cref="T:Kriptok.Views.Shapes.IGdipTexture"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.ISampleTexture.TileU(System.Int32)">
            <summary>
            Calcula la coordenada real de la textura sobre el largo de la misma.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.ISampleTexture.GetThumbnail">
            <summary>
            Obtiene un bitmap de la primer imagen de la textura (la primera, si es animada).
            Utilizado por el editor de mapas.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.IStroke">
            <summary>
            Interfaz que representa el "trazo" para figuras tipo wireframe.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.IStroke.Color">
            <summary>
            Color base del trazo.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.IStroke.Width">
            <summary>
            Ancho del trazo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.IStroke.SetColor(System.Drawing.Color)">
            <summary>
            Establece el color "base" del trazo.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.IStroke.LineJoin">
            <summary>
            Estilo de "unión" entre trazos.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.IStroke.DashStyle">
            <summary>
            Estilo de interlineado.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Strokes">
            <summary>
            Clase para la generación de trazos.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Strokes.strokes">
            <summary>
            Trazos creados hasta el momento. Utilizado tipo "cache".
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Strokes.Get(System.Drawing.Color)">
            <summary>
            Obtiene y devuelve un trazo del color indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Strokes.Get(System.Drawing.Color,System.Single)">
            <summary>
            Obtiene y devuelve un trazo del color y ancho indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Strokes.Get(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Obtiene y devuelve un trazo del color y ancho indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Strokes.Get(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle,System.Drawing.Drawing2D.LineJoin)">
            <summary>
            Obtiene y devuelve un trazo del color y ancho indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Strokes.Get(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.LineJoin)">
            <summary>
            Obtiene y devuelve un trazo del color y ancho indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Strokes.Add(Kriptok.Views.Shapes.Stroke)">
            <summary>
            Agrega el trazo a la lista para liberar después.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Strokes.ClearCache">
            <summary>
            Limpia todos los trazos de memoria.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Stroke">
            <summary>
            Trazo base, de un color estándar y parámetros por default.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Stroke.#ctor(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle,System.Drawing.Drawing2D.LineJoin)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Stroke"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.Stroke.Width">
            <summary>
            Obtiene el ancho del trazo definido.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Stroke.DashStyle">
            <summary>
            Estilo del trazo.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Stroke.LineJoin">
            <summary>
            Estilo del trazo.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Compounds.DoubleFlatTriFaceView">
            <summary>
            Este componente se utiliza cuando se desea crear una cara texturada que no debe necesariamente
            estar relacionada a una figura texturada. Es decir que debe poder renderizarse independientemente.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Compounds.DoubleTexturedTriFaceView">
            <summary>
            Este componente se utiliza cuando se desea crear una cara texturada que no debe necesariamente
            estar relacionada a una figura texturada. Es decir que debe poder renderizarse independientemente.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Compounds.DoubleTexturedTriFaceView.SetTexture(Kriptok.Views.Shapes.IGdipTexture)">
            <summary>
            Permite establecer la textura de la doble-cara.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Compounds.DoubleTexturedTriFaceView.SetTextureSwapped(Kriptok.Views.Shapes.IGdipTexture)">
            <summary>
            Permite establecer la textura de la doble-cara.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Compounds.DoubleTexturedTriFaceView.RefreshTextureCoordinates(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Este método se dispara en cada frame, si corresponde.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Compounds.DoubleTexturedTriFaceView.IsSwapped">
            <summary>
            Indica si la doble cara está "swappeada".
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.FlatIcosahedronView">
            <summary>
            Representa un icosahedro de un material plano.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatIcosahedronView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.Vertices">
            <summary>
            Obtiene los vértices que componen la figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.GetVertex(System.Int32)">
            <summary>
            Obtiene el vértice indicado por su índice.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.IsVisible2D(Kriptok.Modes.Context.Base.IProjector,Kriptok.Drawing.BoundF2)">
            <summary>
            Método para filtrar la visibilidad de las vistas en entornos bidimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.IsVisible3D(Kriptok.Modes.Context.Base.IProjector,Kriptok.Drawing.BoundF2)">
            <summary>
            Método para filtrar la visibilidad de las vistas en entornos tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase`1.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase`1.RenderFace1(Kriptok.Modes.Context.Base.IRenderContext)">
            <summary>
            Renderiza la cara 1, si es visible.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase`1.RenderFace2(Kriptok.Modes.Context.Base.IRenderContext)">
            <summary>
            Renderiza la cara 2, si es visible.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatPanelView.#ctor(Kriptok.Views.Shapes.IMaterial,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,System.Int32,System.Int32)">
            <summary>
            Crea una cara rectangular en base a cuatro puntos recibidos por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatPanelView.#ctor(Kriptok.Views.Shapes.FlatPanelView.FlatPanelViewConfig)">
            <summary>
            Crea una cara rectangular en base a cuatro puntos recibidos por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.FlatPanelView.FlatPanelViewConfig">
            <summary>
            Clase utilizada para construir los peneles texturados.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.FlattenedShapeView">
            <summary>
            Representa una figura tridimensional aplanada y con un material definido para toda la figura.
            Puede utilizarse para dibujar sombras, por ejemplo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlattenedShapeView.#ctor(Kriptok.Views.Shapes.GdipShapeView,System.Drawing.Color)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.FlattenedShapeView"/>.
            </summary>
            <param name="shape">Vista que se desea "aplanar".</param>
            <param name="color">Color con el que se desea renderizar la vista.</param>
        </member>
        <member name="F:Kriptok.Views.Shapes.FlatTriFace3D.Material">
            <summary>
            Material de la cara.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatTriFace3D.Render2D(Kriptok.Modes.Context.Base.IRenderContext)">
            <summary>
            Renderiza la vista para entornos bidimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatTriFace3D.Render3D(Kriptok.Modes.Context.Base.IRenderContext3D)">
            <summary>
            Renderiza la vista para entornos tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatTriFace3D.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.FlatPolygonFace">
            <summary>
            Esta clase representa un polígono tridimensional de un color sólido. En particular, este 
            tipo de polígono está preparado para soportar "polígonos con agujeros".
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.GdipPanelShapeViewBase.metaFace">
            <summary>
            Vista que se utiliza para definir si el panel está visible (desde la cámara).
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.GdipPanelShapeViewBase.Kriptok#Views#Shapes#Base#IShape#Vertices">
            <summary>
            Obtiene los vértices que componen la figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipPanelShapeViewBase.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipPanelShapeViewBase.GetVertex(System.Int32)">
            <summary>
            Obtiene el vértice indicado por su índice.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipPanelShapeViewBase.Kriptok#Views#Shapes#Base#IShape#Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipPanelShapeViewBase.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.       
            
            Los paneles planos son convexos.
            
            Si se deforma posteriormente a una forma no-convexa, se deberá heredar esta clase, y sobreescribir
            este método.        
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipPanelShapeViewBase.GetPanelShapes">
            <summary>
            Obtiene las caras del panel, sin utilizar vértices calculados.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.MqoMeshView">
            <summary>
            Representa un modelo tridimensional cargado desde un archivo de MetaSequoia.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MqoMeshView.#ctor(System.Reflection.Assembly,System.String)">
            <summary>
            Este constructor sólo genera polígonos materiales, no texturados.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.MqoMeshView.AddTexuredFace(Kriptok.Views.Shapes.IGdipTexture,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint)">
            <summary>
            Agrega una cara texturada al modelo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MqoMeshView.NewTeapot(Kriptok.Views.Shapes.IMaterial)">
            <summary>
            Instancia una nueva vista tridimensional con un modelo estándar de tetera de Utah.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MqoMeshView.NewSpaceShip">
            <summary>
            Instancia una nueva vista tridimensional con un modelo estándar de tetera de Utah.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MqoMeshView.MqoBuilder.FindLine(System.String[],System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="textLines"></param>
            <param name="regex"></param>
            <param name="fromLine"></param>
            <param name="toLine"></param>
            <returns>Devuelve el numero de línea buscado, o -1 si no se encuentra.</returns>
        </member>
        <member name="P:Kriptok.Views.Shapes.Line3DBase.Vertices">
            <summary>
            Obtiene los vértices que componen la figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Line3DBase.IsVisible2D(Kriptok.Modes.Context.Base.IProjector,Kriptok.Drawing.BoundF2)">
            <summary>
            En principio, asumo que en 2D siempre está visible.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Line3DBase.IsVisible3D(Kriptok.Modes.Context.Base.IProjector,Kriptok.Drawing.BoundF2)">
            <summary>
            Si alguno de los vértices está delante de la cámara, lo considero como que puede estar visible.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Line3DBase.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Line3DBase.GetVertex(System.Int32)">
            <summary>
            Obtiene el vértice indicado por su índice.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Line3DBase.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Line3DCW.color">
            <summary>
            Color con el que se debe dibujar la línea.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Line3DCW.width">
            <summary>
            Grosor de la línea a dibujar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.WireframeIcosahedronView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.IMaterial">
            <summary>
            Representa el color con el que se debe dibujar un polígono de color plano en la pantalla.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.IMaterialDecorator">
            <summary>
            Este decorador toma el resultado del cálculo del color correspondiente a un material, y le aplica
            efectos como sombra o brillo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.IMaterialExtensions.WithAlpha(Kriptok.Views.Shapes.IMaterial,System.Single)">
            <summary>
            Devuelve una copia del material con 
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.IGdipTexture">
            <summary>
            Representa la clase que se encargará de llenar con pixels de colores un polígono texturado.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.IGdipTexture.Fill(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.PointF[])">
            <summary>
            Llena una región determinada con la textura.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.IGdipTexture.Fill(System.Drawing.Graphics,System.Drawing.Drawing2D.Matrix,System.Drawing.PointF[])">
            <summary>
            Llena una región determinada con la textura.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.IGdipTexture.FillVertical(System.Drawing.Graphics,System.Int32,System.Single,System.Single,System.Int32,System.Single,System.Single)">
            <summary>
            Llena una línea vertical con la textura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.IGdipTexture.FillHorizontal(System.Drawing.Graphics,System.Drawing.Drawing2D.Matrix,System.Int32,System.Int32,System.Int32)">
            <summary>
            Llena una línea vertical con la textura y la transformación indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.IGdipTextureExtensions.WithShade(Kriptok.Views.Shapes.IGdipTexture,Kriptok.Modes.Context.Base.IRenderContext,Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Establece el nivel de incidencia de la luz ambiental en base a la normal 
            de los vértices indicados por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Textures">
            <summary>
            Clase utilizada para construir texturas.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.Get(Kriptok.Maps.Tiles.Base.TilesetBase,System.Int32,System.Int32,Kriptok.Views.Shapes.TextureOptions)">
            <summary>
            Obtiene una textura en base a un tile de un <see cref="T:Kriptok.Maps.Tiles.Base.TilesetBase"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.Test">
            <summary>
            Obtiene una textura de prueba.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.Build(System.String,System.Drawing.Bitmap,Kriptok.Views.Shapes.Texts.WrapModeEnum,Kriptok.Views.Shapes.TextureOptions)">
            <summary>
            Utilizado cuando el recurso sale de un ensamblado, pero se genera en
            tiempo de ejecución.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.Get(System.Reflection.Assembly,System.String,System.Drawing.Bitmap,Kriptok.Views.Shapes.Texts.GdipTextureConfig)">
            <summary>
            Si se utiliza este método para crear una instancia de <see cref="T:Kriptok.Views.Shapes.IGdipTexture"/>, el objeto
            de tipo <see cref="T:System.Drawing.Bitmap"/> indicado por parámetro debe ser liberado después de crear la textura.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.ClearCache">
            <summary>
            Limpia la caché y libera los rescursos que tenga.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.FlatCubeSphereView">
            <summary>
            Esta figura representa una esfera en formato "cube-sphere" con caras de colores planos.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatCubeSphereView.#ctor(Kriptok.Views.Shapes.IMaterial,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.FlatCubeSphereView"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.GdipShapeSplitterView`1">
            <summary>
            Esta vista toma una vista tridimensional, y agrega al buffer un
            renderizable por cada uno de sus componentes.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.GdipShapeSplitterView`1.View">
            <summary>
            Accede a la vista interior.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.GdipShapeSplitterView">
            <summary>
            Esta vista toma una vista tridimensional, y agrega al buffer un
            renderizable por cada uno de sus componentes.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.GdipShapeSplitterView.shape">
            <summary>
            Vista interior.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.GdipShapeSplitterView.shapeBuffer">
            <summary>
            Lista de wrappers de las caras, que permite dibujar
            cada una de forma independiente.
            
            Permitiendo así, que otros objetos intersecten el terreno.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.GdipShapeSplitterView.renderizables">
            <summary>
            Lista interna de renderizables utilizado pra engañar a la vista interna.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeSplitterView.#ctor(Kriptok.Views.Shapes.GdipShapeView)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.GdipShapeSplitterView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeSplitterView.ReloadBuffer">
            <summary>
            Recarga el buffer de vistas.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.GdipShapeSplitterView.View">
            <summary>
            Accede a la vista interior.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.TexturedTriFace3D">
            <summary>
            Esta forma representa un polígono de tres vértices con una textura aplicada.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TexturedTriFace3D.TextureRect">
            <summary>
            El tamaño y posición de la textura que se tiene que dibujar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3D.RefreshTextureCoordinates(Kriptok.Views.Shapes.IGdipTexture,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Recalcula las coordenadas de la textura para la forma.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3D.RefreshTextureCoordinates(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Recalcula las coordenadas de la textura para la forma.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3D.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3D.Render3DClipped(Kriptok.Modes.Context.Base.IRenderContext,Kriptok.Views.Shapes.IGdipTexture)">
            <summary>
            Renderiza la figura cuando esta debe ser "clippeada" contra el plano Z = <see cref="!:Vector3F.InvalidZ"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.WireframeSquareView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            
            En este caso, la figura es convexa porque usa un solo "stroke", pero si utilizara
            diferentes colores, deberían ordenarse las líneas.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.TextureOptions">
            <summary>
            Estructura con opciones para creación de texturas.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.TextureOptions.AffectedByLight">
            <summary>
            Indica si la textura se debe ver afectada por la luz ambiental.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.TextureOptions.RotateFlip">
            <summary>
            Transformación a aplicar al momento de cargar la textura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedCubeCilinderView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TexturedCubeSphereView.StyleEnum.ApplyToAllFaces">
            <summary>
            Todas las caras tienen la misma textura aplicada.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TexturedCubeSphereView.StyleEnum.CrossPattern">
            <summary>
            La textura debe estar en formato "+-"
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedCubeSphereView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedCubeSphereView.RemoveBottomHalf">
            <summary>
            Elimina los polígonos de "abajo" de la esfera.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TextureBuilder.type">
            <summary>
            Esta propiead se utiliza cuando se está generando una textura desde un objeto. Por ejemplo, un Tileset.
            
            En lugar de guardar el ensamblado y el nombre del recurso, se guarda el tipo del cual depende.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.TextureBuilder.AffectedByLight">
            <summary>
            Obtiene o establece si la textura a generar es afectada por la incidencia
            de la luz ambiental.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TextureBuilder.Test(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Devuelve una imagen estándar para pruebas con varias texturas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.TextureBuilder.Test(System.Single,System.Single,System.Single,System.Single,Kriptok.Views.Shapes.TextureOptions)">
            <summary>
            Devuelve una imagen estándar para pruebas con varias texturas.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.TextureMappingPoint">
            <summary>
            Vector unitario para indicar coordenadas de mapeo de texturas.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.TextureMappingQuad">
            <summary>
            Representa una región rectangular de una textura, delimitada por dos vectores unitarios.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TextureMappingQuad.Default">
            <summary>
            Devuelve un recuadro de textura con valores por default: (0f, 0f) -> (1f, 1f)
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TextureMappingQuad.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.TextureMappingQuad"/>.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.FlatPolygonViewBase`1">
            <summary>
            Clase base utilizada para representar un polígono tridimensional.
            </summary>    
        </member>
        <member name="F:Kriptok.Views.Shapes.FlatPolygonViewBase`1.Front">
            <summary>
            Cara frontal del polígono tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.FlatPolygonViewBase`1.Back">
            <summary>
            Cara trasera del polígono tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.FlatPolygonViewBase`1.allFacesSwapped">
            <summary>
            Esta variable se utiliza para guardar si se swappearon todas las caras en algún momento,
            para el caso en que hay caras que se regeneran.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.FlatPolygonViewBase`1.hasDepth">
            <summary>
            Indica si la figura tiene profundidad.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.WireframePathView">
            <summary>
            Representa un <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> tridimensional. Con o sin profundidad.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.WireframePathView.#ctor(Kriptok.Drawing.Polygon[],System.Single,Kriptok.Views.Shapes.IStroke)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.WireframePathView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.Add(Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,System.Drawing.Color,System.Single)">
            <summary>
            Agrega a la figura, una línea que conecte dos vértices, en base a los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.Add(Kriptok.Views.Shapes.IStroke,System.Int32,System.Int32)">
            <summary>
            Agrega a la figura, una línea que conecte dos vértices, en base a los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.Add(Kriptok.Views.Shapes.IStroke,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Agrega a la figura, una línea que conecte dos vértices, en base a los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.RenderShapes(Kriptok.Modes.Context.Base.IRenderContext)">
            <summary>
            Renderiza las figuras que componen la vista.
            </summary>     
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.RecalculateVertices">
            <summary>
            Este método reagrupa los vértices que una o más figuras pueden compartir, para
            que no sea necesario transformar varios vértices que se encuentran en la}
            misma posición.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.Resolve(System.Collections.Generic.IDictionary{Kriptok.Drawing.Algebra.Vector3F,Kriptok.Views.Shapes.Vertices.Vertex3},Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite customizar la forma en que se resolverán los vértices reutilizados
            por varias figuras que componen la vista.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.SwapAllFaces">
            <summary>
            Invierte la normal de todas las caras de la figura tridimensional.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.RemoveShapesWhen(System.Func{Kriptok.Views.Shapes.Base.IShape,System.Boolean})">
            <summary>
            Este método permite remover caras de la figura tridimensional que cumplan con una determinada
            condición.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.GetShapes">
            <summary>
            Obtiene todas las formas que componen la figura tridimensional.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            
            Por defecto devuelve <see cref="!:false"/>, pero puede sobreescribirse para figuras que convexas 
            realicen menos cálculos a la hora de renderizarse.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.Add(Kriptok.Views.Shapes.IGdipTexture,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Agrega dos "tris" texturado basado en los cuatro puntos indicados.
            
            Se puede invertir la dirección de los triángulos, si se desea, indicándolo por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.Dispose">
            <summary>
            Libera todas las figuras creadas por esta vista.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.HierarchicalShapeViewBase">
            <summary>
            Representa una vista con un "esqueleto" de vértices y vistas.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.HierarchicalShapeViewBase.initialized">
            <summary>
            Indica si la figura ya fue construida.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.HierarchicalShapeViewBase.Center">
            <summary>
            Centro de la figura, utilizado para posteriormente recalcular todas las demás posiciones de los
            puntos que componen la figura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatPyramidView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedPyramidView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.ConnectorLineView">
            <summary>
            Este componente se utiliza cuando se desea crear una línea que no debe necesariamente
            esté relacionada a una figura de alambres. Es decir que debe poder renderizarse independientemente.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.ConnectorLineView.#ctor(Kriptok.Entities.Base.EntityBase,Kriptok.Entities.Base.EntityBase,System.Drawing.Color,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.ConnectorLineView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.WireframePyramidView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            
            En este caso, la figura es convexa porque usa un solo "stroke", pero si utilizara
            diferentes colores, deberían ordenarse las líneas.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.FlatTerrainView">
            <summary>
            Esta vista representa una montaña tridimensional con textura basado en una cuadrícula.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatTerrainView.#ctor(Kriptok.Maps.Terrains.ITerrainData,Kriptok.Views.Shapes.IMaterial)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.FlatTerrainView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatTerrainView.#ctor(Kriptok.Maps.Terrains.ITerrainData,Kriptok.Views.Shapes.TextureBuilder)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.FlatTerrainView"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.FlatTerrainView.TerrainData">
            <summary>
            Metadata del terreno.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatTerrainView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            
            Los terrenos son en principio no convexos. Puede ser que hay algún terreno convexo, pero en general
            se infiere que no será el caso.
            </summary>      
        </member>
        <member name="T:Kriptok.Views.Shapes.FlatCilinderView">
            <summary>
            Esta clase representa una vista de un cilindro tridimensional de color sólido.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatCilinderView.#ctor(System.Int32,Kriptok.Views.Shapes.IMaterial)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.FlatCilinderView"/>.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.TexturedCilinderView">
            <summary>
            Representa una vista para un cilindro texturado tridimensional sin tapas superior e inferior.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedCilinderView.#ctor(Kriptok.Views.Shapes.IGdipTexture,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instacia de la clase <see cref="T:Kriptok.Views.Shapes.TexturedCilinderView"/>.
            </summary>
            <param name="texture">Textura a renderizar.</param>
            <param name="xParts">Cantidad de lados que debe tener el cilindro.</param>        
            <param name="yParts">Cantidad de lados que debe tener el cilindro.</param>        
            <param name="uRepetition">Cantidad de veces que la textura se debe repetir sobre la superficie del cilindro.</param>
            <param name="vRepetition">Cantidad de veces que la textura se debe repetir sobre la superficie del cilindro.</param>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedCilinderView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            
            Los cilindros son figuras convexas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedPanelView.#ctor(Kriptok.Views.Shapes.IGdipTexture,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Crea una cara rectangular en base a cuatro puntos recibidos por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedPanelView.#ctor(Kriptok.Views.Shapes.TexturedPanelView.TexturedPanelViewConfig)">
            <summary>
            Crea una cara rectangular en base a cuatro puntos recibidos por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.TexturedPanelView.TexturedPanelViewConfig">
            <summary>
            Clase utilizada para construir los peneles texturados.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatCubeView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedCubeView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.       
            
            Los cubos y derivados de esta vista, son probablemente convexos.
            
            Si se deforma posteriormente a una forma no-convexa, se deberá heredar esta clase, y sobreescribir
            este método.        
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.WireframeCubeView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            
            En este caso, la figura es convexa porque usa un solo "stroke", pero si utilizara
            diferentes colores, deberían ordenarse las líneas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Material.Get(System.Drawing.Color,System.Single,System.Single,System.Single,System.Byte,System.Single)">
            <summary>
            
            </summary>
            <param name="color">Color de base sobre el cual aplicar transformaciones.</param>
            <param name="dif">Diffusion.   Valor entre 0 y 1.</param>
            <param name="emi">Emission.    Valor entre 0 y 1.</param>
            <param name="spe">Specularity. Valor entre 0 y 1.</param>
            <param name="pow">Power.       Valor entre 0 y 100.</param>
            <param name="amb">Ambient.     Valor entre 0 y 1.</param>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Material.Get(System.Drawing.Color,System.Single,System.Single,System.Byte)">
            <summary>
            Obtiene un material en base a los parámetros indicados.
            </summary>                 
        </member>
        <member name="M:Kriptok.Views.Shapes.Material.Get(System.Drawing.Color)">
            <summary>
            Obtiene un material que siempre despliega un color sólido, independientemente de la insidencia de la luz.
            </summary>                 
        </member>
        <member name="M:Kriptok.Views.Shapes.Material.Get(System.Drawing.Color,System.Single,System.Single,System.Single,System.Byte)">
            <summary>
            Obtiene un material en base a los parámetros indicados.
            </summary>                 
        </member>
        <member name="T:Kriptok.Views.Base.GdipViewBase">
            <summary>
            Clase base para vistas que se renderizan en 2 dimensiones. Primitivas, imágenes, texto, etc.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.Flip">
            <summary>
            Indica si se debe invertir horizontal y/o verticalmente.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.Scale">
            <summary>
            Escalado de la figura.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.ScaleX">
            <summary>
            Escalado de la figura en X.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.ScaleY">
            <summary>
            Escalado de la figura en Y.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.ReScale">
            <summary>
            Re escalado de la figura.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.ReScaleX">
            <summary>
            Re escalado de la figura en X.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.ReScaleY">
            <summary>
            Re escalado de la figura en Y.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.Center">
            <summary>
            Punto central de rotación o escalamiento de la vista en coordenadas unitarias.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Base.GdipViewBase`1">
            <summary>
            Clase base para vistas que se renderizan en 2 dimensiones. Primitivas, imágenes, texto, etc.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase`1.Kriptok#Views#Base#IRectangleRenderizable#SizeF">
            <summary>
            Obtiene el rectángulo correspondiente a la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.GdipViewBase`1.Get25DBoundValues(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext,System.Single)">
            <summary>
            Devuelve límites horizontales de la vista para la renderización en <see cref="!:M8View"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.GdipViewBase`1.Kriptok#Views#Base#ICollisionableRenderizable#GetAutoHitbox">
            <summary>
            Obtiene la <see cref="T:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase"/> automática para este tipo de vista.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Base.IDirectionalView">
            <summary>
            Representa una vista que utiliza la propiedad <see cref="!:EntityBase.XGraph"/>
            para representar distintas vistas.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.IDirectionalView.XGraph">
            <summary>
            Esta propiedad permite forzar la dirección de la vista direccional.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Base.IIndexedView">
            <summary>
            Representa una vista que utiliza la propiedad <see cref="!:EntityBase.Graph"/>
            para representar distintas vistas.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.IIndexedView.Graph">
            <summary>
            Obtiene o establece el índice en la vista.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Base.IPriorizable">
            <summary>
            Indica que las clases que tienen esta interfaz pueden ser priorizadas.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IPriorizable.GetPriority">
            <summary>
            Obtiene la prioridad de renderización de la vista.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Base.IPseudo3DRenderizable">
            <summary>
            Indica que una vista puede ser renderizada interfaces pseudo3D.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IPseudo3DRenderizable.Get25DBoundValues(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext,System.Single)">
            <summary>
            Devuelve límites horizontales y verticales de la vista para la renderización en <see cref="!:M8View"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Base.IRectangleRenderizable">
            <summary>
            Representa una vista con la que se pueden calcular colisiones en 2D.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IRectangleRenderizable.GetMatrix(System.Boolean,Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Obtiene la matrix para el cálculo de colisiones en 2D.
            </summary>        
            <param name="checkFlip">Este parámetro indica si se debe chequear la propiedad "Flip" para el objeto.
            La razón de esto es que cuando se flipea, se producen algunos problemas, y errores de redondeo.
            Para el cálculo de interesecciones en la collisión, es imperceptible, pero cuando se trabaja
            con <see cref="T:Kriptok.Maps.MapRegion"/> el flip sólo trae problemas y nunca encontré la forma de resolverlo.
            Por lo tanto, directamente se lo ignora para esos casos.</param>        
        </member>
        <member name="P:Kriptok.Views.Base.IRectangleRenderizable.SizeF">
            <summary>
            Obtiene el rectángulo correspondiente a la vista.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.IRectangleRenderizable.Flip">
            <summary>
            Indica si se debe invertir horizontal y/o verticalmente.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Base.ICollisionableRenderizable">
            <summary>
            Indica que el objeto tiene posibilidad de colisionar con otros objetos del mismo tipo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.ICollisionableRenderizable.GetAutoHitbox">
            <summary>
            Obtiene la <see cref="T:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase"/> automática para este tipo de vista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.ICollisionableRenderizable.GetCollisionRectangle">
            <summary>
            Obtiene el rectángulo de colisión correspondiente a la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IRectangleRenderizableExtensions.GetBounds(Kriptok.Views.Base.IRectangleRenderizable,System.Drawing.Drawing2D.Matrix)">
            <summary>
            Este método recibe la matriz porque esta puede estar precalculada.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Base.IRectangleRenderizableExtensions.GetBounds(Kriptok.Views.Base.IRectangleRenderizable,Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Este método recibe la matriz porque esta puede estar precalculada.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Base.RenderizableViewBase.IsVisible">
            <summary>
            Permite customizar el comportamiento de visibilidad de la vista.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Base.IRenderizable">
            <summary>
            Representa una vista a renderizar en la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IRenderizable.RenderOn(Kriptok.Modes.Context.Base.IRenderContext)">
            <summary>
            Renderiza la vista en el objeto Graphics indicado.
            </summary>        
        </member>
        <member name="F:Kriptok.Views.Base.GdipPrimitiveBase.Rectangle">
            <summary>
            Rectángulo utilizado para la renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.GdipPrimitiveBase.#ctor(System.Single,System.Single,System.Drawing.Color)">
            <summary>
            Crea una vista primitiva de un color sólido y la línea del mismo color.
            </summary>
            <param name="width">Ancho del rectángulo.</param>
            <param name="height">Alto del rectángulo.</param>
            <param name="color">Color del relleno y de la línea.</param>
        </member>
        <member name="M:Kriptok.Views.Base.GdipPrimitiveBase.#ctor(System.Single,System.Single,System.Drawing.Color,System.Drawing.Color,Kriptok.Views.GradientDirectionEnum)">
            <summary>
            Crea una vista primitiva de un color sólido y la línea del mismo color.
            </summary>
            <param name="width">Ancho del rectángulo.</param>
            <param name="height">Alto del rectángulo.</param>
            <param name="color">Color del relleno y de la línea.</param>
        </member>
        <member name="M:Kriptok.Views.Base.GdipPrimitiveBase.#ctor(System.Single,System.Single,System.Nullable{System.Drawing.Color},System.Drawing.Color,System.Single)">
            <summary>
            Crea una vista primitiva de un color sólido y línea de distintos colores.
            </summary>
            <param name="width">Ancho del rectángulo.</param>
            <param name="height">Alto del rectángulo.</param>
            <param name="fillColor">Color del relleno.</param>
            <param name="lineColor">Color de la línea.</param>
        </member>
        <member name="T:Kriptok.Views.Base.IView">
            <summary>
            Interfaz principal que deben cumplir las clases que representen a los objetos del juego de
            una forma gráfica.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IView.SetOwner(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Establece el objeto del cuál la vista debe tomar las propiedades para renderizar.
            </summary>
            <param name="obj">Objeto al cual se le está asignando la vista.</param>
        </member>
        <member name="M:Kriptok.Views.Base.IView.UpdateToRender(Kriptok.Modes.Context.Base.IRenderBufferContext)">
            <summary>
            Actualiza la vista para que se pueda renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IView.AddViews(Kriptok.Modes.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Agrega al "buffer de vistas" las subvistas que debe renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Base.ViewBase">
            <summary>
            Clase base para la construcción de nuevas vistas.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Base.ViewBase.localizable">
            <summary>
            Objeto utilizado para daterminar la posición donde se debe renderizar la vista.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Base.ViewBase.Owner">
            <summary>
            Objeto que utiliza la vista en cuestión.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Base.ViewBase.CalculatedLocation">
            <summary>
            Ubicación final donde se debe renderizar la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.ViewBase.SetOwner(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Establece el objeto del cuál la vista debe tomar las propiedades para renderizar.
            </summary>
            <param name="obj">Objeto al cual se le está asignando la vista.</param>
        </member>
        <member name="M:Kriptok.Views.Base.ViewBase.UpdateToRender(Kriptok.Modes.Context.Base.IRenderBufferContext)">
            <summary>
            Actualiza la vista para que se pueda renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.ViewBase.GetLocation2D">
            <summary>
            Obtiene la ubicación donde se encuentra la vista a renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.ViewBase.GetRotationAngle2D">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Base.ViewBase.Assembly">
            <summary>
            Ensamblado en el que se encuentra declarada la vista. Se utiliza para cargar registros.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.ViewBase.AddViews(Kriptok.Modes.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Agrega al "buffer de vistas" las subvistas que debe renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.ViewBase.GetRenderLocation">
            <summary>
            Obtiene las coordenadas 3D de renderización de la vista.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Gdip.Base.GdipCenteredBase">
            <summary>
            Clase base intermedia entre <see cref="T:Kriptok.Views.Gdip.Base.GdipRenderizableBase"/> y sus derivadas,
            pero que agrega la propiedad <see cref="F:Kriptok.Views.Gdip.Base.GdipCenteredBase.center"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.Base.GdipCenteredBase.center">
            <summary>
            Punto central del objeto sobre el que se debe rotar y escalar.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Gdip.Base.IGdipView">
            <summary>
            Representa una vista estándar que se renderiza con GDI+.
            Y cumple con todas las propiedades estándar de una vista de estas características.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.Base.IGdipView.GetRectangle">
            <summary>
            Obtiene el rectángulo de renderización de la vista.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Gdip.Base.IScalableView2D">
            <summary>
            Indica que la vista puede redimensionarse al menos en dos dimensiones.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Gdip.Base.GdipRenderizableBase">
            <summary>
            Clase base para vistas que se renderizan en 2 dimensiones. Primitivas, imágenes, texto, etc.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.Base.GdipRenderizableBase.Flip">
            <summary>
            Indica si se debe invertir horizontal y/o verticalmente.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.Base.GdipRenderizableBase.Scale">
            <summary>
            Escalado de la figura.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.Base.GdipRenderizableBase.ReScale">
            <summary>
            Escalado de la figura.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Gdip.Base.GdipRenderizableBase.Center">
            <summary>
            Centro de la figura donde debe dibujarse la vista (en el caso de que la vista sea
            bidimensional).
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.Base.GdipRenderizableBase.SetProperties(Kriptok.Views.Base.GdipViewBase)">
            <summary>
            Este método copia las propiedades de una vista a otra,
            para renderizar todo junto con las mismas propiedades.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Gdip.Base.GdipRenderizableBase.GetHitbox(Kriptok.Entities.Base.EntityBase,Kriptok.Views.Base.ICollisionableRenderizable)">
            <summary>
            Obtiene la <see cref="T:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase"/> automática para este tipo de vista.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Gdip.GdipSpriteListBase">
            <summary>
            Esta clase representa una colección de mapas de bits.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipSpriteListBase.key">
            <summary>
            Índice de imagen actual.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipSpriteListBase.#ctor">
            <summary>
            Constructor necesario para realizar la clonación.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipSpriteListBase.Add(System.Int32,Kriptok.Views.Sprites.Sprite)">
            <summary>
            Agrega un sprite a la vista indexada.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GradientEllipseParticle.rectangle">
            <summary>
            Rectángulo utilizado para la renderización.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Gdip.GdipText">
            <summary>
            Esta vista es utilizada para representar un texto en pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipText.size">
            <summary>
            Tamaño del texto a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipText.textGraphicPath">
            <summary>
            Esta propiedad se utiliza cuando se tiene una fuente con borde, en lugar de escribir directamente en
            el Graphics, se utiliza un GraphicsPath.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Gdip.GdipPolygon">
            <summary>
            Representa una vista con un polígono a definir.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipPolygon.FillMode">
            <summary>
            Indica cómo se debe rellenar el polígono. Para más información ver <see cref="F:Kriptok.Views.Gdip.GdipPolygon.FillMode"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipPolygon.Rounded">
            <summary>
            Indica si debe renderizar el polígono de forma "redondeada".
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipPolygon.#ctor(System.Drawing.PointF[],Kriptok.Views.FillConfig,Kriptok.Views.Shapes.IStroke)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Gdip.GdipPolygon"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipPolygon.#ctor(System.Drawing.PointF[],System.Drawing.RectangleF,Kriptok.Views.FillConfig,Kriptok.Views.Shapes.IStroke)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Gdip.GdipPolygon"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipPolygon.Split">
            <summary>
            Subdivide el polígono en varias vistas, cada una con una sola arista 
            de las que componen el polígono.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipPolygon.GetHitbox(Kriptok.Entities.Base.EntityBase,Kriptok.Views.Base.ICollisionableRenderizable)">
            <summary>
            
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Gdip.FlipEnum">
            <summary>
            Para figuras bidimensionales (Ver <see cref="!:GdipRenderizableBase"/>), indica si se la debe
            invertir horizontal y/o verticalmente.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.FlipEnum.None">
            <summary>
            No se invierte la figura de ninguna manera.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.FlipEnum.FlipX">
            <summary>
            La figura se invierte horizontalmente.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.FlipEnum.FlipY">
            <summary>
            La figura se invierte verticalmente.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.FlipEnum.FlipXY">
            <summary>
            La figura se invierte vertical y horizontalmente.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Gdip.GdipIndexedSprite">
            <summary>
            Esta clase representa un Bitmap subdividido en partes iguales, indexados de izquierda a derecha
            y de arriba hacia abajo (sentido de lectura occidental).
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipIndexedSprite.index">
            <summary>
            Índice de imagen actual.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipIndexedSprite.images">
            <summary>
            Listado de imágenes indexadas.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.#ctor">
            <summary>
            Constructor necesario para realizar la clonación.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.SetCenter(System.Int32,System.Drawing.PointF)">
            <summary>
            Establece el punto central de la imagen indicada por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.SetSprite(System.Int32,Kriptok.Views.Sprites.Sprite)">
            <summary>
            Establece o reemplaza un sprite en la vista indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.Add(Kriptok.Views.Sprites.Sprite)">
            <summary>
            Agrega un sprite a la lista.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.Add(Kriptok.Common.Resource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Agrega sprites a la lista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.GetSprite">
            <summary>
            Devuelve el sprite seleccionado actualmente.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.GenerateSpriteHitboxes">
            <summary>
            Genera la caja de colisión para el/los sprite/s.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Gdip.GdipSprite">
            <summary>
            Esta clase renderiza un sprite en pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipSprite.Sprite">
            <summary>
            Objeto que contiene la imagen y la metadata 
            </summary>
        </member>
        <member name="P:Kriptok.Views.Gdip.GdipSprite.Size">
            <summary>
            Obtiene el tamaño de la imagen.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipSprite.DrawSpriteOn(System.Drawing.Graphics)">
            <summary>
            Este método se llama cuando hay que aplicar alguna transformación de color
            a la renderización de una imagen.
            </summary>   
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipSprite.DrawSwappedSpriteOn(System.Drawing.Graphics)">
            <summary>
            Este método se llama cuando hay que aplicar alguna transformación de color
            a la renderización de una imagen.
            </summary>   
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipSprite.GetCollisionSecondCheck">
            <summary>
            Obtiene un objeto que se encargará de realizar el segundo chequeo durante la evaluación
            de colisiones.
            
            Dependiendo de si la imagen ocupa o no todos los pixels.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipSprite.GenerateSpriteHitboxes">
            <summary>
            Genera la caja de colisión para el/los sprite/s.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Primitives.PolygonView.#ctor(System.Drawing.PointF[],Kriptok.Views.FillConfig,Kriptok.Views.Shapes.IStroke)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Primitives.PolygonView"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Primitives.PolygonView.#ctor(System.Drawing.PointF[],System.Drawing.RectangleF,Kriptok.Views.FillConfig,Kriptok.Views.Shapes.IStroke)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Primitives.PolygonView"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Primitives.PolygonView.#ctor(Kriptok.Views.Gdip.GdipPolygon)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Primitives.PolygonView"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Primitives.PolygonView.Rounded">
            <summary>
            Indica si debe renderizar el polígono de forma "redondeada".
            </summary>
        </member>
        <member name="M:Kriptok.Views.Primitives.PolygonView.Split">
            <summary>
            Subdivide el polígono en varias vistas, cada una con una sola arista 
            de las que componen el polígono.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Sprites.Base.IndexedSpriteViewBase`1">
            <summary>
            Esta clase representa una vista de tipo Sprite con varios cuadros de animación.
            
            Se selecciona el gráfico que quiere mostrarse utilizando el índice de la imagen
            con la propiedad <see cref="P:Kriptok.Views.Sprites.Base.IndexedSpriteViewBase`1.Graph"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Sprites.Base.IndexedSpriteViewBase`1.Graph">
            <summary>
            Obtiene o establece el gráfico indicado por su índice.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Sprites.Base.IndexedSpriteViewBase`1.GetIndex">
            <summary>
            Obtiene el índice de imagen que está seleccionado actualmente.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.Base.IndexedSpriteViewBase`1.SetIndex(System.Int32)">
            <summary>
            Establece la imagen seleccionada respecto al índice indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.Base.SpriteViewBase`1.#ctor">
            <summary>
            Se mantiene por ahora, por compatibilidad con <see cref="!:DivFileView"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Sprites.Base.SpriteViewBase`1.Size">
            <summary>
            Obtiene el tamaño de la imagen.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Sprites.FogAffectedSprite">
            <summary>
            Indica que la vista debe verse afectada por factores del ambiente,
            como la incidencia de la luz, y la neblina.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Sprites.IndexedSpriteView">
            <summary>
            Esta clase representa un Bitmap subdividido en partes iguales, indexados de izquierda a derecha
            y de arriba hacia abajo (sentido de lectura occidental).
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.GetIndex">
            <summary>
            Obtiene el índice de imagen que está seleccionado actualmente.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.SetIndex(System.Int32)">
            <summary>
            Establece la imagen seleccionada respecto al índice indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.Clone">
            <summary>
            Devuelve una copia de la instancia de <see cref="T:Kriptok.Views.Sprites.IndexedSpriteView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.Add(System.Reflection.Assembly,System.String,System.Int32,System.Int32)">
            <summary>
            Agrega sprites a la vista indexada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.Add(Kriptok.Common.Resource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Agrega sprites a la vista indexada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.Add(System.Reflection.Assembly,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Agrega sprites a la vista indexada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.SetSprite(System.Int32,Kriptok.Views.Sprites.Sprite)">
            <summary>
            Establece o reemplaza un sprite en la vista indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.SetCenter(System.Int32,System.Drawing.PointF)">
            <summary>
            Establece el punto central de la imagen indicada por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.Rotate">
            <summary>
            Avanza al siguiente sprite, pero si es el último vuelve al primero.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.Next">
            <summary>
            Avanza hacia el sigueinte sprite, si corresponde.
            </summary>        
            <returns>Devuelve <see cref="!:true"/> si pudo cambiar de sprite, y 
            <see cref="!:false"/> si ya estaba en el último.</returns>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.Next(System.Int32)">
            <summary>
            Avanza hacia el sigueinte sprite, si corresponde.
            </summary>        
            <returns>Devuelve <see cref="!:true"/> si pudo cambiar de sprite, y 
            <see cref="!:false"/> si ya estaba en el último.</returns>
        </member>
        <member name="M:Kriptok.Views.Sprites.ISpriteView.MakeTransparent(System.Drawing.Color)">
            <summary>
            Hace transparente el color indicado para el Sprite.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Sprites.ISpriteView.PaletteSwap">
            <summary>
            Modifica la paletta de los mapas de bits.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Sprites.ISpriteView.Size">
            <summary>
            Obtiene el tamaño en pixels de la imagen.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.ISpriteView.GetDistanceToCamera">
            <summary>
            Obtiene la distancia del sprite hasta la cámara.
            Sólo para perspectivas 3D o Pseudo3D.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Sprites.SpriteDecoratorViewBase`1.Size">
            <summary>
            Obtiene el tamaño de la imagen.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.SpriteDecoratorViewBase`1.Get25DBoundValues(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext,System.Single)">
            <summary>
            Devuelve límites horizontales de la vista para la renderización en modos pseudo3D o "2.5D".
            </summary>
        </member>
        <member name="P:Kriptok.Views.Sprites.SpriteDecoratorViewBase`1.Kriptok#Views#Base#IRectangleRenderizable#SizeF">
            <summary>
            Obtiene el rectángulo correspondiente a la vista.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Sprites.Sprite">
            <summary>
            Esta clase contiene un <see cref="T:System.Drawing.Bitmap"/>, e información relevante del <see cref="T:System.Drawing.Bitmap"/>
            Se utiliza para dibujar una imagen en pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.on">
            <summary>
            Utilizado para lockear.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.SpriteCache">
            <summary>
            Guarda en memoria los sprites cargadso.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.Sprite.Load(Kriptok.Common.Resource,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Carga un <see cref="T:Kriptok.Views.Sprites.Sprite"/> en memoria.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.SpriteHitboxCheck">
            <summary>
            Objeto utilizado para el chequeo de colisiones con el sprite.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.SpriteRectangleCheck">
            <summary>
            Objeto utilizado en colisiones para obtener el rectángulo envolvente de la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.size">
            <summary>
            Tamaño de la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.Image">
            <summary>
            Imagen a dibujar.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.Rectangle">
            <summary>
            Rectángulo con el tamaño de la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.Center">
            <summary>
            Punto central de rotación y escalado del sprite.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.Sprite.#ctor(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase Sprite. Esta clase se encargará de liberar la
            imagen indicada por parámetro cuando sea liberada de la memoria.
            </summary>               
        </member>
        <member name="M:Kriptok.Views.Sprites.Sprite.#ctor(System.Drawing.Bitmap)">
            <summary>
            Devuelve una nueva instancia de la clase Sprite. Esta clase se encargará de liberar la
            imagen indicada por parámetro cuando sea liberada de la memoria.
            </summary>               
        </member>
        <member name="M:Kriptok.Views.Sprites.Sprite.GetPixel(System.Int32,System.Int32)">
            <summary>
            Obtiene el color del pixel indicado por sus coordenadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Sprites.Sprite.ClearCache">
            <summary>
            Limpia la caché de los sprites cargados en memoria.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.Sprite.GenerateHitbox">
            <summary>
            Genera la caja de colisión para el sprite.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.Sprite.System#IDisposable#Dispose">
            <summary>
            Libera los recursos y la memoria del objeto.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Sprites.SpriteExtensions">
            <summary>
            Funciones extendidas para la clase <see cref="T:Kriptok.Views.Sprites.Sprite"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.SpriteExtensions.GetSize(Kriptok.Views.Sprites.Sprite)">
            <summary>
            Obtiene el tamaño de la sprite.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Sprites.SpriteExtensions.SetCenter(Kriptok.Views.Sprites.Sprite,System.Drawing.PointF)">
            <summary>
            Permite establecer el punto central/eje de rotación y escalamiento
            de la imagen.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Sprites.DirectionalSpriteView">
            <summary>
            Representa una vista de tipo sprite que puede ser observada desde diferentes ángulos, y los sprites
            para estos diferentes ángulos se calculan automáticamente.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.viewIndexMatrix">
            <summary>
            Matriz de gráficos ordenados por dirección.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.viewIndexMap">
            <summary>
            Mapa de direcciones utilizado para "ampliar" artificialmente la cantidad
            de ángulos.
            
            Por ejemplo:
            
                 0             3 0 1
               3   1    -->    3   1   
                 2             3 2 1 
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.imagesCount">
            <summary>
            Cantidad de imágenes en total que tiene la vista.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.xGraphAngles">
            <summary>
            En este array voy a guardar los ángulos de tres vueltas de círculo para poder identificar el 
            gráfico que hay que mostrar dependiendo del ángulo del proceso y de la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.xGraphAnglesLimit">
            <summary>
            (Length-1) del anglesMapper. Se guarda como variable estática para no estar calculándola cada vez.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.graph">
            <summary>
            Índice de gráfico.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.anglesMapper">
            <summary>
            Este array mapea los ángulos de los procesos con su correspondiente índice de gráfico.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.indexCount">
            <summary>
            Longitud de la cantidad de gráficos asignados para cada dirección.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.DirectionalSpriteView.PointEntity(Kriptok.Entities.Base.EntityBase,System.Single)">
            <summary>
            Direcciona un objeto en un ángulo determinado, dependiendo de sus coordenadas.        
            </summary>
            <param name="obj">Objeto a direccionar.</param>
            <param name="angle">Ángulo al cual debe direccionarse el objeto.</param>
        </member>
        <member name="M:Kriptok.Views.Sprites.DirectionalSpriteView.Add(Kriptok.Common.Resource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Agrega sprites a la vista indexada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.DirectionalSpriteView.Add(System.Reflection.Assembly,System.String,System.Int32,System.Int32)">
            <summary>
            Agrega sprites a la vista indexada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.DirectionalSpriteView.ReplaceSprites(Kriptok.Common.Resource,System.Int32,System.Int32[0:,0:],System.Action{Kriptok.Views.Sprites.Sprite})">
            <summary>
            Reemplaza parte de la matriz de sprites con nuevos sprites leídos de un recurso.
            </summary>
            <param name="offsetX">Offset horizontal para saber a partir de qué punto de 
            la matriz empezar a reemplazar.</param>
        </member>
        <member name="M:Kriptok.Views.Sprites.DirectionalSpriteView.ReMap(System.Int32[])">
            <summary>
            Permite "expandir" la matrix, generando más ángulos intermedios.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.ClippedViewBase`1">
            <summary>
            Esta vista sirve para limitar la renderización de la vista interna a una región de pantalla limitada.  
            </summary>    
        </member>
        <member name="M:Kriptok.Views.Texts.SuperFont.SetShadow(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Agrega una sombra al texto.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Texts.SuperFont.SetBorder(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.LineJoin)">
            <summary>
            Agrega borde a la fuente.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Texts.Fonts">
            <summary>
            Esta clase sirve para acumular algunas fuentes de uso frecuente.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Texts.TextPanelView.SetBorder(Kriptok.Views.Shapes.IStroke)">
            <summary>
            Agrega borde al panel.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Texts.TextView">
            <summary>
            Esta vista es utilizada para representar un texto en pantalla.
            </summary>
        </member>
        <member name="T:Kriptok.Views.ViewDecoratorBase`1">
            <summary>
            Esta vista sirve para extender el funcionamiento de cualquier <see cref="T:Kriptok.Views.Base.IRenderizable"/>
            que quiera comportarse como una vista.
            </summary>    
        </member>
        <member name="P:Kriptok.Views.ViewDecoratorBase`1.View">
            <summary>
            El renderizable al que hace referencia la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.ViewDecoratorBase`1.SetOwner(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Establece el objeto del cuál la vista debe tomar las propiedades para renderizar.
            </summary>
            <param name="obj">Objeto al cual se le está asignando la vista.</param>
        </member>
        <member name="F:Kriptok.Views.ViewDecoratorBase`1.renderizables">
            <summary>
            Lista de renderizables a dibujar en la pantalla.
            </summary>
        </member>
        <member name="T:Kriptok.Engine">
            <summary>
            Clase utilizada para inicializar un juego.
            </summary>
        </member>
        <member name="M:Kriptok.Engine.Start(Kriptok.Scenes.SceneBase,System.Action{Kriptok.Startup})">
            <summary>
            Inicializa el formulario principal del juego con las opciones indicadas.
            </summary>
        </member>
        <member name="M:Kriptok.Engine.Start(Kriptok.Scenes.SceneBase,Kriptok.Startup)">
            <summary>
            Inicializa el formulario principal del juego con el objeto "inicializador" indicado.
            </summary>
            <param name="initializer">Objeto inicial del juego. Encargado de poner el juego en marcha.</param>
            <param name="options">Opciones de inicializador del formulario.</param>
        </member>
        <member name="T:Kriptok.Startup">
            <summary>
            Opciones de configuración de la aplicación.
            </summary>
        </member>
        <member name="P:Kriptok.Startup.Title">
            <summary>
            Título que debe mostrar el formulario en "modo ventana", y/o en la barra de tareas.
            </summary>
        </member>
        <member name="P:Kriptok.Startup.FullScreen">
            <summary>
            Indica si se debe mostrar en modo "pantalla completa".
            </summary>
        </member>
        <member name="P:Kriptok.Startup.HideMouse">
            <summary>
            Indica si debe ocultar el mouse al posicionarlo sobre el formulario principal.
            
            Se toma por defecto el valor de <see cref="P:Kriptok.Startup.FullScreen"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Startup.TimerInterval">
            <summary>
            Intervalo de tiempo (en milisegundos) entre frames.
            </summary>
        </member>
        <member name="P:Kriptok.Startup.NoMidi">
            <summary>
            Indica que no debe extraer el ejecutable para archivos de música tipo Midi.
            </summary>
        </member>
        <member name="M:Kriptok.Startup.OpenMidiNotePlayer">
            <summary>
            Abre un canal de repdoducción de notas Midi.
            </summary>
        </member>
        <member name="M:Kriptok.Startup.ExtractMidiPlayer(System.Boolean)">
            <summary>
            Extrae el reproductor de música Midi.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Gfps.Entities.Base.GfpsEntityBase.PostMoved">
            <summary>
            Se ejecuta después de moverse.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Gfps.Entities.GfpsDoorStateEnum">
            <summary>
            Lista los estados que puede adoptar una puerta.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Gfps.Entities.GfpsDoor">
            <summary>
            Este objeto controla el funcionamiento de una puerta.
            
            La puerta no es necesariamente la vista.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Entities.GfpsDoor.amount">
            <summary>
            Velocidad de movimiento de la puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Entities.GfpsDoor.animationIndex">
            <summary>
            Número entre 0 y 1 que representa qué tan cerrada/abierta está la puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Entities.GfpsDoor.Status">
            <summary>
            Estado actual de la puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Entities.GfpsDoor.v0">
            <summary>
            Ubicación original del primer vértice que compone el panel de la puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Entities.GfpsDoor.v1">
            <summary>
            Ubicación original del segundo vértice que compone el panel de la puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Entities.GfpsDoor.V0">
            <summary>
            Primer vértice bidimensional que sirve de pivote para los vértices de la puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Entities.GfpsDoor.V1">
            <summary>
            Segundo vértice bidimensional que sirve de pivote para los vértices de la puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Entities.GfpsDoor.diff">
            <summary>
            Diferencia entre los dos vectores. Utilizada como referencia para mover
            los paneles.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Entities.GfpsDoor.gridLocation">
            <summary>
            Coordenadas de la puerta, dentro de la cuadrícula del mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Gfps.Modes.GfpsCBuffer">
            <summary>
            Representa un Z-Buffer unidimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsCBuffer.length">
            <summary>
            Longitud del buffer. Generalmente, el ancho de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsCBuffer.bBuffer">
            <summary>
            Arreglo para controlar qué cantidad de la pantalla está cubierta por paredes.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsCBuffer.zBuffer">
            <summary>
            Profundidad de cada z perteneciente a las paredes del buffer.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsCBuffer.zBufferMax">
            <summary>
            Buffer de coordenadas Z que se utiliza para limpiar el <see cref="F:Kriptok.Z.Gfps.Modes.GfpsCBuffer.zBuffer"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsCBuffer.pBuffer">
            <summary>
            Paneles que ocupan cada elemento del buffer.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsCBuffer.differentPanels">
            <summary>
            Listado de los "diferentes paneles" a renderizar por frame.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Gfps.Modes.GfpsCBuffer.#ctor(System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Z.Gfps.Modes.GfpsCBuffer"/>.
            </summary>
            <param name="length">Longitud del buffer. Generalmente, el ancho de la pantalla.</param>
        </member>
        <member name="M:Kriptok.Z.Gfps.Modes.GfpsCBuffer.Clear">
            <summary>
            Limpia el buffer para volver a empezar a chequear profundidad.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Gfps.Modes.GfpsCBuffer.FullyChecked">
            <summary>
            Checkea los casilleros indicados, y además indica si se terminó de completar el array.
            </summary>               
        </member>
        <member name="M:Kriptok.Z.Gfps.Modes.GfpsCBuffer.Add(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext,Kriptok.Z.Gfps.Views.GfpsPanelWrapperBase)">
            <summary>
            Agrega un panel al buffer.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Gfps.Modes.GfpsCBuffer.MaxZ">
            <summary>
            Obtiene la máxima coordenada Z registrada en el buffer.
            </summary>        
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsViewBuffer`1.renderMap">
            <summary>
            Arreglo bidimensional que indica qué tile ya se leyó para renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsViewBuffer`1.mapGridWidth">
            <summary>
            Ancho del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsViewBuffer`1.mapGridHeight">
            <summary>
            Alto del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsViewBuffer`1.mapGridWidthF">
            <summary>
            Ancho del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsViewBuffer`1.mapGridHeightF">
            <summary>
            Alto del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsViewBuffer`1.viewGrid">
            <summary>
            Grilla de celdas generadas para la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsViewBuffer`1.regionWidth">
            <summary>
            Ancho de la region donde se renderiza.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsViewBuffer`1.regionHeight">
            <summary>
            Ancho de la region donde se renderiza.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsViewBuffer`1.FloorBound">
            <summary>
            Subregión de la pantalla donde se debe renderizar "piso".
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsViewBuffer`1.CeilingBound">
            <summary>
            Subregión de la pantalla donde se debe renderizar "techo".
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsViewBuffer`1.vertices">
            <summary>
            Colección con todos los vértices generados cuando se arma mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GfpsViewBuffer`1.cBuffer">
            <summary>
            Buffer utilizado para determinar qué parades dibujar.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Gfps.Modes.GfpsViewBuffer`1.MaxZ">
            <summary>
            Obtiene la minima prioridad a tomar en cuenta para renderizar.
            </summary>              
        </member>
        <member name="M:Kriptok.Z.Gfps.Modes.GfpsViewBuffer`1.GetViews(Kriptok.Modes.Pseudo3D.Pseudo3DRenderContext,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Views.Base.IRenderizable[],System.Boolean,System.Boolean)">
            <summary>
            Obtiene todas las vistas para renderizar en la región.
            </summary>        
        </member>
        <member name="T:Kriptok.Z.Gfps.Modes.GdipGfpsViewMode">
            <summary>
            Genera una vista basada en un mapa de tipo Ray-Casting
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Modes.GdipGfpsViewMode.mapGrid">
            <summary>
            Alto/ancho invertido del tamaño del mapa de tiles.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Gfps.Modes.GdipGfpsViewMode.#ctor(System.Drawing.Rectangle,Kriptok.Z.Gfps.Maps.GfpsCell[][],Kriptok.Maps.Grid.TiledMapGrid,System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Z.Gfps.Modes.GdipGfpsViewMode"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Gfps.Modes.PlotGfpsViewMode">
            <summary>
            Genera una vista basada en un mapa de tipo Ray-Casting
            </summary>
        </member>
        <member name="M:Kriptok.Z.Gfps.Modes.PlotGfpsViewMode.#ctor(System.Drawing.Rectangle,Kriptok.Z.Gfps.Maps.GfpsCell[][],Kriptok.Maps.Grid.TiledMapGrid,System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Z.Gfps.Modes.PlotGfpsViewMode"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Gfps.Modes.PlotGfpsViewMode.CreatePlaneBrush(Kriptok.Modes.Pseudo3D.BufferedPseudo3DRenderContext,Kriptok.Modes.Pseudo3D.Mode7.Base.PlotMode7PlaneBase)">
            <summary>
            Crea una brocha para renderizar el piso o techo.
            </summary>        
        </member>
        <member name="T:Kriptok.Z.Gfps.Modes.PlotGfpsViewModeY0">
            <summary>
            Genera una vista basada en un mapa de tipo Ray-Casting, pero con un ángulo de cámara fijo.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Gfps.Views.GfpsPanelWrapper`1">
            <summary>
            Representa un panel genérico que se encarga de controlar la visiblidad de los paneles,
            y su posterior renderización.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Gfps.Views.GfpsPanelWrapperBase">
            <summary>
            Representa un panel genérico que se encarga de controlar la visiblidad de los paneles,
            y su posterior renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Gfps.Views.GfpsPanelWrapperBase.GetMaxDistance">
            <summary>
            Obtiene la distancia a la cámara del punto mas cercano del polígono tridimencional.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Gfps.Views.GfpsPanelWrapperBase.GetMinDistance">
            <summary>
            Obtiene la distancia a la cámara del punto mas lejano del polígono tridimencional.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Gfps.Views.GfpsPanelWrapperBase.GetPriority">
            <summary>
            Obtiene la prioridad de renderización de la vista.
            
            Se utiliza el valor "más lejano" del polígono, para que ocluya los sprites
            de los objetos.
            </summary> 
        </member>
        <member name="T:Kriptok.Z.Gfps.Views.GfpsPlotPanelWrapper">
            <summary>
            Representa un panel genérico que se encarga de controlar la visiblidad de los paneles,
            y su posterior renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Gfps.Views.Base.IGfpsPanel.GetWrapper">
            <summary> 
            Obtiene un wrapper para este panel.
            </summary>        
        </member>
        <member name="T:Kriptok.Z.Gfps.Views.Gdip.GdipGfpsDoubleSidePanel">
            <summary>
            Representa un panel que depende de un estado para "opacar" o no lo que hay detrás.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Gfps.Views.Gdip.GdipGfpsMiddleTilePanel">
            <summary>
            Representa a los paneles que se renderizan por la mitad del tile.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Views.Gdip.GdipGfpsPanel.Id">
            <summary>
            Id único del objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Gfps.Views.Gdip.GdipGfpsPanel.GetWrapper">
            <summary>
            Obtiene un wrapper para esta vista.
            </summary>        
        </member>
        <member name="T:Kriptok.Z.Gfps.Views.GfpsPanelRenderer">
            <summary>
            Esta vista se utiliza para renderizar paneles que podrían o no aparecer
            más de una vez en la lista de vistas, por estar parcialmente ocluídos por otro panel.
            
            Ej: un panel marco de puerta, cuando la puerta está casi abierta.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Gfps.Views.Plot.PlotGfpsDoubleSidePanel">
            <summary>
            Representa un panel que depende de un estado para "opacar" o no lo que hay detrás.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Gfps.Views.Plot.PlotGfpsMiddleTilePanel">
            <summary>
            Representa a los paneles que se renderizan por la mitad del tile.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Gfps.Views.Plot.PlotGfpsPanel.Id">
            <summary>
            Id único del objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Gfps.Views.Plot.PlotGfpsPanel.GetWrapper">
            <summary>
            Obtiene un wrapper para este panel.
            </summary>        
        </member>
        <member name="F:Kriptok.Z.Gfps.Maps.GfpsMapGenerator`1.ViewGrid">
            <summary>
            Mapa de paneles de la grilla.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Gfps.Maps.Base.IGfpsOperableCell">
            <summary>
            Indica que esta celda tiene una reacción cuando se presiona una tecla.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Gfps.Maps.GfpsDoorCell">
            <summary>
            Esta celda es una "puerta".
            </summary>
        </member>
        <member name="T:Kriptok.Z.Convos.Maps.ConvoMapX">
            <summary>
            Representa un mapa 3D dividido en volúmenes convexos.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoMapX.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Z.Convos.Maps.ConvoMapX"/>.
            
            Constructor necesario para poder deserializar desde XML.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoMapX.#ctor(System.String)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Z.Convos.Maps.ConvoMapX"/>.
            
            Sólo debe ser utilizado por el editor de mapas 3D.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoMapX.Sectors">
            <summary>
            Lista de sectores que componen el mapa tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoMapX.Serialize(System.Boolean)">
            <summary>
            Serializa el mapa a Xml.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoMapX.Save(System.String)">
            <summary>
            Guarda el mapa en el archivo que se cargó.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoMapX.Clone">
            <summary>
            Devuelve una copia del mapa.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoMapX.Load(System.String)">
            <summary>
            Carga un mapa desde un archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoMapX.Load(System.Reflection.Assembly,System.String)">
            <summary>
            Carga un mapa desde un recurso.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoMapX.Load(System.String,System.String)">
            <summary>
            Carga un mapa desde un xml.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoMapX.Load(Kriptok.Z.Convos.Maps.ConvoMapX)">
            <summary>
            Carga propiedades extra en tiempo de ejecución después de parsear el Xml.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoMapX.AddSector(Kriptok.Z.Convos.Maps.ConvoSectorX)">
            <summary>
            Agrega un sector al mapa.
            </summary>        
        </member>
        <member name="T:Kriptok.Z.Convos.Maps.ConvoMapXGrid">
            <summary>
            Herramienta utilizada para leer un mapa de tipo <see cref="T:Kriptok.Z.Convos.Maps.ConvoMapX"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Convos.Maps.ConvoMapXGrid.config">
            <summary>
            Mapa que se está leyendo.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoMapXGrid.#ctor(Kriptok.Z.Convos.Maps.ConvoMapX)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Z.Convos.Maps.ConvoMapXGrid"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoMapXGrid.Width">
            <summary>
            Cantidad de casilleros sobre el eje X.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoMapXGrid.Height">
            <summary>
            Cantidad de casilleros sobre el eje Y.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoMapXGrid.Depth">
            <summary>
            Cantidad de casilleros sobre el eje Z.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoMapXGrid.Get(System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene el elemento en la posición indicada.
            </summary>        
        </member>
        <member name="T:Kriptok.Z.Convos.Maps.ConvoPartitionX">
            <summary>
            Partición tridimensional de un sector.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoPartitionX.Contains(System.Int32,System.Int32,System.Int32)">
            <summary>
            Indica si un casillero está contenido por la partición.
            </summary>        
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoPartitionX.Sector">
            <summary>
            Referencia al sector al que pertenece la partición.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoPartitionX.Update(Kriptok.Common.IGrid3DReader{System.Int32})">
            <summary>
            Calcula la metadata de los distintos lados de la partición.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Convos.Maps.ConvoPartitionPanelX">
            <summary>
            Representa cada sección de una pared de una partición.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoPartitionPanelX.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Z.Convos.Maps.ConvoPartitionPanelX"/>.
            
            NOTA: Importante mantener aunque no se use para la serialización/deserialización.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoPartitionPanelX.#ctor(System.Drawing.RectangleF)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Z.Convos.Maps.ConvoPartitionPanelX"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoPartitionPanelX.X">
            <summary>
            Coordenada X de la figura en el plano bidimensional.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoPartitionPanelX.Y">
            <summary>
            Coordenada Y de la figura en el plano bidimensional.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoPartitionPanelX.Width">
            <summary>
            Ancho de la figura en el plano bidimensional.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoPartitionPanelX.Height">
            <summary>
            Alto de la figura en el plano bidimensional.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Convos.Maps.ConvoPartitionPortalX">
            <summary>
            Representa cada porción rectangular de una partición que se trata de un portal
            a otra partición.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoPartitionPortalX.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Z.Convos.Maps.ConvoPartitionPortalX"/>.
            
            NOTA: Importante mantener aunque no se use para la serialización/deserialización.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoPartitionPortalX.#ctor(System.Int32,System.Drawing.RectangleF)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Z.Convos.Maps.ConvoPartitionPortalX"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoPartitionPortalX.PartitionToId">
            <summary>
            Partición a la cual apunta el portal.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoPartitionPortalX.Intersect">
            <summary>
            Indica si el portal realmente debe realizar una "intersección" de secciones antes de
            renderizar la partición siguiente.
            
            La lógica es que si el portal inverso tiene las mismas dimensiones no es necesario
            realizar una intersección. De lo contrario, es necesario.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Convos.Maps.ConvoPartitionSideX">
            <summary>
            Representa un lado de una partición.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoPartitionSideX.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Z.Convos.Maps.ConvoPartitionSideX"/>.
            
            NOTA: Importante mantener aunque no se use para la serialización/deserialización.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoPartitionSideX.Panels">
            <summary>
            Lista de secciones rectangulares de paredes.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoPartitionSideX.Portals">
            <summary>
            Lista de secciones rectangulares que dan a otras secciones.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoPartitionSideX.TextureId">
            <summary>
            Id de la textura a utilizar. 0, para ninguna.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Maps.ConvoPartitionSideX.Update(System.Int32[0:,0:])">
            <summary>
            Actualiza la lista de portales y secciones de pared que se deben renderizar
            en la partición.
            </summary>        
        </member>
        <member name="T:Kriptok.Z.Convos.Maps.ConvoSectorX">
            <summary>
            Representa una región tridimensional de un mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoSectorX.Id">
            <summary>
            Id del sector.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoSectorX.Partitions">
            <summary>
            Particiones que componen el sector.
            </summary>        
        </member>
        <member name="P:Kriptok.Z.Convos.Maps.ConvoSectorX.Map">
            <summary>
            Referencia al objeto principal del mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Convos.Modes.Full3DConvoMode">
            <summary>
            Implementación de mapas diseñados con volúmenes convexos para perspectiva full-3D.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Convos.Views.Base.ConvoMapBase`3.vertices">
            <summary>
            Colección con todos los vértices del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Convos.Views.Base.ConvoMapBase`3.texset">
            <summary>
            Conjunto de texturas usadas en el mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Convos.Views.Base.ConvoMapBase`3.partitions">
            <summary>
            Particiones volumétricas del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Views.Base.ConvoMapBase`3.#ctor(Kriptok.Z.Convos.Maps.ConvoMapX,Kriptok.Maps.ITexset{`1})">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="!:SdxViewBase&lt;TVertex, TTexture&gt;"/>.
            </summary>                
        </member>
        <member name="M:Kriptok.Z.Convos.Views.Base.ConvoMapBase`3.FindVertex(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Encuentra un vértice en base a sus coordenadas.
            
            En este caso, sólo devuelvo un nuevo vértice tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Views.Base.ConvoMapBase`3.GetPanels">
            <summary>
            Obtiene todos los paneles del mapa.
            </summary>        
        </member>
        <member name="F:Kriptok.Z.Convos.Views.ConvoPartition`1.ownerView">
            <summary>
            Vista principal que contiene la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Convos.Views.ConvoPartition`1.Id">
            <summary>
            Id de la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Convos.Views.ConvoPartition`1.Volume">
            <summary>
            Volumen de la partición.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Convos.Views.ConvoPartition`1.#ctor(Kriptok.Z.Convos.Views.Base.IConvoMap{`0},Kriptok.Z.Convos.Maps.ConvoPartitionX)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="!:ConvoPartition"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Convos.Views.ConvoPartition`1.GetPanels">
            <summary>
            Obtiene todos los paneles de la partición.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Convos.Views.ConvoPartition`1.PostProcessing(Kriptok.Z.Convos.Views.ConvoPartition{`0}[])">
            <summary>
            Genera los portales hacia las otras particiones y realiza otros post-procesamientos
            de la construcción del mapa.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Convos.Views.ConvoPartition`1.FindVertex(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene un vértice de la partición en base a sus coordenadas tridimensionales.
            
            Esto permite almacenar los vértices en una colección que permita su reutilización
            para no tener que aplicar las transformaciones más de una vez a vértices compartidos.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Convos.Views.ConvoPartition`3.#ctor(Kriptok.Z.Convos.Views.Base.ConvoMapBase{`0,`1,`2},Kriptok.Z.Convos.Maps.ConvoPartitionX)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="!:SdxPartition"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Convos.Views.ConvoPartitionSide`1.GeneratePortals(Kriptok.Z.Convos.Views.ConvoPartition{`0}[])">
            <summary>
            Genera los portales hacia las otras particiones.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Convos.Views.ConvoPartitionSide`1.GetPanels">
            <summary>
            Devuelve todos los paneles que componen el lado.
            </summary>        
        </member>
        <member name="T:Kriptok.Z.Surfaces.Extensions.SceneHandlerExtensions">
            <summary>
            Funcionalidades extendidas para la clase <see cref="T:Kriptok.Scenes.SceneHandler"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Surfaces.Maps.TileTexset">
            <summary>
            Representa un conjunto de texturas extraídas/generadas en base a un mapa de tiles.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Surfaces.Maps.TileTexset.tiles">
            <summary>
            Tiene todas las texturas de los tiles.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Surfaces.Maps.TileTexset.#ctor(Kriptok.Maps.Tiles.TileMap,Kriptok.Maps.Tiles.Base.TilesetBase,Kriptok.Views.Shapes.TextureOptions)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Z.Surfaces.Maps.TileTexset"/>
            </summary>
            <param name="tiledMap">Mapa del cual se requiere generar un listado de texturas.</param>
            <param name="tileSet">Tileset en base al cual se construyen las texturas, en caso de tener
            que crear una nueva.</param>
            <param name="options">Opciones por defecto para la generación de texturas.</param>
        </member>
        <member name="P:Kriptok.Z.Surfaces.Maps.TileTexset.AnimatedTiles">
            <summary>
            Obtiene todos los tiles animados del set.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Surfaces.Maps.TileTexset.Texture(Kriptok.Maps.Tiles.Base.ITile)">
            <summary>
            Obtiene la textura para el tile indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Surfaces.Modes.Full3DSurface`1.RenderOn(Kriptok.Modes.Full3D.Full3DMode.Full3DRenderContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Renderiza las vistas recibidas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Surfaces.Modes.Full3DSurface`1.GetMaxDrawingDistance(Kriptok.Modes.Full3D.Full3DMode.Full3DRenderContext)">
            <summary>
            Obtiene la distancia a partir de la cual se ignoran todas las vistas a renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Surfaces.Modes.Full3DSurface`1.AddSurface(Kriptok.Modes.Full3D.Full3DMode.Full3DRenderContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Este método agrega las vistas relacionadas al terreno a
            la lista de vistas por renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Z.Surfaces.Views.Base.DecoratedScrollableTiledViewBase`2">
            <summary>
            Representa una clase particular de terreno que además tiene una capa de objetos.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.DecoratedScrollableTiledViewBase`2.ForEachDecoration(System.Action{`1})">
            <summary>
            Permite operar sobre las decoraciones creadas para esta vista.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.DecoratedScrollableTiledViewBase`2.AddTo(Kriptok.Modes.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable},Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Agrega todas las sub-vistas de la vista principal al contexto de renderización.
            </summary>
            <param name="context">Contexto de renderización.</param>
            <param name="renderizables">Lista de objetos a renderizar. Agregar a
            esta lista lo que se desee renderizar.</param>
            <param name="location">La ubicación bidimensional del objetivo de la cámara.</param>
        </member>
        <member name="T:Kriptok.Z.Surfaces.Views.Base.ScrollableTexturedViewBase`1">
            <summary>
            Esta vista es base para terrenos infinitos que no se cargan al mismo tiempo,
            sino que utilizan un proceso "cámara" para saber cuándo se debe renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Surfaces.Views.Base.ScrollableTexturedViewBase`1.applyTextureIncrement">
            <summary>
            Indica si tiene que aplicar incremento de textura.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Surfaces.Views.Base.ScrollableTexturedViewBase`1.Texture">
            <summary>
            Textura para dibujar las caras.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Surfaces.Views.Base.ScrollableTexturedViewBase`1.textureWidth">
            <summary>
            Ancho de la textura, guardado para hacer cálculos rápidos.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Surfaces.Views.Base.ScrollableTexturedViewBase`1.textureHeight">
            <summary>
            Alto de la textura, guardado para hacer cálculos rápidos.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Surfaces.Views.Base.ScrollableTiledViewBase`1.tiles">
            <summary>
            Array con todos los tiles del mapa. Desde acá se samplean las texturas para renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Surfaces.Views.Base.ScrollableTiledViewBase`1.animatedTiles">
            <summary>
            Array sólo con los tiles animados (sin repetidos).
            </summary>
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableTiledViewBase`1.UpdateTile(`0,System.Int32,System.Int32)">
            <summary>
            Actualiza un tile en base a las coordenadas del tile representado.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableTiledViewBase`1.NewFace(Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex,Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex,Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex,Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex)">
            <summary>
            Implemento el método para transoformar <see cref="M:Kriptok.Z.Surfaces.Views.Base.ScrollableTiledViewBase`1.NewFace(Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex,Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex,Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex,Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex)"/>
            en <see cref="M:Kriptok.Z.Surfaces.Views.Base.ScrollableTiledViewBase`1.NewTile(Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex,Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex,Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex,Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex)"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableTiledViewBase`1.NewTile(Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex,Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex,Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex,Kriptok.Z.Surfaces.Views.Shapes.SurfaceVertex)">
            <summary>
            Devuelve un nuevo tile delimitado por los vértices indicados por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Surfaces.Views.Base.ScrollableTiledViewBase`1.TileGetter">
            <summary>
            Objeto utilizado para obtener los tiles del mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Surfaces.Views.Base.ScrollableTiledViewBase`1.TileGetter.TileGetterPow2">
            <summary>
            Versión optimizada para mapas con tamaño potencia de 2.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Surfaces.Views.Base.ScrollableViewArgs.SquareShape">
            <summary>
            Indica si debe generar el terreno de forma rectangular.
            
            Por defecto, es circular.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableViewBase.AddTo(Kriptok.Modes.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable},Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Agrega todas las sub-vistas de la vista principal al contexto de renderización.
            </summary>
            <param name="context">Contexto de renderización.</param>
            <param name="renderizables">Lista de objetos a renderizar. Agregar a
            esta lista lo que se desee renderizar.</param>
            <param name="location">La ubicación bidimensional del objetivo de la cámara.</param>
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableViewBase.GetAllViews">
            <summary>
            Obtiene todas las sub-vistas generadas para esta vista.
            
            Permite personalizar el comportamiento y el orden de renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableViewBase.GetTerrainHeight(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la altura del terreno en el punto indicado.
            </summary>        
        </member>
        <member name="F:Kriptok.Z.Surfaces.Views.Base.ScrollableViewBase`1.Swapped">
            <summary>
            Indica si la vista ha sido swappeada por completo. Por ejemplo, para utilizar un plano
            como cielo poligonal.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableViewBase`1.GetAllViews">
            <summary>
            Obtiene todas las sub-vistas generadas para esta vista.
            
            Permite personalizar el comportamiento y el orden de renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableViewBase`1.UpdateViews(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Permite customizar los límites de renderización del terreno.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableViewBase`1.UpdateViews(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Permite customizar los límites de renderización del terreno.
            </summary>
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableViewBase`1.AddTo(Kriptok.Modes.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable},Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Agrega todas las sub-vistas de la vista principal al contexto de renderización.
            </summary>
            <param name="context">Contexto de renderización.</param>
            <param name="renderizables">Lista de objetos a renderizar. Agregar a
            esta lista lo que se desee renderizar.</param>
            <param name="location">La ubicación bidimensional del objetivo de la cámara.</param>
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableViewBase`1.OnFrame(Kriptok.Modes.Context.Base.IRenderBufferContext)">
            <summary>
            Permite realizar acciones particulares antes de renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableViewBase`1.UpdateVertices(Kriptok.Modes.Context.Base.IRenderBufferContext,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Actualiza todos los vértices de las vistas, en base 
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableViewBase`1.GetVisibleFaces(Kriptok.Modes.Context.Base.IRenderBufferContext)">
            <summary>
            Obtiene las vistas que van a renderizarse 
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableViewBase`1.AddVertex``1(``0)">
            <summary>
            Agrega un vértice a la lista 
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableViewBase`1.AddView(System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable},`0)">
            <summary>
            Agrega un polígono a la lista de renderización. 
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableViewBase`1.GetTerrainHeight(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Calcula la altura de un vértice en el mapa de terreno.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Base.ScrollableViewBase`1.HasToFlip(System.Int32,System.Int32)">
            <summary>
            Indica si al renderizar el tile que se encuentra en las coordenadas indicadas por parámetro,
            se deben invertir los vértices horizontalmente.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.ScrollableFlatLiquidView.AddTo(Kriptok.Modes.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable},Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Agrega todas las sub-vistas de la vista principal al contexto de renderización.
            </summary>
            <param name="context">Contexto de renderización.</param>
            <param name="renderizables">Lista de objetos a renderizar. Agregar a
            esta lista lo que se desee renderizar.</param>
            <param name="location">La ubicación bidimensional del objetivo de la cámara.</param>
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.ScrollableTexturedLiquidView.AddTo(Kriptok.Modes.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable},Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Agrega todas las sub-vistas de la vista principal al contexto de renderización.
            </summary>
            <param name="context">Contexto de renderización.</param>
            <param name="renderizables">Lista de objetos a renderizar. Agregar a
            esta lista lo que se desee renderizar.</param>
            <param name="location">La ubicación bidimensional del objetivo de la cámara.</param>
        </member>
        <member name="P:Kriptok.Z.Surfaces.Views.TexturedScrollableViewArgs.TextureIncrement">
            <summary>
            Incremento de la textura sobre los polígonos.
            Si es cero, se calcula automáticamente.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Surfaces.Views.ScrollableTiledView">
            <summary>
            Implementación rápida y básica de la clase <see cref="T:Kriptok.Z.Surfaces.Views.Base.ScrollableTiledViewBase`1"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Z.Surfaces.Views.Shapes.DecoratedTileView`2">
            <summary>
            Representa un tile normal con una vista en el medio.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Surfaces.Views.Shapes.DecoratedTileView`2.Decoration">
            <summary>
            Referencia a la decoración que está sobre el tile.
            
            Por ahora no tiene una utilidad definida.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Shapes.DecoratedTileView`2.GetMidPoint">
            <summary>
            Obtiene la ubicación de la decoración del tile.
            </summary>        
        </member>
        <member name="T:Kriptok.Z.Surfaces.Views.Shapes.DecorationViewBase`2">
            <summary>
            Representa una decoración en el mapa de tiles.
            </summary>
        </member>
        <member name="P:Kriptok.Z.Surfaces.Views.Shapes.DecorationViewBase`2.Tile">
            <summary>
            Referencia al tile sobre el que está la decoración.
            
            Por ahora no tiene una utilidad definida.
            </summary>        
        </member>
        <member name="M:Kriptok.Z.Surfaces.Views.Shapes.DecorationViewBase`2.GetLocation">
            <summary>
            Obtiene la ubicación actual de la decoración del tile.
            </summary>        
        </member>
        <member name="T:Kriptok.Z.Surfaces.Views.Shapes.SurfaceTileView">
            <summary>
            Tile base para terrenos poligonales basados en casilleros.
            </summary>
        </member>
        <member name="F:Kriptok.Z.Surfaces.Views.Shapes.SurfaceTileView.Visible">
            <summary>
            Esta propiedad empieza en <see cref="!:false"/>, para que sólo se marque como "visible"
            cuando se vaya a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Consts.DefaultFastPixelFormat">
            <summary>
            Formato gráfico por defecto para los "backbuffers".
            
            Debería ser el que renderice más rápido, y no tomar en cuenta
            transparencias.
            
            En el caso en que sea necesario, como en modos "scroll", utilizar el
            que corresponda, pero dejar el default como el que consuma menos recursos.
            </summary>
        </member>
    </members>
</doc>
