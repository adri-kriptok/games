<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kriptok</name>
    </assembly>
    <members>
        <member name="T:Kriptok.Assets.R">
            <summary>
            Recursos comunes.
            </summary>
        </member>
        <member name="T:Kriptok.Assets.R.Images">
            <summary>
            Imágenes del core.
            </summary>
        </member>
        <member name="M:Kriptok.Assets.R.Images.Kriptok2D_273x73">
            <summary>
            Imagen con el logo de Kriptok en 2D.
            </summary>        
        </member>
        <member name="T:Kriptok.Audio.Midi.MidiInstrument">
            <summary>
            Representa un instrumento Midi que toca notas en un canal determinado.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Midi.MidiInstrument.#ctor(Kriptok.Audio.MidiInstrumentEnum,System.Byte)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Audio.Midi.MidiInstrument"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Midi.MidiInstrument.Get(System.Byte,Kriptok.Audio.MidiInstrumentEnum)">
            <summary>
            Obtiene una nueva instancia de MidiInstrument, sobreescribiendo la que hubiera en el canal indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Midi.MidiInstrument.Play(System.Byte,System.Byte)">
            <summary>
            Reproduce una nota con el instrumento.
            </summary>        
        </member>
        <member name="T:Kriptok.Audio.SoundHandlerBase">
            <summary>
            Clase base para controladores de reproducción de sonidos.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.SoundHandlerBase.setToPlay">
            <summary>
            Indica si el sonido debe reproducirse próximamente.
            
            Esto es para que el sonido no se pise consigo mismo.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.SoundHandlerBase.Enqueue(System.Boolean)">
            <summary>
            Encola el sonido para su reproducción.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.SoundHandlerBase.Stop">
            <summary>
            Detiene la reproducción del sonido.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.SoundHandlerBase.InternalPlay">
            <summary>
            Reproduce internamente el sonido, y lo vuelve a dejar habilitado
            para volver a listarlo.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.SoundHandlerBase.ProtectedPlay">
            <summary>
            Reproduce el sonido.
            </summary>        
        </member>
        <member name="T:Kriptok.Audio.Helpers.MidiHelper">
            <summary>
            Funcionalidades de ayuda para la reproducción de archivos "midi".
            
            Los archivos midi se reproducen con una aplicación extra, que corre en paralelo.
            Esto se debe a que es la única forma de que la reproducción de midis tenga su propio control de volumen.
            </summary>
        </member>
        <member name="T:Kriptok.Audio.Helpers.MidiHelper.MidiMessageEnum">
            <summary>
            Tipos de mensaje que se le pueden enviar a la aplicación.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.MidiMessageEnum.Finish">
            <summary>
            Finaliza la aplicación.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.MaxFileName">
            <summary>
            Maxima longitud que puede tener el nombre de un archivo midi para ser reproducido.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.LoopingFlagMask">
            <summary>
            Máscara utilizada para separar en dos la longitud del nombre de archivo a reproducir, y la
            propiedad que indica que la canción debe loopear.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.MemoryMappedFileBaseName">
            <summary>
            Nombre base del "archivo mapeado a memoria" utilizado para reproducir archivos midi.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.memoryMappedFileName">
            <summary>
            Nombre del archivo mapeado a memoria para esta instancia.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.memoryMappedFile">
            <summary>
            Archivo mapeado en memoria utilizado para comunicarse entre procesos.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.midiPlayerProcess">
            <summary>
            Proceso que reproduce los midis.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.midiPlayerThreadId">
            <summary>
            Id del thread del proceso que reproduce archivos midi.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Initialize(System.Boolean)">
            <summary>
            Compila un archivo ".exe" para reproducir midis en un proceso aparte. Esto es necesario
            porque no se puede setear el volumen de reproducción de midis independientemente si 
            está corriendo en el mismo proceso que el que reproduce los sonidos.
            
            https://msdn.microsoft.com/en-us/library/microsoft.visualbasic.vbcodeprovider(v=vs.110).aspx
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.IsInitialized">
            <summary>
            Indica si se puede utilizar el sub-proceso que reproduce midis.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Kill">
            <summary>
            Libera los recursos relacionados a la reproducción de midis.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.SendMidiMessage(Kriptok.Audio.Helpers.MidiHelper.MidiMessageEnum,System.String,System.Int32)">
            <summary>
            Envía un mensaje al proceso reproductor de archivos midi.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Play(System.String,System.Boolean)">
            <summary>
            Indica al sub-proceso reproductor de archivos midi que empiece a reproducir un archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Play(System.String,System.Double,System.Boolean)">
            <summary>
            Indica al sub-proceso reproductor de archivos midi que empiece a reproducir un archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Stop">
            <summary>
            Detiene la reproducción remota de un archivo midi.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Finish">
            <summary>
            Detiene la reproducción remota de un archivo midi.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Pause">
            <summary>
            Pausa una canción que se está reproduciendo.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.Resume">
            <summary>
            Reanuda una canción que estaba pausada.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.SetVolume(System.UInt32)">
            <summary>
            Reanuda una canción que estaba pausada.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.NewMidiHandler(System.String)">
            <summary>
            Obtiene un nuevo controlador de mensajes midi para recibir mensajes.
            </summary>        
        </member>
        <member name="T:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter">
            <summary>
            Controlador de mensajes midi.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.memoryMappedFileName">
            <summary>
            Nombre del archivo mapeado a memoria por el que me van a pasar el nombre de las canciones.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.SendMyMainThreadId(System.String)">
            <summary>
            Obtiene el número de thread, y se lo envía al proceso padre.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.Read(System.Int32)">
            <summary>
            Lee del archivo de memoria un string de la longitud indicada.
            </summary>            
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.Play(System.String,System.Boolean)">
            <summary>
            Reproduce un archivo midi.
            </summary>            
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.SetVolume(System.UInt32)">
            <summary>
            Establece el volumen de reproducción de archivos midi.
            </summary>            
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.Pause">
            <summary>
            Detiene momentáneamente la reproducción de un archivo midi.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.Resume">
            <summary>
            Retoma la reproducción de un archivo midi que había sido pausado momentáneamente.
            </summary>            
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.Stop">
            <summary>
            Detiene la ejecución de un archivo midi y libera el recurso.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MidiHelper.MidiMessageFilter.Finish">
            <summary>
            Finaliza el proceso de ejecución de midis.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.SoundHelper.ClearCache">
            <summary>
            Libera los sonidos de la memoria.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.SoundHelper.StopAll">
            <summary>
            Detengo todos sonidos que estén en caché.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.Native.mciSendString(System.String,System.Text.StringBuilder,System.UInt32,System.IntPtr)">
            <summary>            
            https://msdn.microsoft.com/en-us/library/windows/desktop/dd743646(v=vs.85).aspx
            </summary>            
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.IsMidiFile(System.String,System.Boolean)">
            <summary>
            Indica, basándose en la extensión si se trata de un archivo ".mid". Este tipo de archivo, cuando
            se baja desde recurso, se baja con extensión ".dat" (<seealso cref="M:Kriptok.Helpers.ResourcesHelper.ResolveId(Kriptok.Common.Resource)"/>).
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.GetWaveDevice(System.String)">
            <summary>
            Obtiene el id del dispositivo a reproducir.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.PlayWaveDevice(System.String)">
            <summary>
            Reproduce un dispositivo indicado desde el principio.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.CheckError(System.Int32,System.String)">
            <summary>
            https://msdn.microsoft.com/en-us/library/aa228215(v=vs.60).aspx
            </summary>
            <param name="result"></param>
            <param name="cmd">Comando ejecutado, necesario para lanzar la excepción.</param>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.CheckStatus">
            <summary>
            Este método es el que se encarga de chequear las instrucciones que llegaron al MidiHelper.
            Ya que las funcionalidades de Midi sólo andan bien cuando las llama el formulario principal.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.StopAll(System.Boolean)">
            <summary>
            Detiene toda la reproducción de música.
            </summary>
            <param name="cleanCache">Cuando este parámetro recibe <see cref="!:true"/> se libera de memoria
            la canción que se está reproduciendo.
            
            En el caso de que se envíe a reproducir la misma canción que ya se estaba reproduciendo, esta
            tendrá que volver a empezar.
            
            En el caso de que reciba <see cref="!:false"/> y se mande a reproducir la misma canción,
            sólo se escuchará una leve pausa, y luego continuará nuevamente desde el punto 
            donde se encontraba, ya que no se ha liberado de memoria.</param>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.ResumeAll">
            <summary>
            Retoma la reproducción de música.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.PauseAll">
            <summary>
            Pausa toda la reproducicón de música.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.Helpers.MciHelper.Stop(System.String)">
            <summary>
            Detiene un sonido específico en su reproducción.
            </summary>        
        </member>
        <member name="F:Kriptok.Audio.MidiErrorEnum.MMSYSERR_NOERROR">
            <summary>
            Si tiene éxito en cargar el dispositivo.
            </summary>
            
        </member>
        <member name="F:Kriptok.Audio.MidiErrorEnum.MMSYSERR_BADDEVICEID">
            <summary>
            El ID del dispositivo fuera de rango
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiErrorEnum.MMSYSERR_NODRIVER">
            <summary>
            No hay dispositivo detectado.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiErrorEnum.MMSYSERR_NOMEM">
            <summary>
            Error Alojamiento de memoria.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiErrorEnum.MMSYSERR_INVALPARAM">
            <summary>
            Parámetro invalido pasado.
            </summary>
        </member>
        <member name="T:Kriptok.Audio.MidiInstrumentEnum">
            <summary>
            Enumerado de instrumentos midi.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.AcousticGrandPiano">
            <summary>
            Acoustic Grand Piano
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.BrightAcousticPiano">
            <summary>
            Bright Acoustic Piano
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricGrandPiano">
            <summary>
            Electric Grand Piano
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.HonkyTonkPiano">
            <summary>
            Honky-tonk Piano
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricPiano1">
            <summary>
            Electric Piano 1
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricPiano2">
            <summary>
            Electric Piano 2
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Harpsichord">
            <summary>
            Harpsichord
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Clavi">
            <summary>
            Clavi
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Celesta">
            <summary>
            Celesta
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Glockenspiel">
            <summary>
            Glockenspiel
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.MusicBox">
            <summary>
            Music Box
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Vibraphone">
            <summary>
            Vibraphone
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Marimba">
            <summary>
            Marimba
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Xylophone">
            <summary>
            Xylophone
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.TubularBells">
            <summary>
            Tubular Bells
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Dulcimer">
            <summary>
            Dulcimer
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.DrawbarOrgan">
            <summary>
            Drawbar Organ
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.PercussiveOrgan">
            <summary>
            Percussive Organ
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.RockOrgan">
            <summary>
            Rock Organ
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ChurchOrgan">
            <summary>
            Church Organ
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ReedOrgan">
            <summary>
            Reed Organ
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Accordion">
            <summary>
            Accordion
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Harmonica">
            <summary>
            Harmonica
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.TangoAccordion">
            <summary>
            Tango Accordion
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.AcousticGuitarNylon">
            <summary>
            Acoustic Guitar (nylon)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.AcousticGuitarSteel">
            <summary>
            Acoustic Guitar (steel)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricGuitarJazz">
            <summary>
            Electric Guitar (jazz)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricGuitarClean">
            <summary>
            Electric Guitar (clean)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricGuitarMuted">
            <summary>
            Electric Guitar (muted)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.OverdrivenGuitar">
            <summary>
            Overdriven Guitar
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.DistortionGuitar">
            <summary>
            Distortion Guitar
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.GuitarHarmonics">
            <summary>
            Guitar harmonics
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.AcousticBass">
            <summary>
            Acoustic Bass
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricBassFinger">
            <summary>
            Electric Bass (finger)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ElectricBassPick">
            <summary>
            Electric Bass (pick)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FretlessBass">
            <summary>
            Fretless Bass
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SlapBass1">
            <summary>
            Slap Bass 1
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SlapBass2">
            <summary>
            Slap Bass 2
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthBass1">
            <summary>
            Synth Bass 1
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthBass2">
            <summary>
            Synth Bass 2
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Violin">
            <summary>
            Violin
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Viola">
            <summary>
            Viola
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Cello">
            <summary>
            Cello
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Contrabass">
            <summary>
            Contrabass
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.TremoloStrings">
            <summary>
            Tremolo Strings
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.PizzicatoStrings">
            <summary>
            Pizzicato Strings
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.OrchestralHarp">
            <summary>
            Orchestral Harp
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Timpani">
            <summary>
            Timpani
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.StringEnsemble1">
            <summary>
            String Ensemble 1
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.StringEnsemble2">
            <summary>
            String Ensemble 2
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthStrings1">
            <summary>
            SynthStrings 1
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthStrings2">
            <summary>
            SynthStrings 2
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ChoirAahs">
            <summary>
            Choir Aahs
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.VoiceOohs">
            <summary>
            Voice Oohs
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthVoice">
            <summary>
            Synth Voice
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.OrchestraHit">
            <summary>
            Orchestra Hit
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Trumpet">
            <summary>
            Trumpet
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Trombone">
            <summary>
            Trombone
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Tuba">
            <summary>
            Tuba
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.MutedTrumpet">
            <summary>
            Muted Trumpet
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FrenchHorn">
            <summary>
            French Horn
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.BrassSection">
            <summary>
            Brass Section
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthBrass1">
            <summary>
            SynthBrass 1
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthBrass2">
            <summary>
            SynthBrass 2
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SopranoSax">
            <summary>
            Soprano Sax
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.AltoSax">
            <summary>
            Alto Sax
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.TenorSax">
            <summary>
            Tenor Sax
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.BaritoneSax">
            <summary>
            Baritone Sax
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Oboe">
            <summary>
            Oboe
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.EnglishHorn">
            <summary>
            English Horn
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Bassoon">
            <summary>
            Bassoon
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Clarinet">
            <summary>
            Clarinet
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Piccolo">
            <summary>
            Piccolo
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Flute">
            <summary>
            Flute
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Recorder">
            <summary>
            Recorder
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.PanFlute">
            <summary>
            Pan Flute
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.BlownBottle">
            <summary>
            Blown Bottle
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Shakuhachi">
            <summary>
            Shakuhachi
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Whistle">
            <summary>
            Whistle
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Ocarina">
            <summary>
            Ocarina
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead1Square">
            <summary>
            Lead 1 (square)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead2Sawtooth">
            <summary>
            Lead 2 (sawtooth)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead3Calliope">
            <summary>
            Lead 3 (calliope)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead4Chiff">
            <summary>
            Lead 4 (chiff)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead5Charang">
            <summary>
            Lead 5 (charang)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead6Voice">
            <summary>
            Lead 6 (voice)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead7Fifths">
            <summary>
            Lead 7 (fifths)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Lead8BassLead">
            <summary>
            Lead 8 (bass + lead)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad1NewAge">
            <summary>
            Pad 1 (new age)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad2Warm">
            <summary>
            Pad 2 (warm)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad3Polysynth">
            <summary>
            Pad 3 (polysynth)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad4Choir">
            <summary>
            Pad 4 (choir)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad5Bowed">
            <summary>
            Pad 5 (bowed)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad6Metallic">
            <summary>
            Pad 6 (metallic)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad7Halo">
            <summary>
            Pad 7 (halo)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Pad8Sweep">
            <summary>
            Pad 8 (sweep)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX1Rain">
            <summary>
            FX 1 (rain)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX2Soundtrack">
            <summary>
            FX 2 (soundtrack)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX3Crystal">
            <summary>
            FX 3 (crystal)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX4Atmosphere">
            <summary>
            FX 4 (atmosphere)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX5Brightness">
            <summary>
            FX 5 (brightness)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX6Goblins">
            <summary>
            FX 6 (goblins)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX7Echoes">
            <summary>
            FX 7 (echoes)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.FX8SciFi">
            <summary>
            FX 8 (sci-fi)
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Sitar">
            <summary>
            Sitar
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Banjo">
            <summary>
            Banjo
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Shamisen">
            <summary>
            Shamisen
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Koto">
            <summary>
            Koto
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Kalimba">
            <summary>
            Kalimba
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.BagPipe">
            <summary>
            Bag pipe
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Fiddle">
            <summary>
            Fiddle
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Shanai">
            <summary>
            Shanai
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.TinkleBell">
            <summary>
            Tinkle Bell
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Agogo">
            <summary>
            Agogo
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SteelDrums">
            <summary>
            Steel Drums
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Woodblock">
            <summary>
            Woodblock
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.TaikoDrum">
            <summary>
            Taiko Drum
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.MelodicTom">
            <summary>
            Melodic Tom
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.SynthDrum">
            <summary>
            Synth Drum
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.ReverseCymbal">
            <summary>
            Reverse Cymbal
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.GuitarFretNoise">
            <summary>
            Guitar Fret Noise
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.BreathNoise">
            <summary>
            Breath Noise
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Seashore">
            <summary>
            Seashore
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.BirdTweet">
            <summary>
            Bird Tweet
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.TelephoneRing">
            <summary>
            Telephone Ring
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Helicopter">
            <summary>
            Helicopter
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Applause">
            <summary>
            Applause
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiInstrumentEnum.Gunshot">
            <summary>
            Gunshot
            </summary>
        </member>
        <member name="T:Kriptok.Audio.MidiNotePlayer">
            <summary>
            https://stackoverflow.com/questions/40392382/midioutshortmsg-no-sound
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.PercussionChannel">
            <summary>
            Canal por el que se reproducen los sonidos de percusión.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.PercussionMinNote">
            <summary>
            Mínima nota que puede reproducir el canal de percusión.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.PercussionMaxNote">
            <summary>
            Máxima nota que puede reproducir el canal de percusión.
            </summary>
        </member>
        <member name="T:Kriptok.Audio.MidiNotePlayer.MidiOutCaps">
            <summary>
            Esta es la estructura de un dispositivo de salida midi.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.wMid">
            <summary>
            ID del Fabricante.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.wPid">
            <summary>
            ID del Producto.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.vDriverVersion">
            <summary>
            Versión del driver.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.szPname">
            <summary>
            Nombre del Producto.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.wTechnology">
            <summary>
            Tipo de dispositivo.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.wVoices">
            <summary>
            Número de voces (Sólo para el sintetizador interno).
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.wNotes">
            <summary>
            Máximo número de notas (Sólo para el sintetizador interno).
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.wChannelMask">
            <summary>
            Número de canales Midi (Sólo para el sintetizador interno).
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MidiNotePlayer.MidiOutCaps.dwSupport">
            <summary>
            Controles extra permitidos (volumen, etc)
            </summary>
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.midiOutGetNumDevs">
            <summary>
            The midiOutGetNumDevs function retrieves the number of MIDI output devices present in the system.
            </summary>     
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.midiOutGetDevCaps(System.Int32,Kriptok.Audio.MidiNotePlayer.MidiOutCaps@,System.UInt32)">
            <summary>
            Se utiliza para obtener el dispositivo de salida de Midi predeterminado.
            </summary>
            <param name="uDeviceID">identifica al dispositivo de salida midi (-1 es el default), 
            y luego la cuenta empieza desde CERO para el resto.</param>
            <param name="lpMidiOutCaps">es una estructura de tipo <see cref="T:Kriptok.Audio.MidiNotePlayer.MidiOutCaps"/>, declarado arriba, 
            que va a guardar la información del dispositivo de salida Midi.</param>
            <param name="cbMidiOutCaps">es el tamaño en bits de la estructura lbCaps.</param>        
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.midiOutShortMsg(System.Int32,System.Int32)">
            <summary>        
            Se utiliza para enviar mensajes de salida midi, tanto para reproducir notas, 
            como para cambiar el instrumento, etcétera.
            
            https://docs.microsoft.com/en-us/windows/win32/api/mmeapi/nf-mmeapi-midioutshortmsg
            </summary>        
            <param name="handle">Es el código del dispositivo de salida midi, que devuelve midiOutOpen lphMidiOut.</param>
            <param name="message">Mensaje enviado.</param>        
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.midiOutClose(System.Int32)">
            <summary>
            Se utiliza para cerrar el dispositivo de salida Midi.
            </summary>
            <param name="handle">Es el parámetro que devuelve midiOutOpen lphMidiOut</param>        
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.SetInstrument(Kriptok.Audio.MidiInstrumentEnum,System.Int32)">
            <summary>
            Establece el instrumento a reproducir en el canal indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.SetInstrument(System.Int32,System.Int32)">
            <summary>
            Establece el instrumento a reproducir en el canal indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.GetNote(System.Int32)">
            <summary>
            Obtiene la nota y la octava a la que pertenece la nota indicada.
            
            Oct#  C   C#  D   D#  E   F   F#  G   G#  A   A#  B
             -1   0   1   2   3   4   5   6   7   8   9   10  11
              0   12  13  14  15  16  17  18  19  20  21  22  23
              1   24  25  26  27  28  29  30  31  32  33  34  35
              2   36  37  38  39  40  41  42  43  44  45  46  47
              3   48  49  50  51  52  53  54  55  56  57  58  59
              4   60  61  62  63  64  65  66  67  68  69  70  71
              5   72  73  74  75  76  77  78  79  80  81  82  83
              6   84  85  86  87  88  89  90  91  92  93  94  95
              7   96  97  98  99  100 101 102 103 104 105 106 107
              8   108 109 110 111 112 113 114 115 116 117 118 119
              9   120 121 122 123 124 125 126 127
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.GetPercussionInstruments">
            <summary>
            Obtiene una lista de los instrumentos de percusión.
            
            Recordar utilizar los índices a partir del 35
            </summary>       
        </member>
        <member name="M:Kriptok.Audio.MidiNotePlayer.GetInstruments">
            <summary>
            https://softologyblog.wordpress.com/2009/09/30/controlling-midi-output-with-delphi/
            </summary>        
        </member>
        <member name="T:Kriptok.Audio.ISoundHandler">
            <summary>
            Interfaz de los controladores que reproducen sonidos.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.ISoundHandler.Play">
            <summary>
            Reproduce el sonido.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.ISoundHandler.Stop">
            <summary>
            Detiene la ejecución del sonido.
            </summary>
        </member>
        <member name="T:Kriptok.Audio.MciWaveHandler">
            <summary>
            Representa un controlador de sonido que envía una señal a Windows para reproducir el sonido.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MciWaveHandler.fileName">
            <summary>
            Nombre del archivo generado.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.MciWaveHandler.device">
            <summary>
            Referencia al sonido cargado en memoria.
            </summary>
        </member>
        <member name="M:Kriptok.Audio.MciWaveHandler.GetDevice">
            <summary>
            Obtiene el identificador para reproducción, y lo guarda.
            </summary>        
        </member>
        <member name="M:Kriptok.Audio.MciWaveHandler.ProtectedPlay">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Audio.PlayMusicOptions">
            <summary>
            Clase de atributos para inicializar la reproducción de música.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.PlayMusicOptions.Resource">
            <summary>
            Recurso a reproducir.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.PlayMusicOptions.Loop">
            <summary>
            Indica si se debe repetir indefinidamente hasta ser detenida.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.PlayMusicOptions.From">
            <summary>
            Desde qué punto se debe empezar a reproducir.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.PlayMusicOptions.To">
            <summary>
            Hasta que punto se debe reproducir.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.PlayMusicOptions.Volume">
            <summary>
            Volumen de reproducción.
            </summary>
        </member>
        <member name="F:Kriptok.Audio.PlayMusicOptions.RestartIfPlaying">
            <summary>
            Si está sonando la misma canción, lo vuelve a poner desde el principio.
            </summary>
        </member>
        <member name="T:Kriptok.Audio.SoundPlayerHandler">
            <summary>
            Representa un controlador de un sonido en particular.
            </summary>
        </member>
        <member name="T:Kriptok.Common.Base.ILocalizableZ">
            <summary>
            Indica que se puede ubicar verticalmente en el espacio tridimencional.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Base.ILocalizableZ.GetLocationZ">
            <summary>
            Obtiene la coordenada Z donde se encuentra el objeto a renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Common.Base.ILocalizable3D">
            <summary>
            Indica que el objeto se puede ubicar en un entorno bidimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Base.ILocalizable3D.GetRenderLocation">
            <summary>
            Obtiene la ubicación donde se encuentra la vista a renderizar.
            </summary>
        </member>
        <member name="T:Kriptok.Common.Base.IRotable3D">
            <summary>
            Representa un objeto que puede ser rotado sobre un ángulo. Una imagen o una primitiva bidimensional
            son ejemplos.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Base.IRotable3DExtensions.ApplyZY(Kriptok.Common.Base.IRotable3D,Kriptok.Drawing.Algebra.Matrix3x4F)">
            <summary>
            Aplica dos transformaciones, ignorando la rotación sobre el eje de "roll".
            </summary>        
        </member>
        <member name="T:Kriptok.Common.Base.IRotable2D">
            <summary>
            Representa un objeto que puede ser rotado sobre un ángulo. Una imagen o una primitiva bidimensional
            son ejemplos.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Base.IRotable2D.GetRotationAngle2D">
            <summary>
            Obtiene el ángulo de rotación del objeto.
            </summary>        
        </member>
        <member name="T:Kriptok.Common.Base.IDirectionable2D">
            <summary>
            Indica que el objeto tiene una dirección sobre el plano XY.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Base.IDirectionable2D.GetDirection">
            <summary>
            Obtiene la dirección en la que "mira" el objeto.
            </summary>        
        </member>
        <member name="T:Kriptok.Common.Base.ILocalizable2D">
            <summary>
            Indica que el objeto se puede ubicar en un entorno bidimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Base.ILocalizable2D.GetLocation2D">
            <summary>
            Obtiene la ubicación donde se encuentra la vista a renderizar.
            </summary>
        </member>
        <member name="T:Kriptok.Common.Base.FixedLocation">
            <summary>
            Clase utilizada para la implementación por defecto de ILocalizable2D.
            </summary>
        </member>
        <member name="T:Kriptok.Common.Initializer">
            <summary>
            Clase utilizada por procesos que requieren 
            </summary>
        </member>
        <member name="M:Kriptok.Common.Initializer.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Common.Initializer"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Common.Initializer.Set(System.String,System.Object)">
            <summary>
            Permite establecer valores que se transfiera entre el constructor y el método
            y luego sea descartado para no tener que crear una variable.
            </summary>        
        </member>
        <member name="M:Kriptok.Common.Initializer.Get``1(System.String)">
            <summary>
            Permite obtener un valor cargado previamente, casteado al tipo correspondiente.
            </summary>                
        </member>
        <member name="T:Kriptok.Common.IEventListener">
            <summary>
            Representa un objeto que espera un evento de otro proceso.
            </summary>
        </member>
        <member name="M:Kriptok.Common.IEventListener.Listen(System.Int32,System.Object)">
            <summary>
            Evento que se dispara al "escuchar" un evento de otro proceso.
            </summary>        
        </member>
        <member name="M:Kriptok.Common.ListenerCollection`1.Trigger(System.Int32,System.Object)">
            <summary>
            Dispara un evento a todos los "escuchadores" que haya en la colección.
            </summary>        
        </member>
        <member name="T:Kriptok.Common.FastList`1">
            <summary>
            Lista rápida que funciona con un array de tamaño definido internamente.
            </summary>
        </member>
        <member name="M:Kriptok.Common.FastList`1.#ctor(System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Common.FastList`1"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Common.FastList`1.Clear">
            <summary>
            Limpia la lista.
            </summary>
        </member>
        <member name="M:Kriptok.Common.FastList`1.Add(`0)">
            <summary>
            Agrega un ítem a la lista.
            </summary>        
        </member>
        <member name="M:Kriptok.Common.FastList`1.ForEach(System.Action{`0})">
            <summary>
            Ejecuta una acción para cada item de la lista.
            </summary>        
        </member>
        <member name="T:Kriptok.Common.IGrid3DReader`1">
            <summary>
            Representa una grilla tridimensional de un tipo indicado por parámetro.
            </summary>    
        </member>
        <member name="P:Kriptok.Common.IGrid3DReader`1.Width">
            <summary>
            Cantidad de casilleros sobre el eje X.
            </summary>
        </member>
        <member name="P:Kriptok.Common.IGrid3DReader`1.Height">
            <summary>
            Cantidad de casilleros sobre el eje Y.
            </summary>
        </member>
        <member name="P:Kriptok.Common.IGrid3DReader`1.Depth">
            <summary>
            Cantidad de casilleros sobre el eje Z.
            </summary>
        </member>
        <member name="M:Kriptok.Common.IGrid3DReader`1.Get(System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene el elemento en la posición indicada.
            </summary>        
        </member>
        <member name="T:Kriptok.Common.Box`1">
            <summary>
            Se utiliza para hacer una "caja" para estructuras como una <see cref="!:Matrix3x4F"/>. Principalmente utilizado
            para no tener que copiar toda la estructura completa cada vez.
            </summary>
        </member>
        <member name="T:Kriptok.Common.ITextResource">
            <summary>
            Describe un recurso del cual se puede extraer texto plano.
            </summary>
        </member>
        <member name="M:Kriptok.Common.ITextResource.ReadAllLines">
            <summary>
            Obtiene todas las líneas de texto del recurso.
            </summary>        
        </member>
        <member name="T:Kriptok.Common.Resource">
            <summary>
            Representa información de un recurso del sistema.
            </summary>
        </member>
        <member name="F:Kriptok.Common.Resource.resourceCache">
            <summary>
            Mantiene en caché los nombres de los recursos cargados como los refirió la entidad.
            
            De esta manera, como se asume que los recursos van a ser siempre llamados de la misma manera 
            en un mismo entorno (las entidades siempre referencian a los sprites de sus vistas de la misma manera,
            se ahorra tener que buscar el recurso cada vez).
            
            Esto puede generar que queden recursos repetidos, llamados de distintas maneras, pero 
            es un mal menor comparado con estar recorriendo constantemente todos los recursos de un
            ensamblado.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Resource.Get(System.Reflection.Assembly,System.String)">
            <summary>
            Obtiene un recurso y lo guarda en la caché.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Resource.ClearCache">
            <summary>
            Limpia la caché de los nombres de los recursos cargados.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Resource.#ctor(System.Reflection.Assembly,System.String)">
            <summary>
            Devuleve una nueva instancia de la clase <see cref="T:Kriptok.Common.Resource"/>.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra el recurso.</param>
            <param name="name">Nombre identificatorio del recurso.</param>
        </member>
        <member name="F:Kriptok.Common.Resource.Assembly">
            <summary>
            Referencia al ensamblado que tiene el recurso.
            </summary>
        </member>
        <member name="F:Kriptok.Common.Resource.Name">
            <summary>
            Nombre completo del recurso.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Resource.GetStream">
            <summary>
            Obtiene el stream del recurso indicado.
            </summary>
            <returns>Devuelve el stream del recurso indicado.</returns>
        </member>
        <member name="M:Kriptok.Common.Resource.UsingBitmap(System.Action{System.Drawing.Bitmap})">
            <summary>
            Ejecuta una acción que recibe por parámetro el stream del recurso.
            </summary>        
            <param name="action">Acción a ejecutar utilizando el bitmap del recurso.</param>   
        </member>
        <member name="M:Kriptok.Common.Resource.UsingStream(System.Action{System.IO.Stream})">
            <summary>
            Ejecuta una acción que recibe por parámetro el stream del recurso.
            </summary>        
            <param name="action">Acción a ejecutar utilizando el stream del recurso.</param>        
        </member>
        <member name="M:Kriptok.Common.Resource.ReadAllLines">
            <summary>
            Lee el recurso asumiendo que es texto plano.
            </summary>        
        </member>
        <member name="M:Kriptok.Common.Resource.LoadText(System.String)">
            <summary>
            Carga un archivo de texto en memoria.
            </summary>        
        </member>
        <member name="T:Kriptok.Common.Cache.CacheFactory">
            <summary>
            Esta clase se mantiene pública para poder monitorear la caché desde otros proyectos en modo DEBUG,
            pero interna e inaccesible en modo Release, ya que no es necesaria.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Cache.CacheFactory.#ctor">
            <summary>
            Para que no se pueda instanciar. Test Comment
            </summary>
        </member>
        <member name="P:Kriptok.Common.Cache.ItemCache`2.Values">
            <summary>
            Valores guardados en la cache.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Cache.ItemCache`2.Clear">
            <summary>
            Limpia todos los recursos de la caché, y libera todos los recursos que se hubiesen cargado.
            </summary>
        </member>
        <member name="M:Kriptok.Common.Cache.ItemCache`2.Resolve(`0,System.Func{`1})">
            <summary>
            Resolve utiliza el patrón doble check (antes y después de lockear).
            </summary>
        </member>
        <member name="T:Kriptok.Core.ComponentBase">
            <summary>
            Component base provee acceso a funcionalidades comunes del sistema.
            </summary>
            <summary>
            Component base provee acceso a funcionalidades comunes del sistema.
            </summary>
        </member>
        <member name="T:Kriptok.Core.ComponentBase.Rand">
            <summary>
            Acceso a funcionalidades de generación de números aleatorios.
            </summary>
        </member>
        <member name="M:Kriptok.Core.ComponentBase.Rand.NextF">
            <summary>
            Produce un número aleatorio entre 0f y 1f.
            </summary>            
        </member>
        <member name="M:Kriptok.Core.ComponentBase.Rand.NextF(System.Single,System.Single)">
            <summary>
            Obtiene un número aleatorio de punto flotante entre los valores indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Core.ComponentBase.Rand.Next(System.Int32,System.Int32)">
            <summary>
            Obtiene un número aleatorio entre los valores indicados por parámetro.
            
            Los dos se consideran incluidos en el rango posible.
            </summary>            
        </member>
        <member name="M:Kriptok.Core.ComponentBase.Rand.Randomize">
            <summary>
            Inicializa el generador de números aleatorios general tomando como seed el <see cref="!:DateTime.Now.Ticks"/>.
            
            Utilizar este método cuando se requiere que la aplicación se comporte realmente de forma aleatoria.
            </summary>
        </member>
        <member name="T:Kriptok.Core.ComponentBase.Sys">
            <summary>
            Funcionalidades de sistemas.
            </summary>
        </member>
        <member name="F:Kriptok.Core.ComponentBase.Sys.lastFrameTime">
            <summary>
            Último momento en que se tomó el tiempo. Utilizado para calcular el tiempo entre frame y frame.
            </summary>
        </member>
        <member name="P:Kriptok.Core.ComponentBase.Sys.TimeDelta">
            <summary>
            Indica el tiempo en milisegundos que pasó entre frame y frame.            
            </summary>
        </member>
        <member name="T:Kriptok.Core.Game.Audio">
            <summary>
            Funcionalidades generales relacionadas a la reproducción de sonidos.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Game.Audio.playSoundQueue">
            <summary>
            Cola de sonidos a reproducir.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Game.Audio.stopWaveBag">
            <summary>
            Lista de ondas a detener.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Game.Audio.setToStopAll">
            <summary>
            Indica que debe detener todos los sonidos en el próximo frame.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Audio.EnqueueToPlay(Kriptok.Audio.SoundHandlerBase)">
            <summary>
            Encola un sonido para reproducir.
            </summary>            
        </member>
        <member name="M:Kriptok.Core.Game.Audio.CheckStatus">
            <summary>
            Reproduce el siguiente sonido en la lista.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Audio.ClearSounds">
            <summary>
            Limpia la lista de sonidos que haya almacenados.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Audio.StopAllSounds">
            <summary>
            Detiene todos los sonidos que se estén reproduciendo y los encolados.
            </summary>            
        </member>
        <member name="M:Kriptok.Core.Game.Audio.EnqueueToStop(Kriptok.Audio.MciWaveHandler)">
            <summary>
            Encola una onda para detener.
            </summary>            
        </member>
        <member name="F:Kriptok.Core.Game.Threading.aliveThreadsArray">
            <summary>
            Arreglo de threads vivas en este momento.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Game.Threading.AliveThreadList">
            <summary>
            Lista de threads vivos actualmente.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Threading.AddThread(Kriptok.Core.Game.Threading.GameThread.IThreadOwner)">
            <summary>
            Agrega y devuelve un thread al juego.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.Game.Threading.ThreadLock(System.Action)">
            <summary>
            Este lock se utiliza cuando se desea modificar la lista de objetos vivos.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.Game.Threading.ThreadLock``1(System.Func{``0})">
            <summary>
            Este lock se utiliza cuando se desea modificar la lista de objetos vivos.
            </summary>    
        </member>
        <member name="M:Kriptok.Core.Game.Threading.ResumeThreads">
            <summary>
            Libera los demás threads para que continúe.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GetThreadCount">
            <summary>
            Obtiene la cantidad de threads de juego que hay actualmente.
            </summary>        
        </member>
        <member name="T:Kriptok.Core.Game.Threading.GameThread">
            <summary>
            Thread de juego.
            </summary>
        </member>
        <member name="T:Kriptok.Core.Game.Threading.GameThread.IThreadOwner">
            <summary>
            Interfaz que unifica los objetos propietarios de threads.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GameThread.IThreadOwner.IsAlive">
            <summary>
            Indica si el propietario del thread sigue vivo.
            </summary>                    
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GameThread.IThreadOwner.IsAsleep">
            <summary>
            Indica si el objeto propietario está "durmiendo".
            </summary>                    
        </member>
        <member name="F:Kriptok.Core.Game.Threading.GameThread.owner">
            <summary>
            Propietario del thread.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Game.Threading.GameThread.cancellationTaskToken">
            <summary>
            Token de cancelación de flujo.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Game.Threading.GameThread.myThread">
            <summary>
            Puntero al thread en el que corre el proceso.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Game.Threading.GameThread.readyToFrameFlag">
            <summary>
            Indica si el proceso está "listo para renderizar", es decir, que ha encontrado un frame en el código.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Game.Threading.GameThread.taskFinished">
            <summary>
            Indica si el thread terminó, o murió por haber lanzado una excepción.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GameThread.#ctor(Kriptok.Core.Game.Threading.GameThread.IThreadOwner)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Core.Game.Threading.GameThread"/>.
            </summary>                
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GameThread.IsAlive">
            <summary>
            Indica si el thread está vivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GameThread.IsReadyToFrame">
            <summary>
            Indica si el thread está listo para que se renderice la pantalla.
            </summary>                
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GameThread.Resume">
            <summary>
            Retoma la corrida del thread.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GameThread.Frame">
            <summary>
            Este método genera una "espera" hasta que el proceso es renderizado.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GameThread.FadeOff(System.Byte)">
            <summary>
            Oscurece la pantalla a negro.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GameThread.FadeTo(System.Drawing.Color,System.Byte)">
            <summary>
            Oscurece la pantalla al color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GameThread.FadeOn(System.Byte)">
            <summary>
            Vuelve a aclarar la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GameThread.FadeFrom(System.Drawing.Color,System.Byte)">
            <summary>
            Vuelve a aclarar la pantalla desde el color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GameThread.FadeFromTo(System.Drawing.Color,System.Drawing.Color,System.Byte)">
            <summary>
            Vuelve a aclarar la pantalla desde el color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GameThread.Start(System.Action,System.Action)">
            <summary>
            Este método se ejecuta cuando un ítem es agregado a la lista de procesos vivos.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GameThread.Abort">
            <summary>
            Aborto el thread.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Threading.GameThread.IsDisposed">
            <summary>
            Indica si el elemento ha sido completamente destruido.
            </summary>  
        </member>
        <member name="T:Kriptok.Core.Game.Render">
            <summary>
            Funcionalidades generales relacionadas a la renderización y gráficos.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Game.Render.ViewCount">
            <summary>
            Contador de vistas a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Game.Render.EnvironmentCount">
            <summary>
            Se utiliza para contar las particiones de espacio visibles en entornos particionados.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Game.Render.RenderedObjects">
            <summary>
            Objetos renderizados.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Render.AddToViewCount(System.Int32)">
            <summary>
            Incrementa la cantidad de vistas a renderizar en el número indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Render.AddToEnvironmentCount(System.Int32)">
            <summary>
            Incrementa la cantidad de vistas a renderizar pertenecientes al espacio.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Render.AddToViewCount(System.Object)">
            <summary>
            Incrementa la cantidad de vistas a renderizar en el número indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Render.AddToEnvironmentCount(System.Object)">
            <summary>
            Incrementa la cantidad de vistas a renderizar pertenecientes al espacio.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Render.RenderDebugViews``1(Kriptok.Entities.Base.EntityBase[],``0)">
            <summary>
            Renderiza vistas de DEBUG.
            </summary>            
        </member>
        <member name="T:Kriptok.Core.Game.Collisions">
            <summary>
            Clase que se encarga de resolver colisiones entre objetos.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Game.Collisions.queries">
            <summary>
            Lista de consultas de colisión a resolver.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Collisions.Resolve(Kriptok.Entities.Base.EntityBase[])">
            <summary>
            Resuelve todas las colisiones que se indicaron.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Collisions.GetQueryCount">
            <summary>
            Obtiene la cantidad de queries de colisión a resolver por frame.
            </summary>        
        </member>
        <member name="F:Kriptok.Core.Game.aliveObjectsArray">
            <summary>
            Arreglo de entidades vivas en este momento.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Game.AliveObjectsList">
            <summary>
            Lista de entidades vivas en este momento.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.Add``1(``0)">
            <summary>
            Agrega una entidad al juego.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.Game.KillAllEntities(Kriptok.Entities.Base.EntityBase[])">
            <summary>
            Elimina todos los objetos de juego.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.ClearGC">
            <summary>
            Limpio el Garbage Collector después de generar mapas y esas cosas.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Game.EntityLock(System.Action)">
            <summary>
            Este lock se utiliza cuando se desea modificar la lista de objetos vivos.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.Game.EntityLock``1(System.Func{``0})">
            <summary>
            Este lock se utiliza cuando se desea modificar la lista de objetos vivos.
            </summary>    
        </member>
        <member name="M:Kriptok.Core.Game.GetAliveObjectsCount">
            <summary>
            Obtiene la cantidad de objetos vivos en este momento.
            </summary>        
        </member>
        <member name="T:Kriptok.Core.RegionBase">
            <summary>
            Esta clase representa una región de la pantalla donde se pueden renderizar vistas.
            </summary>
        </member>
        <member name="F:Kriptok.Core.RegionBase.queries">
            <summary>
            Lista de consultas a resolver.
            </summary>
        </member>
        <member name="M:Kriptok.Core.RegionBase.ResolveQueries(Kriptok.Regions.Context.Base.IRenderContext)">
            <summary>
            Resuelve todas las colisiones que se indicaron.
            </summary>
        </member>
        <member name="M:Kriptok.Core.RegionBase.GetQueryCount">
            <summary>
            Obtiene la cantidad de queries de colisión a resolver por frame.
            </summary>        
        </member>
        <member name="F:Kriptok.Core.RegionBase.entitiesHashSet">
            <summary>
            Lista de entidades a renderizar en esta región.
            </summary>
        </member>
        <member name="F:Kriptok.Core.RegionBase.Id">
            <summary>
            Id unívoco de la región. Este id puede modificarse a lo largo del programa si una región desaparece.
            </summary>
        </member>
        <member name="F:Kriptok.Core.RegionBase.HalfWidthF">
            <summary>
            Mitad de la pantalla horizontalmente.
            </summary>
        </member>
        <member name="F:Kriptok.Core.RegionBase.HalfHeightF">
            <summary>
            Mitad de la pantalla verticalmente.
            </summary>
        </member>
        <member name="F:Kriptok.Core.RegionBase.Rectangle">
            <summary>
            Rectángulo de la pantalla en el que se renderiza la región.
            </summary>
        </member>
        <member name="F:Kriptok.Core.RegionBase.Ambience">
            <summary>
            Indica de dónde viene la luz de ambiente.
            </summary>
        </member>
        <member name="P:Kriptok.Core.RegionBase.Size">
            <summary>
            La idea de esta propiedad es obtener los valores y después ser casteados y almacenados en memoria.
            No debe formar parte de ningún cálculo que se deba repetir indefinidamente, ya que es lento y 
            puede causar problemas de performance.
            </summary>
        </member>
        <member name="M:Kriptok.Core.RegionBase.GetBounds">
            <summary>
            Obtiene los límites de la región en valores de punto flotante.
            </summary>
        </member>
        <member name="M:Kriptok.Core.RegionBase.GetBoundsF">
            <summary>
            Obtiene los límites de la región en valores de punto flotante.
            </summary>
        </member>
        <member name="M:Kriptok.Core.RegionBase.Clear">
            <summary>
            Limpia la región y libera todos los recursos.
            </summary>
        </member>
        <member name="M:Kriptok.Core.RegionBase.GetGdipRotationAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Core.RegionBase.GetDirectionAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo en que el objeto está "mirando" o "apuntando" en ambientes bidimensinoales.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.RegionBase.AddObject``1(``0)">
            <summary>
            Agrega una entidad para renderizar en la región.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.RegionBase.GetEntities">
            <summary>
            Obtiene las entidades para renderizar en esta región.
            </summary>        
        </member>
        <member name="T:Kriptok.Core.Camera">
            <summary>
            Estructura que agrupa la información de la cámara al momento de renderizar la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Camera.Distance">
            <summary>
            Para perspectivas tridimencionales, indica a la distancia que se encuentra la cámara del objetivo.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Camera.TiltAngle">
            <summary>
            Inclinación lateral de la cámara (ángulos en radianes).
            </summary>
        </member>
        <member name="F:Kriptok.Core.Camera.DirectionAngle">
            <summary>
            Dirección en la que apunta la cámara (ángulos en radianes).
            </summary>
        </member>
        <member name="F:Kriptok.Core.Camera.Location">
            <summary>
            "Ubicación física" donde se encuentra la cámara, antes de aplicar la <see cref="F:Kriptok.Core.Camera.Distance"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Camera.GetAngleToCamera2D(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Obtiene el ángulo desde el cuál se está mirando al proceso. No el ángulo del cual lo está
            mirando el proceso cámara, sino del usuario directamente.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Camera.GetPseudo3DMatrix">
            <summary>
            Obtiene la matriz de transformación del plano de Mode7 para transformar puntos tridimencionales
            a la perspectiva actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.Camera.GetTargetLocation2D">
            <summary>
            Obtiene la ubicación del objetivo de la cámara.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.Camera.GetCameraLocation2D">
            <summary>
            Obtiene la ubicación real de la cámara, basada en la ubicación, la dirección y la distancia.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.Camera.GetCameraLocation3D">
            <summary>
            Obtiene la ubicación de la cámara en el espacio 3D.
            </summary>        
        </member>
        <member name="T:Kriptok.Core.Window">
            <summary>
            Esta clase agrupa las funcionalidades estándar de la pantalla del juego.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Window.MainForm">
            <summary>
            Formulario principal de la aplicación.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Window.Focused">
            <summary>
            Indica si la ventana tiene el foco en Windows.
            </summary>
        </member>
        <member name="P:Kriptok.Core.Window.Regions">
            <summary>
            Lista de regiones activas.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Window.SubRegions">
            <summary>
            Lista de regiones a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Window.ScreenRegion">
            <summary>
            Región principal.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Window.WidthF">
            <summary>
            Ancho y alto de la pantalla completa.
            </summary>
        </member>
        <member name="F:Kriptok.Core.Window.HeightF">
            <summary>
            Ancho y alto de la pantalla completa.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Window.SortSubRegions">
            <summary>
            Ordena las regiones en pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Window.ClearRegions">
            <summary>
            Elimina todas las regiones excepto la principal.
            </summary>
        </member>
        <member name="M:Kriptok.Core.Window.GetQueryCount">
            <summary>
            Obtiene la cantidad de consultas por región que están en este momento en memoria.
            </summary>        
        </member>
        <member name="F:Kriptok.Core.WindowSizeEnum.M320x200To240">
            <summary>
            Resolución especial para juegos antiguos que tenían una resolución de 320x200
            que debía estirarse hasta cubrir una pantalla de 4:3
            </summary>
        </member>
        <member name="F:Kriptok.Core.WindowSizeEnum.W170x96">
            <summary>
            Pixels de 8x8. Estilo consola.
            </summary>
        </member>
        <member name="F:Kriptok.Core.WindowSizeEnum.W340x192">
            <summary>
            1/16 de pantalla. Pixels de 4x4
            </summary>
        </member>
        <member name="F:Kriptok.Core.WindowSizeEnum.W454x256">
            <summary>
            1/9 de pantalla. Pixels de 3x3
            </summary>
        </member>
        <member name="F:Kriptok.Core.WindowSizeEnum.W680x384">
            <summary>
            1/4 de pantalla. Pixels de 2x2.
            </summary>
        </member>
        <member name="T:Kriptok.Core.WindowSizeEnumExtensions">
            <summary>
            Métodos asociados al enumerado <see cref="T:Kriptok.Core.WindowSizeEnum"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Core.WindowSizeEnumExtensions.ToSize(Kriptok.Core.WindowSizeEnum)">
            <summary>
            Obtiene el tamaño (en pixels) de la pantalla a la que renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Core.ScreenRegionExtensions.Center(Kriptok.Core.RegionBase)">
            <summary>
            Obtiene las coordenadas del punto central de la pantalla.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Algebra.Line3D">
            <summary>
            Representa una línea bidimensional definida por un vector dirección y un punto.
            </summary>    
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Line3D.Empty">
            <summary>
            Una línea vacía sin dirección.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Line3D.#ctor(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Devuelve una nueva instancia de, tipo <see cref="T:Kriptok.Drawing.Algebra.Line3D"/>.
            </summary>        
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Line3D.Direction">
            <summary>
            Dirección de la recta.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Line3D.Point">
            <summary>
            Punto aleatorio por el que pasa la recta.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Line3D.Z0">
            <summary>
            Indica si el rayo es paralelo al plano XY, para evitar hacer validaciones
            de intersección que pudieran terminar en el infinito.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Algebra.Ray3D">
            <summary>
            Estructura que representa una semirrecta en 2D.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Ray3D.#ctor(Kriptok.Drawing.Algebra.Vector2F,System.Single,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Devuelve una nueva instancia de la estructura <see cref="T:Kriptok.Drawing.Algebra.Ray3D"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Ray3D.#ctor(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Devuelve una nueva instancia de la estructura <see cref="T:Kriptok.Drawing.Algebra.Ray3D"/>.
            </summary>        
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Ray3D.Direction">
            <summary>
            Dirección de la semirrecta recta.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Ray3D.Point">
            <summary>
            Punto donde empieza la semirrecta.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Ray3D.Z0">
            <summary>
            Indica si el rayo es paralelo al plano XY, para evitar hacer validaciones
            de intersección que pudieran terminar en el infinito.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Ray3D.ToLine">
            <summary>
            Obtiene la recta a la cual pertenece la semirrecta.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Ray3D.AreParallel(Kriptok.Drawing.Algebra.Ray3D,Kriptok.Drawing.Algebra.Plane)">
            <summary>
            Indica si el rayo y el plano indicados por parámetro son paralelos.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Algebra.Segment3D">
            <summary>
            Representa un segmento definido por dos puntos bidimensionales. 
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Segment3D.Empty">
            <summary>
            Segmento vacío.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment3D.Swap">
            <summary>
            Intercambia los vectores.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment3D.Equals(Kriptok.Drawing.Algebra.Segment3D)">
            <summary>
            El segumento es igual, independientemente de la dirección.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment3D.GetLength">
            <summary>
            Obtiene la longitud del segmento.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment3D.Translate(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Traslada un segmento el vector indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment3D.GetDirectionVector">
            <summary>
            Obtiene un vector dirección de las mismas dimensiones del vector original,
            pero posicionado sobre el origen de coordenadas.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment3D.ToVolume">
            <summary>
            Crea un volumen en base al segmento.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment3D.XY">
            <summary>
            Obtiene el segmento bidimensional (X, Y) del segmento tridimencional.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment3D.ToLine">
            <summary>
            Obtiene la recta tridimensional que contiene al segmento.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Algebra.SphericalCoordinates">
            <summary>
            Funcionalidades asociadas a las coordenadas 
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.SphericalCoordinates.NewVector(System.Single,System.Single,System.Single)">
            <summary>
            Crea un vector de la magnitud indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.SphericalCoordinates.NewDirectionalVector(System.Single,System.Single)">
            <summary>
            Crea un vector en la dirección indicada.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Algebra.Segment2D">
            <summary>
            Representa un segmento definido por dos puntos bidimensionales. 
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Segment2D.Empty">
            <summary>
            Segmento vacío.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment2D.Swap">
            <summary>
            Intercambia los vectores.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment2D.Intersection(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la intersección entre dos segmentos definidos por pares
            de vectores de dos dimensiones.
            
            Puede devolver <see cref="!:null"/> de no intersectarse.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment2D.GetDirectionVector">
            <summary>
            Obtiene un vector dirección de las mismas dimensiones del vector original,
            pero posicionado sobre el origen de coordenadas.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment2D.Equals(Kriptok.Drawing.Algebra.Segment2D)">
            <summary>
            El segumento es igual, independientemente de la dirección.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment2D.GetLength">
            <summary>
            Obtiene la longitud del segmento.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment2D.ContainsAligned2(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si el vector contiene al vértice (ALINEADO CON EL VECTOR) indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment2D.ContainsAligned(Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Indica si el vector contiene al vértice (ALINEADO CON EL VECTOR) indicado por parámetro.
            </summary>        
            <param name="c">Vértice que se indica saber si está contenido.</param>
            <param name="distanceMargin">Distancia máxima a la que puede estar el 
            vértice del segmento (por cuestiones de presición).</param>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment2D.ToLine">
            <summary>
            Devuelve la recta por la que pasa el segmento.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment2D.Translate(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Traslada un segmento el vector indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment2D.IntersectsXAxis(System.Single@)">
            <summary>
            Indica si el segmento intersecta al eje de coordenadas X.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment2D.Rotate(System.Single,System.Single)">
            <summary>
            Rota un vector.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Segment2D.Intersection(Kriptok.Drawing.Algebra.Segment2D,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si hay una intersección entre el segmento y el rayo.
            </summary>
        </member>
        <member name="T:Kriptok.Drawing.Algebra.ClipLineResultEnum">
            <summary>
            Indica el resultado de una operación de "clippeado" de un segmento descripto por dos vértices
            contra alguno de los límites de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.ClipLineResultEnum.None">
            <summary>
            No se realizó ningún clip.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.ClipLineResultEnum.First">
            <summary>
            Se clippeó el primer vértice.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.ClipLineResultEnum.Second">
            <summary>
            Se clippeó el segundo vértice.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.ClipLineResultEnum.Both">
            <summary>
            Están ambos vértices fuera de la pantalla.
            </summary>
        </member>
        <member name="T:Kriptok.Drawing.Algebra.PolarVector">
            <summary>
            Estructura que representa un vector en coordenadas polares.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.PolarVector.ProjectX(System.Single,System.Single)">
            <summary>
            Obtiene la proyección de un vector en coordenadas polares sobre el eje X.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.PolarVector.ProjectY(System.Single,System.Single)">
            <summary>
            Obtiene la proyección de un vector en coordenadas polares sobre el eje Y.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.PolarVector.NewVector(System.Single,System.Single)">
            <summary>
            Crea un vector cartesiano de dos dimensiones en base a coordenadas polares.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.PolarVector.NewUnitVector(System.Single)">
            <summary>
            Crea un vector cartesiano de dos dimensiones en base a coordenadas polares.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.PolarVector.AngleAvg(System.Single,System.Single)">
            <summary>
            Obtiene el ángulo intermedio entre dos otros ángulos.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Algebra.Line2D">
            <summary>
            Representa una línea bidimensional definida por un vector dirección y un punto.
            </summary>    
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Line2D.Empty">
            <summary>
            Una línea vacía sin dirección.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Line2D.#ctor(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Devuelve una nueva instancia de, tipo <see cref="T:Kriptok.Drawing.Algebra.Line2D"/>.
            </summary>        
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Line2D.Direction">
            <summary>
            Dirección de la recta.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Line2D.Point">
            <summary>
            Punto aleatorio por el que pasa la recta.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Line2D.Intersection(Kriptok.Drawing.Algebra.Line2D,Kriptok.Drawing.Algebra.Line2D)">
            <summary>
            Obtiene la intersección entre dos rectas.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Line2D.IntersectionLineVector(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Obtiene la intersección entre una recta definida por dos puntos
            y una recta definida por un punto que pasa por el (0, 0)
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Line2D.AreParallel(Kriptok.Drawing.Algebra.Line2D,Kriptok.Drawing.Algebra.Line2D)">
            <summary>
            Indica si dos rectas son paralelas.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Line2D.ArePerpendicular(Kriptok.Drawing.Algebra.Line2D,Kriptok.Drawing.Algebra.Line2D)">
            <summary>
            Indica si dos rectas son perpendiculares.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Line2D.OrthogonalProjection(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Line2D)">
            <summary>
            Proyecta ortogonalmente un punto sobre la línea.
            
            Básicamente lo que hace es encontrar la interscción entre una recta,
            y otra recta perpendicular que pasa por el punto indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.UsingMatrix(System.Action{System.Drawing.Drawing2D.Matrix})">
            <summary>
            Permite ejecutar una porción de código transformando la
            <see cref="T:Kriptok.Drawing.Algebra.Matrix2x3F"/> en una <see cref="T:System.Drawing.Drawing2D.Matrix"/> y liberándola después.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.UsingMatrix``1(System.Func{System.Drawing.Drawing2D.Matrix,``0})">
            <summary>
            Permite ejecutar una porción de código transformando la
            <see cref="T:Kriptok.Drawing.Algebra.Matrix2x3F"/> en una <see cref="T:System.Drawing.Drawing2D.Matrix"/> y liberándola después.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply(System.Single,System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply00">
            <summary>
            Este método devuelve un punto que corresponde a la 
            multiplicación de la matriz por el punto (0f, 0f).
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.MultiplyX0(System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply0Y(System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply00_X">
            <summary>
            Este método devuelve un punto que corresponde a la 
            multiplicación de la matriz por el punto (0f, 0f).
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.MultiplyX0_X(System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply0Y_X(System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.MultiplyXY_X(System.Single,System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply_X0_XY(System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply_XY_Y(System.Single,System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix2x3F.Multiply(Kriptok.Drawing.Algebra.Matrix2x3F)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Algebra.Matrix3x4F">
            <summary>
            Matriz de 3 x 4 dimensiones.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Matrix3x4F.Identity">
            <summary>
            Matriz identidad.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Matrix3x4F.RotateYZ">
            <summary>
            Matriz de rotación sobre los ejes YZ.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Matrix3x4F.RotateY_Z">
            <summary>
            Matriz de rotación sobre los ejes Y, y-Z.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Matrix3x4F.Rotate_Y_X">
            <summary>
            Matriz de rotación sobre los ejes YZ.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_XZ_XZ(System.Single,System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_XZ_X(System.Single,System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply(System.Single,System.Single,System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_XYZ_ZX(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_X0Z_ZX(System.Single,System.Single)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_XYZ_Z(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply(Kriptok.Drawing.Algebra.Matrix3x4F)">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_100">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_010">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_000">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_001">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.Multiply_100_Y">
            <summary>
            Este método devuelve un punto que corresponde a la multiplicación de la matriz por el punto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.GetFastFovInverse">
            <summary>
            Obtiene la inversa de la matriz pero sin tomar en cuenta escalamiento.
            
            Es un algoritmo rápido, pero sólo funciona para la cámara del entorno 3D.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Matrix3x4F.GetFullInverse">
            <summary>
            Obtiene la inversa de la matriz, con un algoritmo que toma en cuenta escalamiento.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Algebra.Plane">
            <summary>
            Plano tridimensional.
            
            http://biospud.blogspot.com/2020/05/how-to-draw-infinite-planes-in-computer.html
            http://biospud.blogspot.com/2020/05/infinite-plane-rendering-2-texturing.html
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Plane.invertedPointNormal">
            <summary>
            Valor precalculado para optimizar cálculos.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Plane.Normal">
            <summary>
            Normal del plano.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Plane.Point">
            <summary>
            Vértice de referencia del plano.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.IntersectRay(Kriptok.Drawing.Algebra.Ray3D,Kriptok.Drawing.Algebra.Vector3F@)">
            <summary>
            Intersecta el plano con el rayo indicado por parámetro, indicando el resultado de la intersección.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.IntersectLine(Kriptok.Drawing.Algebra.Line3D)">
            <summary>
            Intersecta el plano con una línea infinita tridimensional.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.IntersectLine(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Intersecta el plano con una línea infinita tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.IntersectLine_XY(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Intersecta el plano con una línea infinita tridimensional, pero sólo devuelve las coordenadas XY.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.IntersectLine_Z(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Intersecta el plano con una línea infinita tridimensional, pero sólo devuelve la coordenada Z.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.IntersectPoint(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Calcula la intersección entre un vector determinado que pasa por el punto (0, 0, 0) y el plano.        
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.IntersectPoint(System.Single,System.Single,System.Single)">
            <summary>
            Calcula la intersección entre un vector determinado que pasa por el punto (0, 0, 0) y el plano.        
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.IntersectPoint_XY(System.Single,System.Single,System.Single)">
            <summary>
            Calcula la intersección entre un vector determinado que pasa por el punto (0, 0, 0) y el plano.        
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.GetZ(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Este método no funciona con planos que sean verticales. Es decir, cuya normal en Z sea cero.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.GetZ(System.Single,System.Single)">
            <summary>
            Este método no funciona con planos que sean verticales. Es decir, cuya normal en Z sea cero.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.IntersectionSegmentToZPlane(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F,System.Single)">
            <summary>
            Obtiene la coordenada X de la intersección entre un segmento definido por dos vértices tridimencionales, 
            y el plano Z = z (considerando el plano Z = z, como un plano perpendicular a la cámara).
            
            Siempre y cuando el valor de Z sea mayor o igual que <see cref="F:Kriptok.Drawing.Algebra.Vector3F.InvalidZ"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.IntersectionLineToZPlane(System.Single,Kriptok.Drawing.Algebra.Line3D)">
            <summary>
            Obtiene el vértice de intersección entre el plano Z = z, y el rayo indicado por parámetro.
            
            Si no hay colisión, probablemente devuelva un error.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Plane.IntersectionLineToZPlane(System.Single,Kriptok.Drawing.Algebra.Line3D,Kriptok.Drawing.Algebra.Vector3F@)">
            <summary>
            Obtiene el vértice de intersección entre el plano Z = z, y la línea indicada por parámetro.        
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Algebra.Vector2F">
            <summary>
            Estructura vectorial de dos dimensiones.
            </summary>    
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.GetDistance(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Calcula la distancia entre dos vectores.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Extend(System.Single)">
            <summary>
            Transforma un vector bidimensional en uno tridimencional.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.PolarPlus(System.Single,System.Single)">
            <summary>
            Suma un vector al actual en coordenadas polares.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Minus(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Resta un vector del otro, devolviendo la diferencia.
            </summary>       
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Minus(System.Single,System.Single)">
            <summary>
            Resta un vector del otro, devolviendo la diferencia.
            </summary>       
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Minus(Kriptok.Drawing.Vector2I)">
            <summary>
            Resta un vector del otro, devolviendo la diferencia.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Scale(System.Single)">
            <summary>
            Escala el vector por el multiplicador, y devuelve uno nuevo con el resultado.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Scale(System.Single,System.Single)">
            <summary>
            Multiplica el vector vertical y horizontalmente.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Plus(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Suma un vector al actual, devolviendo el vector resultante.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Average(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene el promedio de la ubicación entre dos vectores.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Average(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene el promedio de la ubicación entre tres vectores.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Average(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene el promedio de la ubicación entre cuatro vectores.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Avg(Kriptok.Drawing.Algebra.Vector2F[])">
            <summary>
            Obtiene el promedio de la ubicación de un arreglo de vértices.
            </summary>  
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Clip0X(System.Single,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Clippea contra los límites (X = 0) y (X = maxX) el vector indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.ClipX(Kriptok.Drawing.Bound,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Clippea contra los límites X = 0 y X = region.Width el vector indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.ClipX(System.Single,System.Single,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Clippea contra los límites X = 0 y X = region.Width el vector indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Rotate(System.Single)">
            <summary>
            Rota un vector el ángulo indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Rotate(System.Single,System.Single)">
            <summary>
            Rota un vector sobre un ángulo definido por el seno y el coseno indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Rotate_Y(System.Single,System.Single)">
            <summary>
            Rota un vector sobre un ángulo definido por el seno y el coseno indicados por parámetro.
            Devuelve sólo la coordenada Y, por cuestiones de performance.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Inverse">
            <summary>
            Devuelve el vector con todos los valores en negativo.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Normalized">
            <summary>
            Normaliza el vector, y devuelve el vector normalizado.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.TriangleArea(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Calcula el área interior de un triángulo dado por tres <see cref="T:System.Drawing.PointF"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.TriangleAreaX2(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Calcula el doble del área interior de un triángulo dado por tres <see cref="T:System.Drawing.PointF"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.GetPerpendicularCounterClockwise">
            <summary>
            Obtiene el vector perpendicular en dirección de rotación contraria a las agujas del reloj.
            
            Pero, tomando como ejes de coordenadas el sistema cartesiano, con X hacia la derecha
            e Y hacia arriba.
            
                              Y  |            (x, y) inicial.
                 (-y, x)         |           /
                      \          |         /
                        \        |       /
                          \      |     /
                            \    |   / 
                              \  | /
            ---------------------+---------------------------------------------->
                                 |                                      X        
                                 |
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.GetAngle">
            <summary>
            Obtiene el ángulo del vector.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.GetAngleCos">
            <summary>
            Obtiene el coseno del ángulo del vector.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.GetNorm">
            <summary>
            Obtiene la norma del vector.
            </summary>   
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.Project(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            https://gamedev.stackexchange.com/questions/70252/how-can-i-project-a-vector-on-another-vector
            https://stackoverflow.com/questions/26958198/vector-projection-rejection-in-c
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.AngleBetween(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene el ángulo entre dos vectores.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.SortClockwise(Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Ordena dos vectores en sentido de las agujas del reloj (pero en el plano X, Y),
            si se considera Y "hacia arriba". De lo contrario, como funciona el sistema de coordenadas
            del monitor, en que Y va "hacia abajo", sería contrario a las agujas del reloj.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.BiggerAngle(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si un vector tiene un ángulo mayor al otro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.ArePerpendicular(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si dos vectores son perpendiculares.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.AreParallel(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si los vectores son paralelos.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector2F.ProjectsOn(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si el vector se proyecta sobre el indicado por parámetro.        
            
             |\                                      /|
             | \                                    / |
             |  \                                  /  |
             |   \                                /   |
             |    \                              /    |
             |     \                            /     |
             |      +------------------->      +------+------------>
                No                               Sí
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Algebra.Vector3F">
            <summary>
            Vector tridimensional.
            </summary>    
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Vector3F.InvalidZ">
            <summary>
            Mínima distancia a la cámara a la que se pueden renderizar polígonos 
            en entornos tridimencionales.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Algebra.Vector3F.U001">
            <summary>
            Vector unitario vertical.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.Algebra.Vector3F"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.#ctor(Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.Algebra.Vector3F"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.Algebra.Vector3F"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.Plus(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Agrega al vector la cantidad indicada en las coordenadas X e Y del vector parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.Plus(Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Agrega al vector la cantidad indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.Plus(System.Single,System.Single,System.Single)">
            <summary>
            Suma un vector coordenada a coordenada.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.Minus(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Resta el vector indicado por parámetro al actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.Minus(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Resta el vector indicado por parámetro al actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.Minus(System.Single,System.Single,System.Single)">
            <summary>
            Resta el vector indicado por parámetro al actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.Normalized">
            <summary>
            Normaliza el vector, y devuelve el vector normalizado.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.Normalized(System.Single)">
            <summary>
            Normaliza el vector, y devuelve el vector normalizado, pero permite especificar una longitud
            por la cual multiplicar el vector calculado (por cuestiones de performance).
            </summary>  
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.GetNorm">
            <summary>
            Obtiene la norma del vector.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.DistanceTo(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Calcula la distancia desde este vector hasta el indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.ClipZ(Kriptok.Drawing.Algebra.Vector3F@,Kriptok.Drawing.Algebra.Vector3F@)">
            <summary>
            Clippea un segmento definido por dos puntos contra el plano Z = <see cref="F:Kriptok.Drawing.Algebra.Vector3F.InvalidZ"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.PlusZ(System.Single)">
            <summary>
            Suma una determinada cantidad en la coordenada Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.Equals(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Compara dos vectores e indica si los dos tienen exactamente las mismas coordenadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.IsVisible(Kriptok.Drawing.Algebra.Vector3F@,Kriptok.Drawing.Algebra.Vector3F@)">
            <summary>
            Este método indica si un segmento conformado por los dos puntos indicados por parámetor
            es visible en la pantalla.
            
            En caso de que una porción sea visible, se modifican los puntos para sólo 
            devolver esa porción visible.
            </summary>       
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.Inverse">
            <summary>
            Devuelve el vector con todos los valores en negativo.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Algebra.Vector3F.Cross(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Realiza un producto cartesiano entre dos vectores.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Shapes.ContainerTriangle">
            <summary>
            Representa un triángulo bidimensional, para validaciones de "contención de puntos".
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Shapes.ContainerTriangle.IsInside(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,System.Single,System.Single)">
            <summary>        
            https://stackoverflow.com/questions/2049582/how-to-determine-if-a-point-is-in-a-2d-triangle
            </summary>
        </member>
        <member name="P:Kriptok.Drawing.Shapes.Cilinder.Location2D">
            <summary>
            Centro de la esfera.
            </summary>
        </member>
        <member name="P:Kriptok.Drawing.Shapes.Cilinder.Radius">
            <summary>
            Radio de la esfera.
            </summary>
        </member>
        <member name="P:Kriptok.Drawing.Shapes.Cilinder.Height">
            <summary>
            Altura del cilindro.
            </summary>
        </member>
        <member name="P:Kriptok.Drawing.Shapes.Cilinder.MinZ">
            <summary>
            Altura donde empieza el cilindro.
            </summary>
        </member>
        <member name="P:Kriptok.Drawing.Shapes.Cilinder.MaxZ">
            <summary>
            Altura donde termina el cilindro.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Cilinder.Contains(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Indica si la esfera contiene la coordenada indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Cilinder.ToVolume">
            <summary>
            Obtiene un volumen alineado a los ejes que ocupa el cilindro,
            </summary>        
        </member>
        <member name="F:Kriptok.Drawing.Shapes.Circle.Location">
            <summary>
            Ubicación del círculo.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Shapes.Circle.Radius">
            <summary>
            Radio del círculo.
            </summary>
        </member>
        <member name="P:Kriptok.Drawing.Shapes.Circle.Diameter">
            <summary>
            Obtiene el diámetro del círculo.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Circle.Overlaps(Kriptok.Drawing.Shapes.Circle,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si hay una superposición entre un círculo y un segmento.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Circle.Intersection(Kriptok.Drawing.Shapes.Circle,Kriptok.Drawing.Algebra.Line2D,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Indica si hay una intersección entre una recta y el círculo. Y en caso de encontrarlo,
            lo devuelve por parámetro de salida.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Circle.Intersection(Kriptok.Drawing.Shapes.Circle,Kriptok.Drawing.Algebra.Segment2D,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Indica si hay una intersección entre un segmento y el círculo. Y en caso de encontrarlo,
            lo devuelve por parámetro de salida.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Circle.DiffractionIntersection(Kriptok.Drawing.Shapes.Circle,Kriptok.Drawing.Algebra.Segment2D,Kriptok.Drawing.Algebra.Segment2D@)">
            <summary>
            Calcula la intersección entre un segmento y un circulo, partiendo
            el segmento en dos, y reflectándolo sobre el perímetro del círculo.
            </summary>        
        </member>
        <member name="F:Kriptok.Drawing.Shapes.Sphere.Location">
            <summary>
            Centro de la esfera.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Shapes.Sphere.Radius">
            <summary>
            Radio de la esfera.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Sphere.Contains(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Indica si la esfera contiene la coordenada indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Sphere.Contains(System.Single,System.Single,System.Single)">
            <summary>
            Indica si la esfera contiene la coordenada indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Sphere.CollidesWith(Kriptok.Drawing.Shapes.Sphere)">
            <summary>
            Indica si la esfera colisiona con la otra.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Sphere.GetVolume">
            <summary>
            Obtiene el volumen de intersección tridimensional de la esfera.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Sphere.Translate(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene una esfera trasladada tridimencionalmente según indica el vector.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.Shapes.Volume">
            <summary>
            Representa un volumen tridimencional alineado a los ejes.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Shapes.Volume.Invalid">
            <summary>
            Volumen vacío para inicialización.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.#ctor(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Crea un volumen en base a dos vértices.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.Contains(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Indica si los límites contienen el punto indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.Contains(System.Single,System.Single,System.Single)">
            <summary>
            Indica si los límites sobre contienen el punto indicado.
            </summary>     
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.Overlaps(Kriptok.Drawing.Shapes.Volume)">
            <summary>
            Verifica si el volumen se superpone con el indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.OnLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Ubica el volumen en la posición indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.ZXY">
            <summary>
            Traspone las coordenadas del volumen.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.YZX">
            <summary>
            Traspone las coordenadas del volumen.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.Scale(System.Single)">
            <summary>
            Escala el volumen pero lo mantiene en la misma posición.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.Scale(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Escala el volumen pero lo mantiene en la misma posición.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.ContainsAny(Kriptok.Entities.Collisions.Coll3D.BoundingBox3D)">
            <summary>
            Indica si el volumen contiene alguno de los vértices que componen la "bounding-box"
            indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.Extend(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Extiende los límites de los bordes tridimencionales para incluir
            el vértice indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.GetBoxVectors">
            <summary>
            Obtiene unalista de vectores que componen la caja tridimensional.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.GetBoxSegments">
            <summary>
            Obtiene unalista de vectores que componen la caja tridimensional.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Shapes.Volume.Transform(Kriptok.Drawing.Algebra.Matrix3x4F)">
            <summary>
            Aplica una transformación a los vértices de la figura para luego
            retornar un nuevo volumen.
            </summary>        
        </member>
        <member name="P:Kriptok.Drawing.PaletteSwap.Count">
            <summary>
            Cantidad de rotaciones.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.BoundF.Min">
            <summary>
            Mínimo valor del límite.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.BoundF.Max">
            <summary>
            Máximo valor del límite.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.BoundF.Overlaps(Kriptok.Drawing.Bound)">
            <summary>
            Indica si los "límites" se superponen.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.BoundF.Overlaps(Kriptok.Drawing.BoundF)">
            <summary>
            Indica si los "límites" se superponen.
            </summary>        
        </member>
        <member name="P:Kriptok.Drawing.BoundF.Length">
            <summary>
            Longitud total del límite.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.BoundF.Contains(System.Single)">
            <summary>
            Indica si contiene un valor.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.BoundF.Clamp(System.Single,System.Single)">
            <summary>
            Recorta la región representada por el "límite" a los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.BoundF.Extend(Kriptok.Drawing.BoundF)">
            <summary>
            Extiende el límite actual para incluir el indicado por parámtro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.BoundF.Build(System.Single,System.Single)">
            <summary>
            Construye un límite en base a los valores indicados.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.FastBitmap8">
            <summary>
            Imagen de 256 colores.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap8.Sample(System.UInt16,System.UInt16)">
            <summary>
            Obtiene el índice del color que se encuentra en el pixel indicado por parámetro.
            
            Este método NO VALIDA que "x" e "y" se encuentren dentro de los límites de la imagen.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap8.Sample(System.Int32,System.Int32,System.Byte)">
            <summary>
            Obtiene el índice del color que se encuentra en el pixel indicado por parámetro.
            
            Si las coordenadas se encuentran fuera de los límites del mapa, devuelve el valor por default
            indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap8.SavePng(System.String)">
            <summary>
            Guarda la imagen como un archivo "png".
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap8.Plot(System.Int32,System.Int32,System.Byte)">
            <summary>
            Establece un punto del mapa de un color determinado.
            </summary>
        </member>
        <member name="T:Kriptok.Drawing.IndexedBitmapBuilder">
            <summary>
            Constructor de bitmaps de 256 colores.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.#ctor(System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.IndexedBitmapBuilder"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.#ctor(System.Int32,System.Int32,System.Drawing.Color[])">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.IndexedBitmapBuilder"/>
            utilizando la paleta indicada por parámetro.
            </summary>        
        </member>
        <member name="P:Kriptok.Drawing.IndexedBitmapBuilder.Item(System.Int32,System.Int32)">
            <summary>
            Obtiene o establece el valor del pixel en la ubicación indicada por parámetro.
            </summary>        
        </member>
        <member name="P:Kriptok.Drawing.IndexedBitmapBuilder.Item(System.Int32)">
            <summary>
            Obtiene o establece el valor del pixel en la ubicación indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.GetBitmap">
            <summary>
            Genera una imagen con los datos cargados.
            </summary>        
        </member>
        <member name="P:Kriptok.Drawing.IndexedBitmapBuilder.Width">
            <summary>
            Obtiene el ancho del mapa de bits a generar.
            </summary>
        </member>
        <member name="P:Kriptok.Drawing.IndexedBitmapBuilder.Height">
            <summary>
            Obtiene la altura del mapa de bits a generar.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.GetBytes">
            <summary>
            Obtiene los bytes del mapa de bits.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.SetPalette(System.Byte,System.Drawing.Color)">
            <summary>
            Establece un color de la paleta.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.GetWidth(System.Int32)">
            <summary>
            Obtiene el ancho real (ceiling a múltiplo de 4) de los bitmap de 8 bits.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.Blit(Kriptok.Drawing.IndexedBitmapBuilder.IndexedBitmap,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Copia un mapa de bits indexado al mapa de bits actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.Blit(Kriptok.Drawing.IndexedBitmapBuilder.IndexedBitmap,System.Int32,System.Int32)">
            <summary>
            Copia un mapa de bits indexado al mapa de bits actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.Clear">
            <summary>
            Limpia el mapa de bits.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.FlipVertically">
            <summary>
            Invierte verticalmente la imagen generada línea por línea.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.LoadFile(System.String)">
            <summary>
            Carga un archivo de mapa de bits de 256 colores.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.ReplaceColor(System.Byte,System.Byte)">
            <summary>
            Reemplaza un color de la imagen por otro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.SetPalette(System.Drawing.Color[])">
            <summary>
            Establece la paleta de 256 colores al mapa de bits.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.IndexedBitmapBuilder.IndexedBitmap">
            <summary>
            Representa un bitmap indexado.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.IndexedBitmap.GetBounds">
            <summary>
            Obtiene el rectángulo que realmente utiliza la imagen.
            </summary>            
        </member>
        <member name="M:Kriptok.Drawing.IndexedBitmapBuilder.IndexedBitmap.GetCenteredBounds(System.Drawing.Point)">
            <summary>
            Obtiene el rectángulo que realmente utiliza la imagen.
            </summary>            
        </member>
        <member name="T:Kriptok.Drawing.GrayScaleBitmapBuilder">
            <summary>
            Constructor de bitmaps de 256 colores en escala de grises.
            </summary>
        </member>
        <member name="T:Kriptok.Drawing.Hsv">
            <summary>
            Representa un color en formato HSB.
            
            https://es.wikipedia.org/wiki/Modelo_de_color_HSV
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Hsv.H">
            <summary>
            Gama de color.
            Valor entre 0f y 360f.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Hsv.S">
            <summary>
            Saturación.
            Valor entre 0f y 1f.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Hsv.V">
            <summary>
            Valor. 
            Valor entre 0f y 1f.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Hsv.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la estructura <see cref="T:Kriptok.Drawing.Hsv"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Hsv.#ctor(System.Drawing.Color)">
            <summary>
            Devuelve una nueva instancia de la estructura <see cref="T:Kriptok.Drawing.Hsv"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Bound.Clamp(System.Int32,System.Int32)">
            <summary>
            Recorta la región representada por el "límite" a los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Bound.Clamp(Kriptok.Drawing.Bound)">
            <summary>
            Recorta la región representada por el "límite" a los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Bound.IsEmpty">
            <summary>
            Indica si el límite no tiene longitud.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Bound.Overlaps(Kriptok.Drawing.Bound)">
            <summary>
            Indica si los "límites" se superponen.
            </summary>        
        </member>
        <member name="F:Kriptok.Drawing.BoundF2.Invalid">
            <summary>
            Declara un <see cref="T:Kriptok.Drawing.BoundF2"/> de tamaños inválidos. 
            Cualquier bound válido, por defecto es mayor que este bound.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.#ctor(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Drawing.BoundF2"/>, en base al triángulo descripto.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Intersects(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si el rectángulo formado por los vértices indicados por parámetro se intersecta con
            el rectángulo actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Intersects(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si el rectángulo formado por los vértices indicados por parámetro se intersecta con
            el rectángulo actual.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Intersects(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si el rectángulo formado por los vértices indicados por parámetro se intersecta con
            el rectángulo actual.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Intersects(System.Collections.Generic.IEnumerable{Kriptok.Drawing.Algebra.Vector2F})">
            <summary>
            Indica si el rectángulo formado por los vértices indicados por parámetro se intersecta con
            el rectángulo actual.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Intersects(Kriptok.Drawing.BoundF2)">
            <summary>
            Indica si el rectángulo formado por los vértices indicados por parámetro se intersecta con
            el rectángulo actual.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Intersects(System.Drawing.RectangleF)">
            <summary>
            Indica si el rectángulo formado por los vértices indicados por parámetro se intersecta con
            el rectángulo actual.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.BoundX">
            <summary>
            Obtiene los límites en el eje Y.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Extend(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Extiende los límites actuales para incorporar los nuevos dos vértices indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Extend(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Extiende los límites actuales para incorporar los nuevos dos vértices indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.BoundF2.Extend(Kriptok.Drawing.BoundF2)">
            <summary>
            Extiende los límites actuales para incorporar la nueva región.
            </summary>
        </member>
        <member name="T:Kriptok.Drawing.Bound2">
            <summary>
            Representa un area rectangular definida por sus límites.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Bound2.Invalid">
            <summary>
            Declara un <see cref="T:Kriptok.Drawing.Bound2"/> de tamaños inválidos. 
            Cualquier bound válido, por defecto es mayor que este bound.
            </summary>
        </member>
        <member name="T:Kriptok.Drawing.DirectBitmap">
            <summary>
            https://stackoverflow.com/questions/24701703/c-sharp-faster-alternatives-to-setpixel-and-getpixel-for-bitmaps-for-windows-f
            
            Explicación de PrecalculatedAlpha.
            https://microsoft.github.io/Win2D/html/PremultipliedAlpha.htm
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.DirectBitmap.#ctor(System.Drawing.Size,System.Drawing.Imaging.PixelFormat)">
            <summary>
            Bitmap de lectura/escritura rápida.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.DirectBitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Establece el color de un pixel.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.DirectBitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
            <summary>
            Bitmap de lectura/escritura rápida.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.DirectBitmap.BlitRect(System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Dibuja un rectángulo sobre el fondo.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.DirectBitmap.Sample(System.Int32,System.Int32)">
            <summary>
            Devuelve el color que se encuentra en las coordenadas indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.DirectBitmap.BlitX0(Kriptok.Drawing.FastBitmap,System.Int32)">
            <summary>
            Copia la imagen indicada por parámetro en la posición X indicada, y en Y = 0.
            
            El alto del tile a renderizar no debe ser más alto que la imagend donde se está renderizando.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.DirectBitmap.Plot(System.Int32,System.Int32,System.UInt32)">
            <summary>
            Establece el color de un pixel. Sin validar límites.
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.FastBitmap">
            <summary>
            Esta clase equivale a la <see cref="T:System.Drawing.Bitmap"/> pero optimizada.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.FastBitmap.on">
            <summary>
            Objteo utilizado para lockear el sistema hasta liberar un recursos.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.FastBitmap.Width">
            <summary>
            Ancho de la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.FastBitmap.Height">
            <summary>
            Alto de la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.FastBitmap.Length">
            <summary>
            Longitud total del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.FastBitmap.data">
            <summary>
            Valores de los pixels de la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.FastBitmap.transparentColor">
            <summary>
            Color transparente, en caso de tenerlo.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.#ctor(System.Reflection.Assembly,System.String)">
            <summary>
            Obtiene una nueva instancia de la clase <see cref="T:Kriptok.Drawing.FastBitmap"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.#ctor(Kriptok.Common.Resource)">
            <summary>
            Obtiene una nueva instancia de la clase <see cref="T:Kriptok.Drawing.FastBitmap"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.#ctor(System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.FastBitmap"/> del tamaño indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.Load(System.Reflection.Assembly,System.String)">
            <summary>
            Carga un Bitmap en memoria y lo convierte en FastBitmap.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.Load(Kriptok.Common.Resource)">
            <summary>
            Carga un Bitmap en memoria y lo convierte en FastBitmap.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.CreateFrom(System.Drawing.Bitmap)">
            <summary>
            Crea un mapa de bits rápido en base a un mapa de bits común.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.CreateBySize(System.Int32,System.Int32,System.Nullable{System.Drawing.Color})">
            <summary>
            Crea un mapa de bits rápido en base a un tamaño indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.GetRawData">
            <summary>
            Devuelve una copita de los datos almacenados en la imagen.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.Clear">
            <summary>
            Limpia toda la imagen dejándola en el color 0x00000000.
            
            Este método no es equivalente a <see cref="M:Kriptok.Drawing.FastBitmap.Clear(System.Drawing.Color)"/> ya que al dejarlo en valores 0x0, 
            se puede hacer a bajo nivel.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.Clear(System.Drawing.Color)">
            <summary>
            Limpia toda la imagen dejándola en el color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.ToThumbnail">
            <summary>
            Transforma el <see cref="T:Kriptok.Drawing.FastBitmap"/> en un <see cref="T:System.Drawing.Bitmap"/> común
            sin transparencias, para ser utilizado en editores de mapas.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.ToBitmap">
            <summary>
            Transforma el <see cref="T:Kriptok.Drawing.FastBitmap"/> en un <see cref="T:System.Drawing.Bitmap"/> común.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.MemoryCopy(System.UInt32*)">
            <summary>
            Copia una porción de memoria hasta la posición indicada con la longitud indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.Sample(System.Int32,System.Int32)">
            <summary>
            Toma el valor de color de las coordenadas dadas, y lo devuelve.
            
            No realiza ninguna validación de dimensiones.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Establece un pixel del color indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.SetPixel(System.Int32,System.Int32,System.UInt32)">
            <summary>
            Establece un pixel del color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.BlitXY(Kriptok.Drawing.FastBitmap,System.Int32,System.Int32)">
            <summary>
            Copia la imagen indicada por parámetro en la posición indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.BlitX0(Kriptok.Drawing.FastBitmap,System.Int32)">
            <summary>
            Copia la imagen indicada por parámetro en la posición X indicada, y en Y = 0.
            
            El alto del tile a renderizar no debe ser más alto que la imagend donde se está renderizando.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.BlitImage(Kriptok.Drawing.FastBitmap,System.Int32,System.Int32)">
            <summary>
            Copia la imagen indicada por parámetro en la posición indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.BlitImageX0(Kriptok.Drawing.FastBitmap,System.Int32)">
            <summary>
            Copia la imagen indicada por parámetro en la posición X indicada, y en Y = 0.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.BlitTileOn(Kriptok.Drawing.FastBitmap,System.UInt32[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copia la imagen indicada por parámetro en la posición indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.BlitTileOnX0(Kriptok.Drawing.FastBitmap,System.UInt32[],System.Int32,System.Int32)">
            <summary>
            Copia la imagen indicada por parámetro en la posición X indicada, y en Y = 0.
            
            El alto del tile a renderizar no debe ser más alto que la imagend donde se está renderizando.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.RotateFlip(System.Drawing.RotateFlipType)">
            <summary>
            Rota o invierte el mapa de bits.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.ToBrush(Kriptok.Views.Shapes.Texts.WrapModeEnum)">
            <summary>
            Crea una texture brush en base a la imagen generada.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.GetRedSpectrum">
            <summary>
            Obtiene un arreglo con los valores del espectro rojo.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.GetGreenSpectrum">
            <summary>
            Obtiene un arreglo con los valores del espectro verde.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.GetBlueSpectrum">
            <summary>
            Obtiene un arreglo con los valores del espectro azul.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.SetPixels(System.UInt32[])">
            <summary>
            Copia todos los pixels al bitmap actual
            </summary>        
        </member>
        <member name="T:Kriptok.Drawing.FastBitmap.FastBitmapPow2_Y">
            <summary>
            Representa un mapa de bits cuyo ancho es potencia de 2.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmap.FastBitmapPow2_Y.Sample(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Drawing.FastBitmapExtensions">
            <summary>
            Funcionalidades extendidas de la clase <see cref="T:Kriptok.Drawing.FastBitmap"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.FastBitmapExtensions.GetPixel(Kriptok.Drawing.FastBitmap,System.Int32,System.Int32)">
            <summary>
            Obtiene el color del pixel de las coordenadas indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.FastBitmapExtensions.ReadPixels``1(Kriptok.Drawing.FastBitmap,System.Func{System.Int32,System.Int32,System.Drawing.Color,``0})">
            <summary>
            Permite transformar un bitmap en otra estructura, pixel por pixel.
            </summary>                
        </member>
        <member name="M:Kriptok.Drawing.Triangle2D.Intersects(Kriptok.Drawing.BoundF2)">
            <summary>
            Indica si el triángulo se intersecta con los límites indicados por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Triangle2D.Area(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            An utility function to calculate area of triangle formed by (x1, y1),   (x2, y2) and (x3, y3) 
            </summary>                
        </member>
        <member name="M:Kriptok.Drawing.Triangle2D.Area(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            An utility function to calculate area of triangle formed by (x1, y1),   (x2, y2) and (x3, y3) 
            </summary>                
        </member>
        <member name="M:Kriptok.Drawing.Triangle2D.IsInside(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            A function to check whether point P(x, y) lies inside the triangle formed by A(x1, y1), B(x2, y2) and C(x3, y3)
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Triangle2D.Contains(Kriptok.Drawing.Algebra.Vector2F,System.Int32)">
            <summary>
            Indica si el triángulo contiene el vector indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Triangle2D.GetArea">
            <summary>
            Obtiene el área del triángulo.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Triangle2D.Scale(System.Single)">
            <summary>
            Escala el tamaño del triángulo sobre su centro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Triangle2D.GetBounds">
            <summary>
            Obtiene los límites del triángulo.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Triangle2D.Overlaps(Kriptok.Drawing.Triangle2D,Kriptok.Drawing.Triangle2D)">
            <summary>
            Indica si hay superposición bidimencional de triángulos.
            
            Código generado con ChatGPT.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Triangle3D.ToTriangles(Kriptok.Regions.Context.Base.IRenderContext)">
            <summary>
            Obtiene todos los triángulos bidimensionales en los cuales se debe subdividir un triángulo
            tridimensional para ser renderizado dentro de los límites de la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Triangle3D.ToTriangles(Kriptok.Regions.Context.Base.IProjector)">
            <summary>
            Obtiene todos los triángulos bidimensionales en los cuales se debe subdividir un triángulo
            tridimensional clippeado contra el eje Z de la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Polygon.From(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Lee un <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> y analiza las figuras encontradas.
            Este metodo no triangula las caras superiores e inferiores.
            </summary>
            <param name="gp"></param>                
        </member>
        <member name="M:Kriptok.Drawing.Vertex2.Intersection(Kriptok.Drawing.Vertex2,Kriptok.Drawing.Vertex2,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la intersección entre un segmento definido por un par de vértices 
            de dos dimensiones, y un par de vectores de dos dimensiones.
            
            Puede devolver <see cref="!:null"/> de no intersectarse.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Vertex2.GetLocation2D">
            <summary>
            Obtiene la ubicación del vértice.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Vertex2.SetLocation(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Establece la ubicación del vértice.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.ColorTransform.Reset">
            <summary>
            Vuelve a poner en la matriz los valores por default.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.ColorTransform.RotateNormalize(System.Int32)">
            <summary>
            Rota la configuración de color actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.ColorTransform.RotateAverage(System.Int32)">
            <summary>
            Rota la configuración de color actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.ColorTransform.RotatedNormalizedIdentity(System.Int32)">
            <summary>
            Aplica una rotación de color a la matriz identidad y la devuelve.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.ColorVector.SetColor(System.UInt32)">
            <summary>
            Establece el color indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.ColorVector.Clear">
            <summary>
            Pone en cero todo el vector.
            </summary>
        </member>
        <member name="T:Kriptok.Drawing.Vector2I">
            <summary>
            Vector bidimensional con valores enteros.
            </summary>    
        </member>
        <member name="F:Kriptok.Drawing.Vector2I.Empty">
            <summary>
            Vector por default con coordenadas 0, 0.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Vector2I.X">
            <summary>
            Coordenada X.
            </summary>
        </member>
        <member name="F:Kriptok.Drawing.Vector2I.Y">
            <summary>
            Coordenada Y.
            </summary>
        </member>
        <member name="M:Kriptok.Drawing.Vector2I.#ctor(System.Drawing.Point)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.Vector2I"/>.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.Vector2I.#ctor(System.Drawing.Size)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.Vector2I"/>.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.Vector2I.#ctor(System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Drawing.Vector2I"/>.
            </summary>      
        </member>
        <member name="M:Kriptok.Drawing.Vector2I.ToString">
            <summary>
            No volver a poner el "#if DEBUG" para este método porque se utiliza en los editores de mapas.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Vector2I.Abs">
            <summary>
            Devuelve un nuevo vector con los valores absolutos de las coordenadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Vector2I.Equals(Kriptok.Drawing.Vector2I)">
            <summary>
            Indica si un vector indicado por parámetro tiene las mismas coordenadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Drawing.Vector2I.Clamp(System.Int32,System.Int32)">
            <summary>
            Clampea ambas coordenadas a los límites especificados.
            </summary>        
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll3D.Hitbox3DAACilinderBase.myCilinder">
            <summary>
            Segmento generado para evaluar colisiones.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll3D.Hitbox3DAACilinderBase.myCilinderVolume">
            <summary>
            Volumen alineado a los ejes del cilindro.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DAACilinderBase.GetCilinder">
            <summary>
            Deriva la confección del cilindro a clases derivadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DAACilinderBase.CheckToSphere(Kriptok.Drawing.Shapes.Sphere)">
            <summary>
            Colisión esfera/esfera.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DAACilinderBase.CheckToAACilinder(Kriptok.Drawing.Shapes.Cilinder,Kriptok.Drawing.Shapes.Volume)">
            <summary>
            Colisión cilindro a cilindro.
            
            No requiere validación a nivel volumétrico.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.IHitScanHitbox">
            <summary>
            Interfaz utilizada para la detección de colisiones de tipo Hit-Scan.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.IHitScanHitbox.GetLastEvaluatedSegment">
            <summary>
            Obtiene el último segmento tridimensional que se utilizó para evaluar colisiones.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.Hitbox3DPartitionedHitScanSegment">
            <summary>
            Caja de colisión de tipo "segmento" para entornos particionados.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.Hitbox3DFixedLengthHitScanSegment">
            <summary>
            Caja de colisión de tipo "segmento" de una longitud determinada.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll3D.Hitbox3DFixedLengthHitScanSegment.myVolume">
            <summary>
            Volumen necesario para colisiones tridimensionales.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll3D.Hitbox3DSegmentBase.mySegment">
            <summary>
            Segmento generado para evaluar colisiones.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll3D.Hitbox3DSegmentBase.mySegmentVolume">
            <summary>
            Volumen tridimensional que ocupa el segmento.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DSegmentBase.GetLastEvaluatedSegment">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DSegmentBase.GetCollisionSegment">
            <summary>
            Obtiene el segmento a colisionar.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DSegmentBase.CheckToSphere(Kriptok.Drawing.Shapes.Sphere)">
            <summary>
            Colisión esfera/segmento.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DSegmentBase.CheckToShape2(Kriptok.Entities.Collisions.Coll3D.Collision3DShape)">
            <summary>
            Resuelve la colisión con una figura rotada.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.BoundingBox3D">
            <summary>
            Caja de colisiones tridimensional.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.Collision3DShape">
            <summary>
            Datos utilizados para el cálculo de intersección de una figura 3D con rotación y escalamiento.
            </summary>    
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll3D.Collision3DShape.Volume">
            <summary>
            Volumen tridimensional de la figura.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll3D.Collision3DShape.Location">
            <summary>
            Ubicación tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll3D.Collision3DShape.Transform">
            <summary>
            Transformación (rotaciones y escalamientos) de la figura.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Collision3DShape.VolumeContains(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Indica si el volumen descripto por la figura contiene el vértice indicado por parámetro.
            Para esto debe realizar transformaciones de coordenadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Collision3DShape.DeTransformVector(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Transforma y devuelve el vértice indicado por parámetro al sistema de coordenadas del volumen.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Collision3DShape.TransformVolume(Kriptok.Drawing.Shapes.Volume)">
            <summary>
            Transforma un volumen utilizando la matriz de transformación de la figura.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase.GetCollision3DType">
            <summary>
            Obtiene el tipo de colisión para graficarla.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase.Collide(Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase)">
            <summary>
            Resuelve la colisión entre dos objetos, el propietario del hitbox, y el
            indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase.CheckToPoint(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Indica cómo resolver una colisión cuando la que es pasada por parámetro es
            un punto en el espacio tridimencional.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase.CheckToSphere(Kriptok.Drawing.Shapes.Sphere)">
            <summary>
            Indica cómo resolver una colisión cuando la que es pasada por parámetro es
            una esfera tridimencional.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase.CheckToVolume(Kriptok.Drawing.Shapes.Volume)">
            <summary>
            Indica cómo resolver una colisión cuando la que es pasada por parámetro es
            un volumen.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase.CheckToShape(Kriptok.Entities.Collisions.Coll3D.Collision3DShape)">
            <summary>
            Indica cómo resolver una colisión cuando se recibe una figura rotada y escalada.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase.CheckToSegment(Kriptok.Drawing.Algebra.Segment3D,Kriptok.Drawing.Shapes.Volume)">
            <summary>
            Indica cómo resolver una colisión cuando la que es pasada por parámetro es
            una segmento tridimencional.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DBase.CheckToAACilinder(Kriptok.Drawing.Shapes.Cilinder,Kriptok.Drawing.Shapes.Volume)">
            <summary>
            Resuelve la colisión entre un cilindro alineado a los ejes, y la caja de colisión.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.Hitbox3DObbs">
            <summary>
            Tipo de colisión por volumen, pero toma en cuenta las rotaciones aplicadas a la figura.
            Generando así una caja de colisión más estrecha y estricta.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll3D.Hitbox3DSphere.mySphere">
            <summary>
            Devuelve la esfera representada por la ubicación y radio del objeto.
            </summary>        
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll3D.Hitbox3DSphere.mySphereVolume">
            <summary>
            Volumen calculado de la esfera.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.Hitbox3DSphere.CheckToSphere(Kriptok.Drawing.Shapes.Sphere)">
            <summary>
            Colisión esfera/esfera.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.Hitbox3DObb">
            <summary>
            Tipo de colisión por volumen, pero toma en cuenta las rotaciones aplicadas a la figura.
            Generando así una caja de colisión más estrecha y estricta.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll3D.Hitbox3DObb.currentShape">
            <summary>
            Volumen calculado para este frame.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.Hitbox3DAAVolume">
            <summary>
            Tipo de colisión por volumen. Recomendada para figuras que ocupen todo el espacio del
            volumen y no tengan rotaciones.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll3D.Hitbox3DAAVolume.currentVolume">
            <summary>
            Volumen calculado para este frame.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.IBoundCollision">
            <summary>
            Esta interfaz indica que se puede evaluar una colisión en tres dimensiones, utilizando
            los límites de las figuras tridimencionales.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.IBoundCollision.GetCollisionVolume">
            <summary>
            Obtiene el volumen tridimencional de colisión.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll3D.IShapeCollision">
            <summary>
            Indica que se puede detectar colisiones como si fuera una figura tridimensional rotable y escalable.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll3D.IShapeCollision.GetCollisionShape">
            <summary>
            Obtiene la figura rotada y escalada para calcular colisiones.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Queries.IEntityCollisionQuery">
            <summary>
            Consulta que sólo evalúa colisión con un objeto en particular.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Queries.CollisionQueryEntity.to">
            <summary>
            Objeto específico con el cual se debe evaluar la colisión.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Queries.CollisionQueryEntity.GetCandidatesHashCode">
            <summary>
            No especifico nada, ya que la resolución 
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Queries.CollisionQueryEntity.Filter(System.Collections.Generic.IEnumerable{Kriptok.Entities.Base.EntityBase})">
            <summary>
            No filtro nada, ya que no es necesario, ya se tiene una referncia al objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Queries.CollisionQueryEntity.Resolve(Kriptok.Entities.Base.EntityBase[])">
            <summary>
            No uso los objetos indicados por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Queries.IMultipleCollisionQuery`1">
            <summary>
            Tipo de colisión que sólo retorna el primer resultado encontrado.
            </summary>    
        </member>
        <member name="M:Kriptok.Entities.Collisions.Queries.IMultipleCollisionQuery`1.ClosestCollision(`0@)">
            <summary>
            Busca la entidad más cercana con la que colisiona.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Queries.ISingleCollisionQuery`1">
            <summary>
            Tipo de colisión que sólo retorna el primer resultado encontrado.
            </summary>    
        </member>
        <member name="M:Kriptok.Entities.Collisions.Queries.ISingleCollisionQuery`1.OnCollision">
            <summary>
            Método utilizado para detectar la colisión del objeto.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Base.ICollisionQuery">
            <summary>
            Consulta de colisiones entre un objeto y un tipo de objetos.
            </summary>    
        </member>
        <member name="P:Kriptok.Entities.Collisions.Base.ICollisionQuery.RegionId">
            <summary>
            Id de región a la que pertenece el objeto que realiza la consulta.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.ICollisionQuery.GetCandidatesHashCode">
            <summary>
            Devuelve un código identificatorio para agrupar candidatos a colisiones.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.ICollisionQuery.GetCandidates(Kriptok.Entities.Base.EntityBase[])">
            <summary>
            Obtiene los candidatos para evaluar colisiones.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.ICollisionQuery.Clear">
            <summary>
            Limpia los resultados para que no se pasen de un frame al otro.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Collisions.Base.CollisionQueryBase`1.Result">
            <summary>
            Obtiene el resultado de la última colisión evaluada.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.CollisionQueryBase`1.Filter(System.Collections.Generic.IEnumerable{Kriptok.Entities.Base.EntityBase})">
            <summary>
            Filtra la lista de objetos con la cual se debe evaluar colisiones.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.CollisionQueryBase`1.Clear">
            <summary>
            Limpia los resultados.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Base.HitboxBase.owner">
            <summary>
            Obejto al que pertenece esta caja de colisión.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Collisions.Base.HitboxBase.OwnerId">
            <summary>
            Obtiene el identificador del objeto para que no se registren colisiones contra sí mismo.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Collisions.Base.HitboxBase.RegionId">
            <summary>
            Obtiene el Id de región del objeto, para sólo evaluar colisiones con objetos de la misma región.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.HitboxBase.IsAlive">
            <summary>
            Indica si el objeto propietario de esta caja de colisión está vivo.
            </summary>        
        </member>
        <member name="P:Kriptok.Entities.Collisions.Base.HitboxBase.Location">
            <summary>
            Obtiene la última ubicación del objeto para chequear la colisión.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.HitboxBase.GetCollisionsWith``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Obtiene una lista de objetos con los que colisiona este objeto.
            </summary>      
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.HitboxBase.GetCollisionWith``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Obtiene el primer objeto que encuentre que esté colisionando con este objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.HitboxBase.GetCollisionWith(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Indica si está colisionando con el objeto indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Base.HitboxBase.StartCollisionDetection">
            <summary>
            Permite ejecutar código antes de iniciar el análisis de intersección de cajas de colisión.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.GetCollisionsWith``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Médoto sobreescrito para agregar el llamado a <see cref="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.EndCollisionDetection"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.GetCollisionWith``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Médoto sobreescrito para agregar el llamado a <see cref="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.EndCollisionDetection"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.GetCollisionWith(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Indica si está colisionando con el objeto indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.GetLocation2D">
            <summary>
            Obtiene la ubicación bidimensional de la vista.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.EndCollisionDetection">
            <summary>
            Permite liberar los recursos utilizados para la detección de colisiones.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.Collide(Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase)">
            <summary>
            Resuelve la colisión entre dos objetos, el propietario del hitbox, y el
            indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.CheckToPixel(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Resuelve la colisión entre este tipo de caja de cólisión y un punto en el espacio bidimensional.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase.Dispose">
            <summary>
            Libera los recursos utilizados.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DCircle.matrix">
            <summary>
            Matriz de transformación para colisiones con vistas de GDI+, se genera sólo si es necesaria.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DCircle.polygon">
            <summary>
            Polígono para intersectar.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DCircle.rectangle">
            <summary>
            Rectángulo para intersectar.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DCircle.Kriptok#Entities#Collisions#Coll2D#ICircleCollisionContext#GetMatrix">
            <summary>
            Matriz de transformación para colisiones con vistas de GDI+, se genera sólo si es necesaria.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.Hitbox2DDoubleCheckBase">
            <summary>
            Caja de colisión que realiza la validación en dos etapas.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.Hitbox2DDoubleCheckBase.DoubleCheckContext">
            <summary>
            Contexto de intersección de regiones con dos chequeos.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DEllipse.SecondCheckEllipse.view">
            <summary>
            Vista a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DEllipse.SecondCheckEllipse.size">
            <summary>
            Tamaño actual del elpise a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DEllipse.SecondCheckEllipse.ellipse">
            <summary>
            Elipse utilizada para detectar colisiones.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DEllipse.SecondCheckEllipse.GetEllipse">
            <summary>
            Obtiene el elipse para renderizarlo.
            </summary>            
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.Hitbox2DPath.SecondCheckPath">
            <summary>
            Indica que la caja de colisión es un rectángulo.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.matrix">
            <summary>
            Matriz de transformación para colisiones con vistas de GDI+, se genera sólo si es necesaria.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.GetCollisionRectangle">
            <summary>
            Obtiene el rectángulo de colisión del la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.IsVisible(System.Drawing.Region,System.Drawing.Drawing2D.Matrix)">
            <summary>
            En principio sólo valida la visibilidad del rectángulo.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.IsVisible(System.Drawing.Region)">
            <summary>
            Indica si la figura es visible en la región indicada por parámetro.
            
            En principio, sólo se chequea el rectángulo que funciona como "Bounding-Box".
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.IsVisibleRectangle(System.Drawing.Region)">
            <summary>
            Indica si la "Bounding-Box" de la vista está visible en la región indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.GetMatrix">
            <summary>
            Obtiene o crea y devuelve la matriz de transformación de esta vista.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.GetBounds">
            <summary>
            Obtiene los límites (AABB) de la figura.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.RegionCollisionContext">
            <summary>
            Representa las propiedades de colisión de un objeto bidimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.RegionCollisionContext.rectangle">
            <summary>
            Rectángulo que envuelve el área de colisión.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.RegionCollisionContext.bounds">
            <summary>
            Límites calculados de la región de colisión.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Coll2D.Hitbox2DRectangle.DrawOn(System.Drawing.Graphics)">
            <summary>
            Dibuja el contorno de la caja de colisión.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.SecondCheckBase">
            <summary>
            Clase base para el segundo chequeo que se realiza con figuras más complejas que un rectángulo.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.SecondCheckNone">
            <summary>
            Indica que no debe realizar ningún segundo chequeo.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.SecondCheckRectangle">
            <summary>
            Indica que la caja de colisión es un rectángulo.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.SecondCheckSprite">
            <summary>
            Esta caja de colisión para sprites sólo deriva el comportamiento a la verdadera caja de colisión
            generada para ese sprite.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.SpriteSecondCheckNone">
            <summary>
            Indica que no debe realizar ningún segundo chequeo.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Coll2D.SpriteSecondCheckRectangle">
            <summary>
            Indica que la caja de colisión es un rectángulo.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Collision2DHelper">
            <summary>
            Agrupa todas las funcionalidades necesarias para chequear collisiones entre objetos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Collision2DHelper.Collide(Kriptok.Drawing.Shapes.Circle,System.Drawing.RectangleF)">
            <summary>
            Devuelve si las figuras indicadas por parámetro se superponen.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Collision2DHelper.SegmentCircle(Kriptok.Drawing.Algebra.Segment2D,Kriptok.Drawing.Shapes.Circle)">
            <summary>
            Obtiene el resultado de la intersección entre un círculo y un segmento bidimensional.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Collisions.Collision3DTypeEnum">
            <summary>
            Tipo de caja de colisión 3D. Utilizado para mostrar la caja de colisión gráficamente.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Collisions.Collision3DHelper">
            <summary>
            Agrupa todas las funcionalidades necesarias para chequear collisiones entre objetos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Collisions.Collision3DHelper.SphereVolumeCollision(Kriptok.Drawing.Shapes.Volume,Kriptok.Drawing.Shapes.Sphere)">
            <summary>
            Indica si hay una intersección entre un volumen y una esfera en tres dimensiones.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Collision3DHelper.GetEllipsoidVolume(Kriptok.Entities.Collisions.Coll3D.Collision3DShape,Kriptok.Drawing.Shapes.Sphere)">
            <summary>
            Transforma la esfera en un elipsoide para evaluar intersección con volumenes alineados a los ejes.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Collision3DHelper.EllipsoidVolumeCollision(Kriptok.Drawing.Shapes.Volume,Kriptok.Drawing.Shapes.Volume)">
            <summary>
            Indica si hay una intersección entre un volumen y un elipsoide de tres dimensiones definido por un volumen.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Collision3DHelper.ShapeVolumeCollision(Kriptok.Entities.Collisions.Coll3D.Collision3DShape,Kriptok.Drawing.Shapes.Volume,Kriptok.Drawing.Shapes.Volume,Kriptok.Drawing.Shapes.Volume)">
            <summary>
            Detecta la colisión entre una figura, y un volumen.
            </summary>
            <param name="shape">Figura rotada/escalada a colisionar.</param>
            <param name="volume">Volumen a colisionar.</param>
            <param name="shapeVolume">Volumen de la figura.</param>
            <param name="shapeCalculatedVolume">Volumen calculado de la figura.</param>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Collision3DHelper.CollisionShapeShape(Kriptok.Entities.Collisions.Coll3D.Collision3DShape,Kriptok.Entities.Collisions.Coll3D.Collision3DShape)">
            <summary>
            Detecta la intersección entre dos figuras, realizando varios cambios de coordenadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Collisions.Collision3DHelper.SegmentAACilinder(Kriptok.Drawing.Algebra.Segment3D,Kriptok.Drawing.Shapes.Cilinder)">
            <summary>
            Evalúa la colición entre un segmento y un cilindro vertical.
            </summary>        
        </member>
        <member name="F:Kriptok.Entities.Collisions.Collision2DTypeEnum.Point">
            <summary>
            Un único vertice en dos dimensiones.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Components.IndexedViewAnimation">
            <summary>
            Componente para realizar animaciones sobre vistas indexadas.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Components.IndexedViewAnimation.#ctor(System.Single,System.Int32[])">
            <summary>
            Inicializa una nueva instancia de <see cref="T:Kriptok.Entities.Components.IndexedViewAnimation"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Components.IndexedViewAnimation.#ctor(System.Single,System.Int32,System.Int32)">
            <summary>
            Inicializa una nueva instancia de <see cref="T:Kriptok.Entities.Components.IndexedViewAnimation"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Components.IndexedViewAnimation.Increment(System.Single,System.Int32@)">
            <summary>
            Incrementa la animación indicando el gráfico actual y si ya terminó la animación.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Components.IndexedViewAnimation.IncrementContinuously(System.Single,System.Int32@)">
            <summary>
            Incrementa la animación constantemente, repitiendo los frames cuando termina.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Components.IndexedViewAnimation.Restart">
            <summary>
            Reempieza la animación.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Components.IndexedViewAnimation.First">
            <summary>
            Devuelve el primer gráfico de la animación.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Initialization.EntityInitializationAudio">
            <summary>
            Funcionalidades de inicialización de entidades relacionadas al audio.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Initialization.EntityInitializationAudio.GetWaveHandler(System.String)">
            <summary>
            Obtiene una referencia a un reproductor del sonido indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Initialization.EntityInitializationAudio.GetWaveHandler(System.Reflection.Assembly,System.String)">
            <summary>
            Obtiene una referencia a un reproductor del sonido indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Initialization.EntityInitializationAudio.GetWaveHandler(Kriptok.Common.Resource)">
            <summary>
            Obtiene una referencia a un reproductor del sonido indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Initialization.EntityInitializationAudio.GetSoundHandler(System.String)">
            <summary>
            Obtiene una referencia a un reproductor del sonido indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Initialization.EntityInitializationAudio.GetSoundHandler(System.Reflection.Assembly,System.String)">
            <summary>
            Obtiene una referencia a un reproductor del sonido indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Initialization.EntityInitializationAudio.GetSoundHandler(Kriptok.Common.Resource)">
            <summary>
            Obtiene una referencia a un reproductor del sonido indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Initialization.EntityInitializationAudio.GetMenuChangeSound">
            <summary>
            Obtiene un controlador de un sonido por defecto para opciones del juego.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Initialization.EntityInitializationAudio.GetMenuOKSound">
            <summary>
            Obtiene un controlador de un sonido por defecto para aceptación de una opción del juego.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Base.ProcessStartHandler">
            <summary>
            Inicializador de procesos asincrónicos.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Base.EntityStartHandler">
            <summary>
            Este objeto permite customizar propiedades del objeto que sólo
            son posibles de establecer al iniciar.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityStartHandler.obj">
            <summary>
            Objeto que se va a inicializar.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityStartHandler.Region">
            <summary>
            Región de renderización del objeto.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityStartHandler.Audio">
            <summary>
            Funcionalidades de inicialización relacionadas al audio.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.EntityStartHandler.RegionSize">
            <summary>
            Obtiene el tamaño de la región de pantalla a la que pertenece el objeto.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.EntityStartHandler.CollisionType">
            <summary>
            Establece el tipo de caja de colisión 2D a aplicar para este objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.SetCollision2DEllipse">
            <summary>
            Establece un tipo de caja de colisión 2D que se comporta como un ellipse del
            tamaño de la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.SetCustomHitbox2D(System.Action{System.Drawing.Drawing2D.GraphicsPath})">
            <summary>
            Establece una caja de colisión custom para este objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.GetCollision2D``1">
            <summary>
            Le indica al sistema que debe detectar colisiones entre este objeto, y un 
            objeto específico.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.GetCollision2D(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Le indica al sistema que debe detectar colisiones entre este objeto, y el tipo
            de objetos indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.GetCollisions2D``1">
            <summary>
            Le indica al sistema que debe detectar colisiones entre este objeto, múltiples
            instancias de otro tipo de objetos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.GetCollision3D``1">
            <summary>
            Le indica al sistema que debe detectar colisiones entre este objeto, y el tipo
            de objetos indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.GetCollision3D(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Le indica al sistema que debe detectar colisiones entre este objeto, y un
            objeto en particular.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.GetCollisions3D``1">
            <summary>
            Le indica al sistema que debe detectar colisiones entre este objeto, múltiples
            instancias de otro tipo de objetos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.SetCollision3DVertex">
            <summary>
            Establece que el objeto colisionará sólo como un punto en el espacio.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.SetCollision3DSphere">
            <summary>
            Establece una caja de colisión esférica alrededor de la ubicación del objeto.
            
            El radio de la esfera es el radio del objeto.
            
            Si el radio es 0, funciona igual que <see cref="M:Kriptok.Entities.Base.EntityStartHandler.SetCollision3DVertex"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.SetCollision3DViewAABB">
            <summary>
            Establece el tipo de colisión "Axis Aligned Bounding Boxes" para este objeto.
            
            El volumen de colisión está definido por la vista que lo representa.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.SetCollision3DViewOBB">
            <summary>
            Indica un tipo de caja de colisión que rota y se transforma igual que la entidad.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.SetCollision3DMultipleObb(Kriptok.Drawing.Shapes.Volume[])">
            <summary>
            Crea un tipo de caja de colisión basado en múltiples volúmenes.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.GetOutOfScreenQuery">
            <summary>
            Obtiene una consulta que evalúa si el objeto ya no se encuentra en la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.GetMouseScrollLocationQuery">
            <summary>
            Obtiene una consulta que permite conocer la posición del mouse proyectada para la región.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.SetCollision3DAACilinder(System.UInt16)">
            <summary>
            Establece el tipo de colisión como Axis-Aligned Cilinder.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.SetPart2DCollision3DAACilinder">
            <summary>
            Establece el tipo de colisión como Axis-Aligned Cilinder para entidades en entornos particionados.
            
            Es internal para que sólo se llame desde el inicializador correspondiente.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.SetHitScanCollision(Kriptok.Regions.Partitioned.IPartitionedPseudo3DRegion)">
            <summary>
            Establece un tipo de colisión que funciona como un "puntero láser". Toma la posición
            y la dirección en la que el objeto está apuntando, y colisiona con una línea
            imaginaria hasta que colisiona con el entorno.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityStartHandler.SetHitScanCollision(System.Single)">
            <summary>
            Establece el tipo de colision como un segmento tridimensional de una longitud determinada.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Base.ItemBase.Audio">
            <summary>
            Agrupamiento de funciones de audio (sonido y música).
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBase.Audio.PlayMidiNote(Kriptok.Audio.MidiInstrumentEnum,System.Byte,System.Byte,System.Byte)">
            <summary>
            Reproduce una nota midi con los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBase.Audio.PlayMidiPercussionNote(System.Byte,System.Byte)">
            <summary>
            Reproduce una nota del instrumento percusión, en el canal correspondiente.
            </summary>        
        </member>
        <member name="P:Kriptok.Entities.Base.ItemBase.Mouse.Left">
            <summary>
            Indica si se está presionando el botón izquierdo del mouse.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.ItemBase.Mouse.Right">
            <summary>
            Indica si se está presionando el botón derecho del mouse.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.ItemBase.Mouse.X">
            <summary>
            Obtiene la última coordenada X del mouse.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.ItemBase.Mouse.Y">
            <summary>
            Obtiene la última coordenada Y del mouse.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.ItemBase.Mouse.Middle">
            <summary>
            Indica si se está presionando el botón medio del mouse.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.ItemBase.Mouse.rightPressed">
            <summary>
            Variables utilizadas para detectar si se presionó o no un botón del mouse.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.ItemBase.Mouse.leftPressed">
            <summary>
            Variables utilizadas para detectar si se presionó o no un botón del mouse.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBase.Mouse.ReCenterX(System.Int32)">
            <summary>
            Centra el mouse horizontalmente en la pantalla.
            </summary>            
        </member>
        <member name="M:Kriptok.Entities.Base.ItemBase.Mouse.ReCenterY(System.Int32)">
            <summary>
            Centra el mouse horizontalmente en la pantalla.
            </summary>            
        </member>
        <member name="T:Kriptok.Entities.Base.InteractiveComponentBase">
            <summary>
            Clase base para componentes interactivos del motor de juegos.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.InteractiveComponentBase.Assembly">
            <summary>
            Obtiene el ensamblado en el que se encuentra definida esta clase.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.InteractiveComponentBase.Input.KeyPressed(System.Windows.Forms.Keys)">
            <summary>
            Indica si se presionó una tecla. Es decir, si pasa de estado "no presionada" a "presionada".
            
            Pero devuelve <see cref="!:false"/>, si la está manteniendo presionada.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.InteractiveComponentBase.Input.Button01">
            <summary>
            Tecla:            
            SNES:        
            Playstation: Triángulo
            XBOX:        
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kriptok.Entities.Base.InteractiveComponentBase.Input.AnalogDirection(Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Obtiene la dirección en coordenadas cartesianas del control analógico del joystick.
            </summary>            
        </member>
        <member name="M:Kriptok.Entities.Base.InteractiveComponentBase.Input.Button02">
            <summary>
            Tecla: 2         
            SNES:        
            Playstation: O (o "X" en la playstation japonesa).
            XBOX:        
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kriptok.Entities.Base.InteractiveComponentBase.Input.Button03">
            <summary>
            Tecla:       Espacio
            SNES:        B
            Playstation: X (o "O" en la playstation japonesa).
            XBOX:        A
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.InteractiveComponentBase.Input.Button03Pressed">
            <summary>
            Tecla:       Espacio
            SNES:        B
            Playstation: X (o "O" en la playstation japonesa).
            XBOX:        A
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.InteractiveComponentBase.Input.Button04">
            <summary>
            Tecla:       Shift            
            SNES:        X
            Playstation: Cuadrado
            XBOX:        Y                        
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.InteractiveComponentBase.Input.L1">
            <summary>
            Tecla:              Q
            SNES:               L
            Playstation / XBOX: L1            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kriptok.Entities.Base.InteractiveComponentBase.Input.R1">
            <summary>
            Tecla:              E
            SNES:               R
            Playstation / XBOX: R1            
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.InteractiveComponentBase.Input.L2">
            <summary>
            Tecla:              1           
            Playstation / XBOX: L2
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.InteractiveComponentBase.Input.R2">
            <summary>
            Tecla:              3            
            Playstation / XBOX: R2     
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kriptok.Entities.Base.InteractiveComponentBase.Input.Escape">
            <summary>
            Indica si está presionada la tecla de "Esc".
            </summary>            
        </member>
        <member name="T:Kriptok.Entities.Base.Process2Base`1">
            <summary>
            Objeto básico del juego, pero con comportamiento asincrónico.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.Process2Base`1.#ctor(`0)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.ProcessBase"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Base.Process2Base">
            <summary>
            Objeto básico del juego, pero con comportamiento asincrónico.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.Process2Base.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.Process2Base"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.Process2Base.#ctor(Kriptok.Views.Base.IView)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.Process2Base"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.Process2Base.OnBegin(Kriptok.Scenes.ProcessHandler)">
            <summary>
            Método para definir el comportamiento del proceso.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Base.ProcessBase`1">
            <summary>
            Objeto básico del juego, pero con comportamiento asincrónico.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase`1.#ctor(`0)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.ProcessBase"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Base.ProcessBase">
            <summary>
            Objeto básico del juego, pero con comportamiento asincrónico.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.ProcessBase.myThread">
            <summary>
            Puntero al thread en el que corre el proceso.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.ProcessBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.#ctor(Kriptok.Views.Base.IView)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.ProcessBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.Frame">
            <summary>
            Este método genera una "espera" hasta que el proceso es renderizado.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.OnStart(Kriptok.Entities.Base.EntityStartHandler)">
            <summary>
            Este método se ejecuta cuando un ítem es agregado a la lista de procesos vivos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.OnStart(Kriptok.Entities.Base.ProcessStartHandler)">
            <summary>
            Este método se ejecuta cuando un ítem es agregado a la lista de procesos vivos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.OnBegin">
            <summary>
            Define el comportamiento del proceso como un thread independiente.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.OnFrame">
            <summary>
            Este método se ejecuta en cada frame de la aplicación, mientras el objeto esté vivo.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.ReadyToRender">
            <summary>
            Indica si el objeto está listo para renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.TriggerFrame">
            <summary>
            Indica si el objeto está listo para renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.Sync(System.Action,System.Boolean)">
            <summary>
            Congela/duerme a todos los procesos activos, menos al actual, y ejecuta una acción. Cuando la acción termina,
            descongela/despierta a los procesos que había dormido.
            </summary>        
            <param name="action">Acción a ejecutar mientras los procesos están dormidos.</param>
            <param name="force">Indica si al momento de "despertar" a los procesos, debe también despertar a 
            procesos que tal vez ya se encontraban dormidos, y/o que no habían sido dormidos por este proceso en particular.</param>
        </member>
        <member name="M:Kriptok.Entities.Base.ProcessBase.IsDisposed">
            <summary>
            Indica si el elemento ha sido completamente destruido.
            </summary>  
        </member>
        <member name="T:Kriptok.Entities.Base.EntityBase`1">
            <summary>
            Clase base de todos los objetos que forman parte de un juego.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase`1.#ctor(`0)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.EntityBase"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.EntityBase`1.View">
            <summary>
            Obtiene la vista asociada al objeto.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Base.EntityBase">
            <summary>
            Clase base de todos los objetos que forman parte de un juego.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Id">
            <summary>
            Id único del objeto.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.alive">
            <summary>
            Indica si el proceso está vivo.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.onDying">
            <summary>
            Colección de acciones a realizar una vez que la entidad muere.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.EntityBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.#ctor(Kriptok.Views.Base.IView)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Base.EntityBase"/>.
            </summary>        
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Region">
            <summary>
            Accede al controlador central de la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Add``1(``0)">
            <summary>
            Agrega un objeto al juego y lo devuelve.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetLocation2D">
            <summary>
            Obtiene la ubicación bidimensional de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetLocationZ">
            <summary>
            Obtiene la ubicación bidimensional de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetRotationAngle2D">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetRotationAngle3D(Kriptok.Regions.Context.Base.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetRenderLocation">
            <summary>
            Obtiene la ubicación tridimensional de renderización del objeto.
            
            Este método permite customizar la ubicación del objeto al momento de renderizar.
            
            Ideal cuando la posición del objeto depende de otro objeto.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Location">
            <summary>
            Dependiendo del sistema de coordenadas que utiliza el proceso, la coordenada Z puede representar
            profundidad (interfaces tridimensionales), o prioridad (interfaces planas).
            
            De cualquier manera, cuanto menor sea Z, más cerca de la cámara se dibujará el proceso.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Radius">
            <summary>
            Utilizado para determina collisiones de tipo <see cref="F:Kriptok.Entities.Collisions.Collision2DTypeEnum.Radius"/> en 2 y 3 dimensiones.
            Es de tipo <see cref="T:System.UInt16"/> para que sea fácil de castear a int, pero al mismo tiempo no 
            soporte valores negativos.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Angle">
            <summary>
            Ángulos del proceso, utilizados para renderizar.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.EntityBase.AngleZ">
            <summary>
            Obtiene o establece la coordenada Z del vector de dirección de la entidad.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetDrawOrder">
            <summary>
            Esta propiedad puede fácilmente ser reemplazada en la mayoría de los casos por la coordenada Z.
            Ya que esta coordenada será utilizada para calcular el orden de los sprites a representar en todas
            las interfaces. Sin embargo, en el caso de que ambas "Z" sean iguales, es imposible saber qué 
            entidad tiene prioridad sobre cuál. Por tanto, se creó esta nueva prioridad.
            
            La mayoría de las veces, es suficiente con que sea 0. Sólo casos muy particulares pueden requerir
            de utilizarla para un ordenamiento extra.
            
            A diferencia de la coordenada Z, que es menor cuanto más cerca está de la cámara, esta propiedad
            funciona al revés. Cuanto más grande sea, más "cerca" se encontrará el sprite de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Advance2D(System.Single)">
            <summary>
            Mueve el objeto la distancia indicada sobre el plano XY en el ángulo que está mirando.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Advance3D(System.Single)">
            <summary>
            Mueve el objeto la distancia indicada el espacio tridimensional en el ángulo que está mirando.
            </summary>    
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Strafe2D(System.Single)">
            <summary>
            Mueve el objeto la distancia indicada en el plano XY a 90° del ángulo en que está mirando.
            </summary>           
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Strafe3D(System.Single,System.Single)">
            <summary>
            Mueve el objeto la distancia indicada en el espacio a 90° del ángulo en que está mirando.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.XAdvance2D(System.Single,System.Single)">
            <summary>
            Mueve el objeto la distancia indicada sobre el plano XY en el ángulo indicado.
            </summary>    
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.XAdvance3D(System.Single,System.Single,System.Single)">
            <summary>
            Mueve el objeto la distancia indicada en el espacio 3D, en los ángulos indicados.
            </summary>   
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Asleep">
            <summary>
            Indica si el proceso debe continuar moviéndose, se puede utilizar por ejemplo,
            para pausar el juego.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Sleep">
            <summary>
            Duerme a un objeto. Se lo puede despertar con <see cref="M:Kriptok.Entities.Base.EntityBase.Wakeup"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Sleep(System.Boolean)">
            <summary>
            Intenta dormir a un objeto, indicando en el resultado si fue exitoso o no.
            </summary>
            <param name="force">Indica si debe forzar a dormir a un objeto. Por defecto, si un objeto ya
            está dormido, lo ignora. Este parámetro hace que se fuerce a intentar dormirlo aunque ya esté dormido
            y que la función devuelva <see cref="!:true"/> siempre.</param>
            <returns>Devuelve <see cref="!:true"/> si pudo dormir al objeto y <see cref="!:false"/> de lo contrario.</returns>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Wakeup">
            <summary>
            Despierta a un objeto dormido con <see cref="M:Kriptok.Entities.Base.EntityBase.Sleep(System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Base.EntityBase.View">
            <summary>
            Representación gráfica de esta entidad.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.FindCloseEntities2D``1">
            <summary>
            Encuentra todas las entidades de un tipo determinado que se encuentren dentro de un rango
            de distancia.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.FindCloseEntities2D``1(System.Single)">
            <summary>
            Encuentra todas las entidades de un tipo determinado que se encuentren dentro de un rango
            de distancia.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.FindOtherEntities``1">
            <summary>
            Obtiene todas las entidades del tipo indicado, excepto
            la actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.DistX(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Calcula la distancia sobre el eje X hasta el objeto indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.DistY(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Calcula la distancia sobre el eje Y hasta el objeto indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetAngle2D(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Obtiene el ángulo en dirección al objeto indicado sobre el eje Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetDistance2D(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Obtiene la distancia en dirección al objeto indicado sobre el plano XY.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetDistance3D(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Obtiene la distancia en dirección al objeto indicado sobre el plano XY.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.LookAt2D(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Este método orienta la entidad bidimensionalmente a otra entidad.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.LookAt2D(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Este método orienta la entidad bidimensionalmente a un punto en el plano (X, Y).
            </summary>    
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.LookAt3D(System.Single,System.Single,System.Single)">
            <summary>
            Este método orienta la dirección del objeto en tres dimensiones hacia la ubicación indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.LookAt3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Este método orienta la dirección del objeto en tres dimensiones hacia la ubicación indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.SetHitbox2D(Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase)">
            <summary>
            Establece la nueva caja de colisión, liberando de memoria la anterior, si la tuviese.
            </summary>        
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Hitbox2D">
            <summary>
            Caja de colisión bidimensional para este objeto.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Base.EntityBase.Hitbox3D">
            <summary>
            Caja de colisión tridimencional para este objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Radius2DCollision``1">
            <summary>
            Obtiene el el objeto con el que se encuentra a una distancia de "colisión de radios", es decir, 
            a una distancia menor a la suma de sus radios.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Radius3DCollision``1">
            <summary>
            Obtiene el el objeto con el que se encuentra a una distancia de "colisión de radios", es decir, 
            a una distancia menor a la suma de sus radios.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.RadiusCollision``1(System.Func{``0,System.Single})">
            <summary>
            Obtiene el el objeto con el que se encuentra a una distancia de "colisión de radios", es decir, 
            a una distancia menor a la suma de sus radios.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Radius2DCollisions``1">
            <summary>
            Obtiene el el objeto con el que se encuentra a una distancia de "colisión de radios", es decir, 
            a una distancia menor a la suma de sus radios.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Radius3DCollisions``1">
            <summary>
            Obtiene el el objeto con el que se encuentra a una distancia de "colisión de radios", es decir, 
            a una distancia menor a la suma de sus radios.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.RadiusCollisions``1(System.Func{``0,System.Single})">
            <summary>
            Obtiene el el objeto con el que se encuentra a una distancia de "colisión de radios", es decir, 
            a una distancia menor a la suma de sus radios.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.OnRadiusCollision3D``1(Kriptok.Entities.DistanceTo3D{``0}@)">
            <summary>
            Indica si hay una superposición tridimencional de radios de los objetos.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Radius3DCollision(Kriptok.Entities.Base.EntityBase,System.Double@)">
            <summary>
            Obtiene el el objeto con el que se encuentra a una distancia de "colisión de radios"
            de una entidad en particular.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.OnRadiusCollision2D``1(Kriptok.Entities.DistanceTo2D{``0}@)">
            <summary>
            Indica si hay una superposición tridimencional de radios de los objetos.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Radius2DCollision``1(``0,Kriptok.Entities.DistanceTo2D{``0}@)">
            <summary>
            Obtiene el el objeto con el que se encuentra a una distancia de "colisión de radios"
            de una entidad en particular.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.IsAlive">
            <summary>
            Indica si el objeto aún está "vivo".
            
            Es decir, si tiene comportamiento y debe ser renderizado.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetDirection">
            <summary>
            Obtiene la dirección del objeto sobre el plano XY.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.OnStart">
            <summary>
            Este método se ejecuta cuando un ítem es agregado a la lista de procesos vivos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.OnStart(Kriptok.Entities.Base.EntityStartHandler)">
            <summary>
            Este método se ejecuta cuando un ítem es agregado a la lista de procesos vivos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.OnFrame">
            <summary>
            Este método se ejecuta en cada frame de la aplicación, mientras el objeto esté vivo.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.ReadyToRender">
            <summary>
            Indica si el objeto está listo para renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.TriggerFrame">
            <summary>
            Indica si el objeto está listo para renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetIdentifier">
            <summary>
            Obtiene un texto para identificar al objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.GetOccupiedGridCells(Kriptok.Drawing.Vector2I)">
            <summary>
            Para objetos que deben moverse por un mapa tipo "grilla" (estrategia, rol, etcétera), este método
            permite, dada la ubicación del objeto (en la grilla) indicada por parámetro, este método
            permite implementar la ocupación de múltiples celdas y casillas simplemente devolviendo una lista
            de las casillas ocupadas.        
            </summary>        
            <param name="coordinates">Las coordenadas que devuelve el metodo <see cref="!:GetTileCoords"></see></param>
            <returns>Devuelve una liasta de los casilleros que ocupa el objeto dentro del mapa.</returns>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Die">
            <summary>
            Indica al objeto que deja de formar parte de la operatoria del juego
            y que debería liberarse de memoria.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.AddOnDying(System.Action)">
            <summary>
            Agrega una acción a realizar cuando el objeto muera.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.IsDisposed">
            <summary>
            Mata el objeto, libera los recursos, e
            indica si el elemento ha sido completamente destruido.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Base.EntityBase.Find">
            <summary>
            Funcionalidades de búsqueda de objetos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Find.First``1">
            <summary>
            Busca el primer objeto vivo del tipo indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Find.All``1">
            <summary>
            Devuelve todos los objetos vivos del tipo indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Find.All">
            <summary>
            Devuelve todos los objetos vivos alrededor.
            </summary>            
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Find.Others(System.Int32)">
            <summary>
            Devuelve todos los objetos vivos menos el indicado por parámetro.
            </summary>            
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Find.Others``1(System.Int32)">
            <summary>
            Devuelve todos los objetos vivos menos el indicado por parámetro.
            </summary>            
        </member>
        <member name="T:Kriptok.Entities.Base.EntityBase.Scene">
            <summary>
            Funcionalidades para comunicarse con la escena actual.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Base.EntityBase.Scene.SendMessage(System.Object)">
            <summary>
            Envía el mensaje a la escena. El mensaje puede ser cualquier cosa.
            Pero depende de la escena saber interpretarlo en la implementación del método
            <see cref="M:Kriptok.Scenes.SceneBase.OnMessage(Kriptok.Scenes.SceneHandler,System.Object)"/>,
            </summary>            
        </member>
        <member name="T:Kriptok.Entities.IVideoEntity">
            <summary>
            Representa una entidad que controla un video que se reproduce en pantalla.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.IVideoEntity.Loop">
            <summary>
            Obtiene o establece si el video se debe repetir indefinidamente.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.IVideoEntity.EndOfVideo">
            <summary>
            Indica si se encuentra al final del video.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.IVideoEntity.Kill">
            <summary>
            Mata al objeto video.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.IVideoEntity.GoToEnd">
            <summary>
            Avanza hasta la última imagen del video.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.IVideoEntity.ScaleTo(System.Drawing.Size)">
            <summary>
            Escala el video para que alcance el tamaño indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.IVideoEntity.Pause">
            <summary>
            Detiene la reproducción del video.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.IVideoEntity.Unpause">
            <summary>
            Retoma la reproducción del video.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.VideoEntity.EndOfVideo">
            <summary>
            Indica si se encuentra al final del video.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.VideoEntity.Loop">
            <summary>
            Obtiene o establece si el video se debe repetir indefinidamente.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.VideoEntity.ScaleTo(System.Drawing.Size)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Entities.VideoEntity.Pause">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Entities.VideoEntity.Unpause">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Entities.Queries.Base.IQuery">
            <summary>
            Consulta de colisiones entre dos entidades.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Queries.Base.IQuery`1">
            <summary>
            Consulta de colisiones entre una entidad y un tipo de entidades.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Queries.Base.IQuery`1.Result">
            <summary>
            Resultado de la colisión.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Queries.IMouseLocationQuery">
            <summary>
            Consulta para obtener las coordenadas del mouse en el plano de scroll.
            
            Sólo funciona para modos de pantalla determinados.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Queries.MouseScrollLocationQuery">
            <summary>
            Consulta para obtener las coordenadas del mouse en el plano de scroll.
            
            Sólo funciona para modos de pantalla determinados.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Queries.OutOfScreenQuery">
            <summary>
            Consulta para descubrir si el objeto se encuentra fuera de la pantalla.
            
            Sólo funciona para modos de pantalla determinados.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.JumpFallStatusEnum">
            <summary>
            Estados posibles del objeto.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallStatusEnum.None">
            <summary>
            No se está moviendo.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallStatusEnum.Jumping">
            <summary>
            Está saltando, moviéndose hacia arriba.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallStatusEnum.Falling">
            <summary>
            Está cayendo, moviéndose hacia abajo.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.JumpFallHandlerY">
            <summary>
            Controlador de salto para entornos tipo screen/scroll en que los objetos se muevan 
            sobre el plano XY.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerY.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de <see cref="T:Kriptok.Entities.JumpFallHandlerY"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.JumpFallHandlerZ">
            <summary>
            Controlador de salto para entornos tipo tridimensionales en que los objetos "salten" sobre el eje Z.    
            </summary>
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerZ.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de <see cref="T:Kriptok.Entities.JumpFallHandlerZ"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallHandlerBase.gravity">
            <summary>
            Fuerza gravitatoria utilizada.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallHandlerBase.inverseGravity">
            <summary>
            Inversa de la gravedad.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallHandlerBase.halfGravity">
            <summary>
            Variable precalculada.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallHandlerBase.initialHeight">
            <summary>
            Altura a partir de la cual se empezó a calcular el salto/caída.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallHandlerBase.initialSpeed">
            <summary>
            Aceleración al comienzo del movimiento.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.JumpFallHandlerBase.timer">
            <summary>
            Tiempo acumulado del salto/caída.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.JumpFallHandlerBase.Status">
            <summary>
            Estado en el que se encuentra actualmente.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.#ctor(System.Single)">
            <summary>
            Obtiene una nueva instancia de la clase <see cref="T:Kriptok.Entities.JumpFallHandlerBase"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.SetGravity(System.Single)">
            <summary>
            Establece la fuerza de la gravedad, y precalcula variables necesarias.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.StartJump(System.Single,System.Single)">
            <summary>
            Inicia un salto con la aceleración indicada por parámetro.
            
            Como este método puede ser utilizado para un "double jump", no valida que se
            encuentre en un estado válido.
            
            Esa validación debe realizare previamente.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.StartFall(System.Single)">
            <summary>
            Inicia una caída desde la altura inicial hasta la altura del piso.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.StartFall(System.Single,System.Single)">
            <summary>
            Inicia una caída desde la altura inicial hasta la altura del piso.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.IncTimer(System.Single,System.Single,System.Single,System.Single@)">
            <summary>
            Incrementa el tiempo y devuelve el valor de la altura.
            </summary>        
            <param name="t">Tiempo a incrementar.</param>
            <param name="floorHeight">Altura del "piso" cuando se está cayendo.</param>
            <param name="ceilingHeight">Altura del "techo" cuando se está saltando.</param>
            <param name="newHeight">Resultado de la función.</param>        
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.OverCeiling(System.Single,System.Single)">
            <summary>
            Indica si la altura del objeto es superior a la del techo.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.UnderFloor(System.Single,System.Single)">
            <summary>
            Indica si la altura del objeto es inferior a la altura del piso.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.JumpFallHandlerBase.GetModifier(System.Single,System.Single)">
            <summary>
            Obtiene el modificar de altura en base a la velocidad inicial y a la aceleración.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.SpriteAnimationTimed">
            <summary>
            Este objeto utiliza un <see cref="T:Kriptok.Views.Sprites.IndexedSpriteView"/> para representar una animación.
            
            Itera por todas las imágenes de la vista y luego muere.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.SpriteAnimationTimed.timer">
            <summary>
            Tiempo que debe aparecer cada frame en pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.SpriteAnimationTimed.timerCounter">
            <summary>
            Tiempo transcurrido desde el último frame.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.SpriteAnimationTimed.#ctor(Kriptok.Common.Resource,System.Int32,System.Int32,System.Single)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Entities.SpriteAnimationTimed"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.SpriteAnimationTimed.OnFrame">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Entities.SpriteAnimation">
            <summary>
            Este objeto utiliza un <see cref="T:Kriptok.Views.Sprites.IndexedSpriteView"/> para representar una animación.
            
            Itera por todas las imágenes de la vista y luego muere.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.SpriteAnimation.#ctor(System.Reflection.Assembly,System.String,System.Int32,System.Int32)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Entities.SpriteAnimation"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.SpriteAnimation.#ctor(Kriptok.Common.Resource,System.Int32,System.Int32)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Entities.SpriteAnimation"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.SpriteAnimation.Scale">
            <summary>
            Escala de renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.SpriteAnimation.OnFrame">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Entities.Debug.ScrollCustomizer">
            <summary>
            Este proceso puede ser utilizado por cualquier aplicación. Su objetivo es el de permitir modificar 
            la perspectiva del espacio tridimensional (o Mode7), y loggea las configuraciones actuales, de forma
            de poder utilizarlo temporalmente hasta encontrar la perspectiva deseada.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Debug.LightSourceRotator">
            <summary>
            Esta es una clase de prueba que hacer rotar la luz ambiental para verificar cómo afecta la luz
            dependiendo de dónde se encuentre.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Debug.LineOfSight">
            <summary>
            Este objeto se utiliza para analizar la visión de un proceso sobre otro/s.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Debug.LineOfSight.#ctor(Kriptok.Entities.Base.EntityBase,Kriptok.Entities.Base.EntityBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Debug.LineOfSight"/>.
            </summary>
            <param name="from">Proceso de origen (propietario de la linea de visión).</param>
            <param name="to">Proceso destino u objetivo.</param>
        </member>
        <member name="M:Kriptok.Entities.Debug.LineOfSight.IsInSight(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Indica si un objeto determinado está dentro del rango de visión del objeto propietario.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Debug.LinesOfSight">
            <summary>
            Esta clase indica gráficamente hacia dónde se encuentra mirando el personaje.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Debug.LinesOfSight.#ctor(Kriptok.Entities.Base.EntityBase,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Debug.LinesOfSight"/>.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Debug.MapGridMarker">
            <summary>
            Este objeto se utiliza para marcar el lugar donde se encuentra un objeto dentro de una cuadrícula
            en una situación que puede ser confusa (un mapa de Mode7, por ejemplo).
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Gfps.Base.GfpsEntityBase.PostMoved">
            <summary>
            Se ejecuta después de moverse.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Gfps.GfpsDoorStateEnum">
            <summary>
            Lista los estados que puede adoptar una puerta.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Gfps.GfpsDoor">
            <summary>
            Este objeto controla el funcionamiento de una puerta.
            
            La puerta no es necesariamente la vista.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Gfps.GfpsDoor.amount">
            <summary>
            Velocidad de movimiento de la puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Gfps.GfpsDoor.animationIndex">
            <summary>
            Número entre 0 y 1 que representa qué tan cerrada/abierta está la puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Gfps.GfpsDoor.Status">
            <summary>
            Estado actual de la puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Gfps.GfpsDoor.v0">
            <summary>
            Ubicación original del primer vértice que compone el panel de la puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Gfps.GfpsDoor.v1">
            <summary>
            Ubicación original del segundo vértice que compone el panel de la puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Gfps.GfpsDoor.V0">
            <summary>
            Primer vértice bidimensional que sirve de pivote para los vértices de la puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Gfps.GfpsDoor.V1">
            <summary>
            Segundo vértice bidimensional que sirve de pivote para los vértices de la puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Gfps.GfpsDoor.diff">
            <summary>
            Diferencia entre los dos vectores. Utilizada como referencia para mover
            los paneles.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Gfps.GfpsDoor.gridLocation">
            <summary>
            Coordenadas de la puerta, dentro de la cuadrícula del mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Terrain.ITerrainEntity">
            <summary>
            Interfaz para entidades cuyo comportamiento está relacionado a mapas/regiones de tipo <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Terrain.ITerrainEntity.UpdateData(Kriptok.Entities.Terrain.TerrainEntityDataUpdate)">
            <summary>
            Actualiza las propiedades de la entidad, indicado las coordenadas bidimensionales calculadas,
            así como los límites superior e inferior del área en que se encuentra.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Terrain.ITerrainEntity.MaxSlopeAbleToClimb">
            <summary>
            Valor entre 0 y 1 que indica el seno del máximo ángulo que la entidad
            puede moverse por una pendiente sin verse afectada.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Terrain.ITerrainEntity.CanMoveTo(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase)">
            <summary>
            Indica si la entidad puede moverse a la partición indicada por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Terrain.TerrainEntityDataUpdate">
            <summary>
            Estructura que sirve para indicarle a la entidad dónde queda en el mapa después de moverse.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Terrain.TerrainEntityDataUpdate.partition">
            <summary>
            Partición sobre la que se encuentra la entidad.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityDataUpdate.#ctor(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Terrain.TerrainEntityDataUpdate"/>.
            </summary>        
        </member>
        <member name="F:Kriptok.Entities.Terrain.TerrainEntityDataUpdate.Location">
            <summary>
            Ubicación válida de la entidad.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Terrain.TerrainEntityDataUpdate.FloorHeight">
            <summary>
            Altura del piso que puede ocupar la entidad.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Terrain.TerrainEntityDataUpdate.GroundNormal">
            <summary>
            Indica la dirección de la normal de la partición sobre la cuál está la entidad.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Terrain.TerrainEntityDataUpdate.GroundTextureId">
            <summary>
            Obtiene el Id de la textura sobre la cual se encuentra la entidad.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Terrain.TerrainEntityDataUpdate.PartitionId">
            <summary>
            Id de la partición en la que se encuentra.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Terrain.TerrainEntityBase`1">
            <summary>
            Entidad sincrónica básica que reacciona mediante física al terreno en el que se encuentra.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase`1.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Terrain.TerrainEntityBase"/>
            </summary>   
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase`1.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion,`0)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Terrain.TerrainEntityBase"/>
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase`1.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Terrain.TerrainEntityBase"/>
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase`1.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion,`0)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Terrain.TerrainEntityBase"/>
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Terrain.TerrainEntityBase`1.View">
            <summary>
            Representación gráfica de esta entidad.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Terrain.TerrainEntityBase">
            <summary>
            Entidad sincrónica básica para objetos de mapas WLD.
            
            No se ve afectado por la física.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Terrain.TerrainEntityBase.inertia">
            <summary>
            Velocidad de movimiento según todas las fuerzas físicas aplicadas.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Terrain.TerrainEntityBase.groundNormal">
            <summary>
            Normal del piso donde estoy.
            
            Parto de la idea de que voy a estar sobre un plano completamente horizontal.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Terrain.TerrainEntityBase.physicsHandler">
            <summary>
            Controlador de física.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Terrain.TerrainEntityBase"/>
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion,Kriptok.Views.Base.IView)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Terrain.TerrainEntityBase"/>
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Terrain.TerrainEntityBase"/>
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion,Kriptok.Views.Base.IView)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Wld.WldEntityBase"/>
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase.OnFrame(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase.OnFrame(Kriptok.Entities.Terrain.TerrainEntityBase.FramePhysicsHandler)">
            <summary>
            Comportamiento a definir para el objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase.IsValidSlope">
            <summary>
            Indica si puede caminar por la pendiente donde está parado.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Terrain.TerrainEntityBase.FramePhysicsHandler">
            <summary>
            Controlador de física para la entidad.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Terrain.TerrainEntityBase.FramePhysicsHandler.frameForce">
            <summary>
            Fuerza aplicada por el jugador al moverse en un frame.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Terrain.TerrainEntityBase.FramePhysicsHandler.Map">
            <summary>
            Mapa particionado.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Terrain.TerrainEntityBase.FramePhysicsHandler.TimeDelta">
            <summary>
            Tiempo que pasa entre frames.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase.FramePhysicsHandler.Reset">
            <summary>
            Limpia el movimiento actual.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase.FramePhysicsHandler.Advance2D(System.Single)">
            <summary>
            Aplica una fuerza en la dirección que está mirando.
            </summary>            
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase.FramePhysicsHandler.Strafe2D(System.Single)">
            <summary>
            Aplica una fuerza hacia la derecha de donde se está mirando.
            </summary>            
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase.FramePhysicsHandler.XAdvance2D(System.Single,System.Single)">
            <summary>
            Mueve el objeto la distancia indicada sobre el plano XY en el ángulo indicado.
            </summary>    
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase.FramePhysicsHandler.Jump(System.Single)">
            <summary>
            Le indica a la entidad que debe realizar un salto con la velocidad indicada.
            </summary>        
            <returns>Devuelve un valor indicando si pudo saltar o no.</returns>
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase.FramePhysicsHandler.Calculate(System.Single)">
            <summary>
            Resuelve la dirección de movimiento y se la aplica a la entidad.            
            </summary>            
            <returns>Devuelve el nuevo vector de movimiento.</returns>            
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase.FramePhysicsHandler.Stop">
            <summary>
            Detiene todas las fuerzas aplicadas a la entidad.w
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Terrain.TerrainEntityBase.FramePhysicsHandler.CalculateJumpTimeInTheAir(System.Single)">
            <summary>
            Calcula el tiempo que estará en el aire, dado un salto vertical.
            </summary>            
        </member>
        <member name="P:Kriptok.Entities.Terrain.TerrainEntityBase.FramePhysicsHandler.Inertia">
            <summary>
            Obtiene el vector "inercia" que se aplica actualmente sobre la entidad.
            </summary>            
        </member>
        <member name="T:Kriptok.Entities.Wld.IWldEntity">
            <summary>
            Interfaz de una entidad de un mapa de M8.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.IWldEntity.AjustVertically">
            <summary>
            Ajusta verticalmente la entidad en el mapa, antes de calcular colisiones, para que no se 
            pueda salir de la región en la que está en caso de que haya espacio no euclídeo.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.IWldEntity.UpdateData(Kriptok.Entities.Wld.WldEntityDataUpdate)">
            <summary>
            Actualiza las propiedades de la entidad, indicado las coordenadas bidimensionales calculadas,
            así como los límites superior e inferior del área en que se encuentra.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Wld.WldEntityDataUpdate">
            <summary>
            Estructura que sirve para indicarle a la entidad dónde queda en el mapa después de moverse.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldEntityDataUpdate.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,Kriptok.Drawing.Algebra.Vector2F,System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Wld.WldEntityDataUpdate"/>.
            </summary>        
        </member>
        <member name="F:Kriptok.Entities.Wld.WldEntityDataUpdate.Location">
            <summary>
            Ubicación válida de la entidad.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Wld.WldEntityDataUpdate.FloorHeight">
            <summary>
            Límites verticales del espacio que puede ocupar la entidad.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Wld.WldEntityDataUpdate.CeilingHeight">
            <summary>
            Límites verticales del espacio que puede ocupar la entidad.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Wld.WldEntityDataUpdate.FloorTextureId">
            <summary>
            Textura del piso del sector donde está la entidad.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Wld.WldEntityDataUpdate.PartitionId">
            <summary>
            Id de la partición en la que se encuentra.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Wld.WldEventListener">
            <summary>
            Representa una entidad que espera un evento en un mapa WLD.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldEventListener.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Wld.WldEntityBase"/>
            </summary>   
        </member>
        <member name="M:Kriptok.Entities.Wld.WldEventListener.Listen(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Entities.Wld.WldBasicDoorBase">
            <summary>
            Representa una clase para una puerta "básica", estilo Doom: un sector levadizo, sin llaves.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Wld.WldBasicDoorBase.sector">
            <summary>
            Sector del mapa que guarda el "evento".
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Wld.WldBasicDoorBase.openness">
            <summary>
            Indica qué tan "abierta" está la puerta. 0 para completamente cerrada, 1 para completamente abierta.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Wld.WldBasicDoorBase.direction">
            <summary>
            Indica la dirección en la que debe moverse la puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Wld.WldBasicDoorBase.otherSectorHeights">
            <summary>
            Este arreglo se utiliza para calcular qué tan alto puede llegar la puerta al subir.
            Se utilizan lambdas para asegurar que siempre se recalcule.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Wld.WldBasicDoorBase.stuckEvent">
            <summary>
            Eventos que puede disparar.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Wld.WldBasicDoorBase.openEvent">
            <summary>
            Eventos que puede disparar.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Wld.WldBasicDoorBase.closeEvent">
            <summary>
            Eventos que puede disparar.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldBasicDoorBase.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Entities.Wld.WldBasicDoorBase"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Wld.WldBasicDoorBase.OnFrame">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldBasicDoorBase.OnStuck">
            <summary>
            Evento que se dispara cuando no se puede abrir la puerta por alluna razón.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldBasicDoorBase.OnOpen">
            <summary>
            Permite realizar un evento al empezar a cerrar la puerta.
            Ideal para reproducir sonidos.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldBasicDoorBase.OnClose">
            <summary>
            Permite realizar un evento al empezar a abrir la puerta.
            Ideal para reproducir sonidos.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Wld.WldBasicDoorBase.VerticalBounds">
            <summary>
            Límites verticales de activación de la puerta.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldBasicDoorBase.IsClosed">
            <summary>
            Indica si la puerta está totalmente cerrada.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Wld.WldBasicDoorBase.HasToOperate(Kriptok.Entities.Base.EntityBase,System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldBasicDoorBase.Operate">
            <summary>
            Abre o cierra la puerta, si corresponde.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldBasicDoorBase.IsActive">
            <summary>
            Permite customizar si 
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Wld.WldEntityBase`1">
            <summary>
            Entidad sincrónica básica para objetos de mapas WLD.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldEntityBase`1.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Wld.WldEntityBase"/>
            </summary>   
        </member>
        <member name="M:Kriptok.Entities.Wld.WldEntityBase`1.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion,`0)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Wld.WldEntityBase"/>
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldEntityBase`1.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Wld.WldEntityBase"/>
            </summary>   
        </member>
        <member name="M:Kriptok.Entities.Wld.WldEntityBase`1.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion,`0)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Wld.WldEntityBase"/>
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Wld.WldEntityBase`1.View">
            <summary>
            Representación gráfica de esta entidad.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Wld.WldEntityBase">
            <summary>
            Entidad sincrónica básica para objetos de mapas WLD.
            
            No se ve afectado por la física.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldEntityBase.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Wld.WldEntityBase"/>
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldEntityBase.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion,Kriptok.Views.Base.IView)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Wld.WldEntityBase"/>
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldEntityBase.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Wld.WldEntityBase"/>
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldEntityBase.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion,Kriptok.Views.Base.IView)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Wld.WldEntityBase"/>
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Wld.WldEntityBase.JumpHandler">
            <summary>
            Controlador de saltos y caídas.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldEntityBase.Jump(System.Single)">
            <summary>
            Le indica a la entidad que debe realizar un salto con la velocidad indicada.
            </summary>        
            <returns>Devuelve un valor indicando si pudo saltar o no.</returns>
        </member>
        <member name="T:Kriptok.Entities.Wld.WldSectorEventListenerBase">
            <summary>
            Representa un evento que depende de un sector del mapa. Como una puerta.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Wld.WldSectorEventListenerBase.map">
            <summary>
            Mapa en el cual aguarda el evento.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Wld.WldSectorEventListenerBase.sector">
            <summary>
            Sector del mapa que guarda el "evento".
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Wld.WldSectorEventListenerBase.lines">
            <summary>
            Líneas/paredes del mapa que componen la puerta.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Wld.WldSectorEventListenerBase.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Entities.Wld.WldSectorEventListenerBase"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Wld.WldSectorEventListenerBase.GetConnectedPartitionIds">
            <summary>
            Obtiene los ids de las particiones con las que se conecta el sector creado por la puerta.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Wld.WldSectorEventListenerBase.HasToOperate(Kriptok.Entities.Base.EntityBase,System.Single,System.Single)">
            <summary>
            Indica si la puerta tiene que abrirse o cerrarse.
            </summary>        
        </member>
        <member name="F:Kriptok.Entities.Wld.WldSectorEventListenerBase.WldSectorSidePanel.PartitionToId">
            <summary>
            Identificador de la partición a la cual conecta el portal.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Partitioned.IPart2DEntity">
            <summary>
            Interfaz de una entidad de un mapa particionado.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.IPart2DEntity.GetRadius">
            <summary>
            Obtiene el radio utilizado para validar la posición de la entidad en el mapa.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Partitioned.IPart2DEntity.GetHeight">
            <summary>
            Obtiene la altura del objeto para saber si puede acceder a determinados sectores.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Partitioned.IPart2DEntity.GetStepHeight">
            <summary>
            Obtiene la altura que puede "subir" un objeto al moverse de un sector a otro.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Partitioned.IPartitionedLocationValidator">
            <summary>
            Objeto utilizado para validar la posición de una entidad en entornos
            particionados.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.IPartitionedLocationValidator.ValidatingLocation(System.Action)">
            <summary>
            Genera un contexto de validación de la ubicación en un entorno particionado.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Partitioned.IPart2DEntityExtensions">
            <summary>
            Extensiones para la interfaz <see cref="T:Kriptok.Entities.Partitioned.IPartitionedLocationValidator"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.IPart2DEntityExtensions.GetTopHeight(Kriptok.Entities.Partitioned.IPart2DEntity)">
            <summary>
            Obtiene la altura vertical donde "termina" el objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Partitioned.IPart2DEntityExtensions.CilinderOverlapingWith(Kriptok.Entities.Partitioned.IPart2DEntity,Kriptok.Entities.Partitioned.IPart2DEntity)">
            <summary>
            Indica si la entidad actual superpone su cilindro de colisión con el de 
            la entidad indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Partitioned.IPart2DEntityExtensions.GetCilinder(Kriptok.Entities.Partitioned.IPart2DEntity)">
            <summary>
            Obtiene el cilindro de colisión de la entidad.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.Partitioned.Part2DEntityBase`1">
            <summary>
            Entidad sincrónica básica para objetos de mapas WLD.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase`1.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Partitioned.Part2DEntityBase`1"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase`1.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion,`0)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Partitioned.Part2DEntityBase`1"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase`1.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Partitioned.Part2DEntityBase`1"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase`1.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion,`0)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Partitioned.Part2DEntityBase`1"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Partitioned.Part2DEntityBase`1.View">
            <summary>
            Representación gráfica de esta entidad.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.Partitioned.Part2DEntityBase">
            <summary>
            Entidad sincrónica básica para objetos de mapas particionados.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Partitioned.Part2DEntityBase.map">
            <summary>
            Referencia al mapa de M8 en el cual que se encuentra la entidad.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Partitioned.Part2DEntityBase.FloorHeight">
            <summary>
            Altura del piso del lugar donde se encuentra la entidad.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Partitioned.Part2DEntityBase.CeilingHeight">
            <summary>
            Altura del techo del lugar donde se encuentra la entidad.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.Partitioned.Part2DEntityBase.OnGround">
            <summary>
            Indica si la entidad está sobre el piso.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Partitioned.Part2DEntityBase.validator">
            <summary>
            Validador de posición en el entorno particionado.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Partitioned.Part2DEntityBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion,Kriptok.Views.Base.IView)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Partitioned.Part2DEntityBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Partitioned.Part2DEntityBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion,Kriptok.Views.Base.IView)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Entities.Partitioned.Part2DEntityBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.GetRadius">
            <summary>
            Obtiene el radio utilizado para validar la posición de la entidad en el mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.GetHeight">
            <summary>
            Obtiene la altura del objeto para saber si puede acceder a determinados sectores.
            </summary>   
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.OnStart(Kriptok.Entities.Base.EntityStartHandler)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.OnStart(Kriptok.Entities.Partitioned.Part2DEntityBase.Part2DEntityStartHandler)">
            <summary>
            Método ejecutado cuando la entidad es agregada a la lista de objetos vivos.
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.OnFrame">
            <summary>
            Se sella este método, para validar siempre la posición del objeto dentro del entorno particionado.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.PostFrame">
            <summary>
            Código a ejecutar después de moverse.
            
            No se valida la posición nuevamente, por lo que no se debe mover
            la entidad en el plano (X, Y).
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.GetStepHeight">
            <summary>
            Obtiene la altura que puede "subir" un objeto al moverse de un sector a otro.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.MaxSlopeAbleToClimb">
            <summary>
            Valor entre 0 y 1 que indica el seno del máximo ángulo que la entidad
            puede moverse por una pendiente sin verse afectada.
            </summary> 
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.OnFrame(System.Single)">
            <summary>
            Comportamiento de la entidad dentro de un entorno de validación de M8.
            </summary>        
        </member>
        <member name="P:Kriptok.Entities.Partitioned.Part2DEntityBase.RelativeZ">
            <summary>
            Obtiene la coordenada Z con respecto al "piso" definido 
            </summary>        
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.UpdateData(Kriptok.Entities.Wld.WldEntityDataUpdate)">
            <summary>
            Actualiza la información del que se encuentra la entidad.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.UpdateData(Kriptok.Entities.Terrain.TerrainEntityDataUpdate)">
            <summary>
            Actualiza la información del que se encuentra la entidad.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.CanMoveTo(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.AjustVertically">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Entities.Partitioned.Part2DEntityBase.Part2DEntityStartHandler">
            <summary>
            Controlador de física para la entidad.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.Partitioned.Part2DEntityBase.Part2DEntityStartHandler.Map">
            <summary>
            Mapa donde se crea la entidad.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.Partitioned.Part2DEntityBase.Part2DEntityStartHandler.SetCollision3DAACilinder">
            <summary>
            Establece el tipo de colisión como Axis-Aligned Cilinder para entidades en entornos particionados.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.BasicObject">
            <summary>
            Este objeto puede ser utilizado como decorado, u otros objetos que no 
            requieren un comportamiendo complejo o no interactuan con otros objetos.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.DistanceTo`1">
            <summary>
            Esta clase representa una relación de distancia entre un objeto y otro.
            </summary>    
        </member>
        <member name="F:Kriptok.Entities.DistanceTo`1.Object">
            <summary>
            Objeto hasta el cuál se está midiendo la distancia.
            </summary>
        </member>
        <member name="F:Kriptok.Entities.DistanceTo`1.Distance">
            <summary>
            Distancia hasta el objeto referenciado.
            </summary>        
        </member>
        <member name="T:Kriptok.Entities.IDistanceTo`1">
            <summary>
            Interfaz utilizada para unificar el comportamiento entre 2D y 3D.
            </summary>    
        </member>
        <member name="P:Kriptok.Entities.IDistanceTo`1.Entity">
            <summary>
            Entidad a la que se referencia.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.IDistanceTo`1.Distance">
            <summary>
            Distancia total entre las dos entidades.
            </summary>
        </member>
        <member name="M:Kriptok.Entities.IDistanceTo`1.RejectMeHalfRadius">
            <summary>
            Hace que la entidad que evaluó la colisión se aleje de la otra hasta
            la mitad de la distancia necesaria para evitar la colisión de radios.
            
            Asumiendo que en la misma iteración de procesos, la otra entidad hará 
            el movimiento opuesto, distanciando totalmente las entidades.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.DistanceTo2D`1">
            <summary>
            Esta clase representa una relación de distancia bidimensional entre una entidad y otra.
            </summary>    
        </member>
        <member name="F:Kriptok.Entities.DistanceTo2D`1.owner">
            <summary>
            Entidad que evalúa la colisión.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.DistanceTo2D`1.Entity">
            <summary>
            Objeto hasta el cuál se está midiendo la distancia.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.DistanceTo2D`1.Distance">
            <summary>
            Distancia hasta el objeto referenciado.
            </summary>            
        </member>
        <member name="M:Kriptok.Entities.DistanceTo2D`1.RejectMeHalfRadius">
            <summary>
            Hace que la entidad que evaluó la colisión se aleje de la otra hasta
            la mitad de la distancia necesaria para evitar la colisión de radios.
            
            Asumiendo que en la misma iteración de procesos, la otra entidad hará 
            el movimiento opuesto, distanciando totalmente las entidades.
            </summary>
        </member>
        <member name="T:Kriptok.Entities.DistanceTo3D`1">
            <summary>
            Esta clase representa una relación de distancia tridimencional entre una entidad y otra.
            </summary>     
        </member>
        <member name="F:Kriptok.Entities.DistanceTo3D`1.owner">
            <summary>
            Entidad que evalúa la colisión.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.DistanceTo3D`1.Entity">
            <summary>
            Objeto hasta el cuál se está midiendo la distancia.
            </summary>
        </member>
        <member name="P:Kriptok.Entities.DistanceTo3D`1.Distance">
            <summary>
            Distancia hasta el objeto referenciado.
            </summary>            
        </member>
        <member name="M:Kriptok.Entities.DistanceTo3D`1.RejectMeHalfRadius">
            <summary>
            Hace que la entidad que evaluó la colisión se aleje de la otra hasta
            la mitad de la distancia necesaria para evitar la colisión de radios.
            
            Asumiendo que en la misma iteración de procesos, la otra entidad hará 
            el movimiento opuesto, distanciando totalmente las entidades.
            </summary>
        </member>
        <member name="T:Kriptok.Helpers.EnumTypeHelper">
            <summary>
            Funcionalidades para trabajar con tipos enumerados.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.EnumTypeHelper.GetValues``1">
            <summary>
            Obtiene un arreglo de valores del enumerado.
            </summary>        
        </member>
        <member name="T:Kriptok.Helpers.StructHelper">
            <summary>
            Funcionalidades extendidas para estructuras básicas.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.StructHelper.Swap``1(``0@,``0@)">
            <summary>
            Intercambia dos elementos.
            </summary>        
        </member>
        <member name="T:Kriptok.Helpers.ConsoleHelper">
            <summary>
            Funcionalidades para aplicaciones de consola.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.ConsoleHelper.Error(System.String)">
            <summary>
            Loggea un error en la consola.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.ConsoleHelper.Error(System.Exception)">
            <summary>
            Loggea una excepción en la consola.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.ConsoleHelper.UsingColors(System.ConsoleColor,System.ConsoleColor,System.Action)">
            <summary>
            Crea un contexto en el que la consola usa un color determinado.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.ConsoleHelper.ExecConsoleCommand(System.String)">
            <summary>
            Esta función ejecuta un comando de consola.
            </summary>
            <param name="command">Comando a ejecutar.</param>        
            <returns>Devuelve la respuesta recibida en la salida estándar.</returns>
        </member>
        <member name="T:Kriptok.Helpers.DebugHelper">
            <summary>
            Funcionalidades de ayuda para el modo DEBUG.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.DebugHelper.CheckDistance(System.Single,System.Single,System.Single)">
            <summary>
            Valida si la distancia absoluta entre dos valores es menor a un parámetro dado.
            </summary>        
        </member>
        <member name="T:Kriptok.Helpers.SinCosHelper">
            <summary>
            Clase utilizada para el cálculo de Senos y Cosenos tabulados.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.SinCosHelper.TabSinF(System.Single)">
            <summary>
            Obtiene el seno precalculado para el ángulo (en radianes) indicado.
            
            Sólo optimiza en modo DEBUG, de lo contrario, se utiliza la misma función que antes.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.SinCosHelper.TabCosF(System.Single)">
            <summary>
            Obtiene coseno precalculado para el ángulo (en radianes) indicado.
            
            Sólo optimiza en modo DEBUG, de lo contrario, se utiliza la misma función que antes.
            </summary>
        </member>
        <member name="T:Kriptok.Helpers.ThreadMessagingHelper">
            <summary>
            Funcionalidades utilizadas para comunicarse entre threads.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.BoolHelper.TestAndSetInverse(System.Boolean@)">
            <summary>
            Realiza un <see cref="M:Kriptok.Helpers.BoolHelper.TestAndSet(System.Boolean@)"/> pero con los valores booleanos invertidos.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.TypeHelper.RetrieveAll(System.Boolean)">
            <summary>
            
            </summary>
            <param name="force">Fuerza a cargar todos los ensamblados que encuentre en la ruta
            donde se encuentra corriendo el programa.</param>        
        </member>
        <member name="M:Kriptok.Helpers.TypeHelper.GetByName(System.String)">
            <summary>
            Esta función busca en todas las librerías referenciadas un tipo indicado por su nombre.
            Si dos tipos se llaman exactamente igual, devolverá la primera que encuentre que puede o no ser la correcta.
            Por tanto, se debería especificar la clase con todo su namespace.
            </summary>
            <param name="typeName">Nombre de la clase.</param>        
        </member>
        <member name="M:Kriptok.Helpers.TypeHelper.GetByAssemblyQualifiedName(System.String)">
            <summary>
            Esta función busca en todas las librerías referenciadas un tipo indicado por su nombre.
            Si dos tipos se llaman exactamente igual, devolverá la primera que encuentre que puede o no ser la correcta.
            Por tanto, se debería especificar la clase con todo su namespace.
            </summary>
            <param name="assemblyQualifiedName">Nombre de la clase.</param>        
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwSize">
            <summary>
            size of structure
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwFlags">
            <summary>
            flags to dicate what to return
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwXpos">
            <summary>
            x position
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwYpos">
            <summary>
            y position
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwZpos">
            <summary>
            z position
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwRpos">
            <summary>
            rudder/4th axis position
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwUpos">
            <summary>
            5th axis position
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwVpos">
            <summary>
            6th axis position
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwButtons">
            <summary>
            button states
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwButtonNumber">
            <summary>
            current button number pressed
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwPOV">
            <summary>
            point of view state
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwReserved1">
            <summary>
            reserved for communication between winmm driver
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JOYINFOEX.dwReserved2">
            <summary>
            reserved for future expansion
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JoystickHelper.connectedWhenStarted">
            <summary>
            Indica si el joystick estaba conectado cuando se inició el juego.
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.JoystickHelper.connected">
            <summary>
            Indica si el joystick sigue conectado.
            </summary>
        </member>
        <member name="T:Kriptok.Helpers.LogHelper">
            <summary>
            Funcionalidades generales para loggeo de información a archivo.
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.LogHelper.on">
            <summary>
            Lockeador para que no se requiera el mismo archivo al mismo tiempo.
            </summary>
        </member>
        <member name="T:Kriptok.Helpers.PointFHelper">
            <summary>
            Funcionalidades de ayuda relacionadas a la clase <see cref="T:System.Drawing.PointF"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.PointFHelper.SortClockwise(System.Drawing.PointF[])">
            <summary>
            Ordena los puntos bidimensionales en el orden de las agujas del reloj.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.PointFHelper.TriangleArea(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Calcula el área interior de un triángulo dado por tres <see cref="T:System.Drawing.PointF"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.PointFHelper.TriangleAreaX2(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Calcula el doble del área interior de un triángulo dado por tres <see cref="T:System.Drawing.PointF"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.ColorHelper.OldToNew(System.Int32)">
            <summary>
            Transforma una coordenada de color del formato viejo de MS-DOS (0..63) a (0..255).
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.ColorHelper.Lerp(System.UInt32,System.UInt32,System.Single)">
            <summary>
            Intercala dos colores en la proporción indicada por la variación.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.ExceptionHelper.ValidateRangeCO(System.Int32,System.Int32,System.Int32)">
            <summary>
            Valida que el rango del valor sea entre [0, max), es decir, cerrado en 0, abierto en max)
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.ExceptionHelper.MsgBox(System.Exception)">
            <summary>
            Muestra por pantalla la excepción recibida.
            </summary>        
        </member>
        <member name="T:Kriptok.Helpers.ImageAttributesHelper">
            <summary>
            Funcionalidades que facilitan el trabajo con instancias de <see cref="T:System.Drawing.Imaging.ImageAttributes"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.ImageAttributesHelper.GetAlphaIA(System.Byte)">
            <summary>
            Obtiene una instancia de <see cref="T:System.Drawing.Imaging.ImageAttributes"/> que aplica transparencia.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.ImageAttributesHelper.Alpha(System.Single)">
            <summary>
            Crea una instancia de <see cref="T:System.Drawing.Imaging.ImageAttributes"/> que sólo modifica la transparencia de la imagen.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.FloatHelper.SortMinMax(System.Single@,System.Single,System.Single@)">
            <summary>
            Ordena tres valores de tipo float, pero sólo actualiza el máximo y el mínimo.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.IntHelper.Iota(System.Int32)">
            <summary>
            Genera un arreglo de números secuenciales a partir del 0, hasta el número
            indicado por parámetro (no incluído).
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.IntHelper.Iota(System.Int32,System.Int32)">
            <summary>
            Genera un arreglo de números secuenciales en el rango descripto por
            los parámetros (no incluyendo al límite superior).
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Kriptok.Helpers.IntHelper.BetweenCloseOpen(System.Int32,System.Int32,System.Int32)" -->
        <member name="T:Kriptok.Helpers.XmlHelper">
            <summary>
            Funcionalidades de ayuda rápida para trabajar con texto Xml.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.XmlHelper.Serialize(System.Object,System.Boolean)">
            <summary>
            Serializa un objeto a XML.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.XmlHelper.Deserialize``1(System.String)">
            <summary>
            Deserializa un texto Xml al tipo indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.XmlHelper.DeserializeFile``1(System.String)">
            <summary>
            Deserializa un archivo de texto en formato Xml al tipo indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.XmlHelper.Deserialize``1(System.Reflection.Assembly,System.String)">
            <summary>
            Deserializa un recurso en formato Xml al tipo indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.XmlHelper.SerializeTo(System.Object,System.String)">
            <summary>
            Serializa un objeto a Xml y lo guarda en el archivo indicado.
            </summary>        
        </member>
        <member name="T:Kriptok.Helpers.ArrayHelper">
            <summary>
            Grupo de funcionalidades comunes para arrays.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.ArrayHelper.FastCopy(System.Int32[0:,0:])">
            <summary>
            Hace una copia en memoria de una matrix para hacerlo más performante.
            </summary>        
            <param name="matrix">Matrix de la cuál se desea generar la copia.</param>
            <returns>Devuelve una copia de la matriz indicada por parámetro.</returns>
        </member>
        <member name="M:Kriptok.Helpers.ArrayHelper.AreEqual(System.Int32[],System.Int32[])">
            <summary>
            Indica si dos vectores son iguales. Para esto, los valores "null" se toman como si 
            el array estuviera vacío.
            </summary>        
        </member>
        <member name="T:Kriptok.Helpers.BitmapHelper">
            <summary>
            Agrupador de funcionalidades de ayuda sobre <see cref="T:System.Drawing.Bitmap"/>s.
            </summary>
        </member>
        <member name="T:Kriptok.Helpers.ResourcesHelper">
            <summary>
            Clase estática dedicada a facilitar la obtención y manipulación de recursos.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.ResourcesHelper.GetResources(System.Reflection.Assembly,System.String)">
            <summary>
            Obtiene una lista con varios recursos que contengan la cadena indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.ResourcesHelper.GetBytes(System.Reflection.Assembly,System.String)">
            <summary>
            Obtiene los datos binarios del recurso indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.ResourcesHelper.ResolveId(Kriptok.Common.Resource)">
            <summary>        
            Graba un recurso indicado por parámetro como archivo para ser ejecutado más tarde. Devuelve
            el id del recurso para identificarlo.
            </summary>        
        </member>
        <member name="T:Kriptok.Helpers.KeyboardHelper">
            <summary>
            Esta clase es utilizada para descubrir las interacciones del usuario.
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.KeyboardHelper.keyStatus">
            <summary>
            Utilizado para saber cuando se presiona y suelta una tecla.
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.KeyboardHelper.lastKeyDown">
            <summary>
            Última tecla presioanda.
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.KeyboardHelper.lastKeyUp">
            <summary>
            Código de la última tecla presionada.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.KeyboardHelper.Key(System.Windows.Forms.Keys)">
            <summary>
            Indica si la tecla indicada se encuentra presionada.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.KeyboardHelper.KeyPressed">
            <summary>
            Indica si se presionó alguna tecla.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.KeyboardHelper.AnyKeyPressed">
            <summary>
            Devuelve la tecla presionada si se ha presionado una tecla.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.KeyboardHelper.KeyPress(System.Windows.Forms.Keys)">
            <summary>
            Indica si se presionó una tecla. Es decir, si pasa de estado "no presionada" a "presionada".
            
            Pero devuelve <see cref="!:false"/>, si la está manteniendo presionada.
            </summary>    
        </member>
        <member name="T:Kriptok.Helpers.MathHelper">
            <summary>
            Funciones matemáticas extra.
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.MathHelper.TwoPI">
            <summary>
            PI x 2
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.MathHelper.Cos45">
            <summary>
            Obtiene el seno y coseno de un ángulo de 45°. Es decir, Sqrt(2)/2.
            </summary>
        </member>
        <member name="F:Kriptok.Helpers.MathHelper.Gravity">
            <summary>
            Constante de aceleración gravitatoria.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.SinF(System.Single)">
            <summary>
            Obtiene el seno de un ángulo y lo devuelve en tipo de dato <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.CosF(System.Single)">
            <summary>
            Obtiene el coseno de un ángulo y lo devuelve en tipo de dato <see cref="T:System.Single"/>.
            </summary>     
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetDistanceF(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Calcula la distancia tridimensional entre dos puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetDistance(Kriptok.Drawing.Vector2I,Kriptok.Drawing.Vector2I)">
            <summary>
            Calcula la distancia bidimensional entre dos puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetDistanceF(Kriptok.Drawing.Vector2I,Kriptok.Drawing.Vector2I)">
            <summary>
            Calcula la distancia bidimensional entre dos puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.Sign0PositiveF(System.Single)">
            <summary>
            Obtiene el signo del valor, pero tomando el cero como positivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.SinF(System.Double)">
            <summary>
            
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.RadiansToDegrees(System.Single)">
            <summary>
            Convierte un ángulo en radiantes a grados.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.RadiansToMinusDegrees(System.Single)">
            <summary>
            Convierte un ángulo en radiantes a grados negativos.
            Es un cambio de signo que se ahorra en ciclos.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetDistance(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calcula la distancia entre los puntos indicados.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetDistanceF(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calcula la distancia entre los puntos indicados.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetDistance(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calcula la distancia entre los puntos indicados.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.SimplifyAngle(System.Double)">
            <summary>
            Busca el ángulo correspondiente al indicado que se encuentra entre 0 y 2pi.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.NormalizeAngle(System.Single)">
            <summary>
            Normaliza un ángulo y lo deja entre -π y π
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.SimplifyAngle(System.Single)">
            <summary>
            Busca el ángulo correspondiente al indicado que se encuentra entre 0 y 2pi.
            </summary>
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetAngle(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Devuelve el ángulo entre dos puntos indicados por las coordenadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetAngleF(System.Single,System.Single)">
            <summary>
            Devuelve el ángulo del vector indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetAngleF(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Devuelve el ángulo del vector indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetAngleF(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Devuelve el ángulo entre dos vectores.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.GetAngleF(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Devuelve el ángulo entre dos puntos indicados por las coordenadas.
            </summary>      
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.Avg(System.Single,System.Single)">
            <summary>
            Obtiene el promedio entre dos valores. 
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.Avg(System.Single,System.Single,System.Single)">
            <summary>
            Obtiene el promedio entre dos valores. 
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.Avg(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Obtiene el negativo del promedio entre cuatro valores. 
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.NAvg(System.Single,System.Single)">
            <summary>
            Obtiene el promedio entre dos valores. 
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.NAvg(System.Single,System.Single,System.Single)">
            <summary>
            Obtiene el negativo del promedio entre tres valores. 
            </summary>       
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.NAvg(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Obtiene el negativo del promedio entre cuatro valores. 
            </summary>       
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.SignedMax(System.Single,System.Single)">
            <summary>
            Obtiene el valor que se encuentra más lejos del 0 en la recta numérica,
            independientemente de su signo.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.SignedMax(System.Single,System.Single,System.Single)">
            <summary>
            Obtiene el valor que se encuentra más lejos del 0 en la recta numérica,
            independientemente de su signo.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.SignedMax(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Obtiene el valor que se encuentra más lejos del 0 en la recta numérica,
            independientemente de su signo.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.SignedMax(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Obtiene el valor que se encuentra más lejos del 0 en la recta numérica,
            independientemente de su signo.
            </summary>        
        </member>
        <member name="M:Kriptok.Helpers.MathHelper.SignedMin(System.Single,System.Single)">
            <summary>
            Obtiene el valor que se encuentra más cerca del 0 en la recta numérica,
            independientemente de su signo.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Entities.MapEntityXBase`1">
            <summary>
            Entidad registrada para ser creada cuando se crea el mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Entities.MapEntityXBase`1.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Entities.MapEntityXBase`1"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Entities.MapEntityXBase`1.#ctor(`0)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Entities.MapEntityXBase`1"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Entities.MapEntityXBase`1.Equals(`0)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Mapping.Entities.MapEntityXBase">
            <summary>
            Entidad registrada para ser creada cuando se crea el mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Entities.MapEntityXBase.Id">
            <summary>
            Id de la entidad.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Entities.MapEntityXBase.TypeId">
            <summary>
            Id del tipo de entidad.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Entities.MapEntityXBase.X">
            <summary>
            Coordenada X donde se posiciona inicialmente la entidad. En caso
            de mapas de tiles, el tile específico.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Entities.MapEntityXBase.Y">
            <summary>
            Coordenada Y donde se posiciona inicialmente la entidad. En caso
            de mapas de tiles, el tile específico.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Entities.MapEntityXBase.Direction">
            <summary>
            Ángulo sobre el plano XY en el que "mira" la entidad al comenzar.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Entities.MapEntityXBase.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Entities.MapEntityXBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Entities.MapEntityXBase.#ctor(Kriptok.Mapping.Entities.MapEntityXBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Entities.MapEntityXBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Entities.MapEntityXBase.Equals(Kriptok.Mapping.Entities.MapEntityXBase)">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Mapping.Entities.MapEntityXBase.Data">
            <summary>
            Información configurable de la entidad desde el editor de mapas.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Entities.MapEntityXBase.Item(System.String)">
            <summary>
            Obtiene o establece un metadato del vértice.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Entities.EntitySet">
            <summary>
            Colección de entidades que pueden aparecer en editores de mapas.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Entities.EntitySet.types">
            <summary>
            Tipos registrados.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Entities.EntitySet.initializers">
            <summary>
            Inicializadores de las entidades.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Entities.EntitySet.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Entities.EntitySet"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Entities.EntitySet.Add``1(System.Int32)">
            <summary>
            Agrega una entidad a la lista de entidades renderizables.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Entities.EntitySet.Add``1(System.Int32,System.Func{Kriptok.Mapping.Entities.MapEntityCreationArgs,``0})">
            <summary>
            Agrega una entidad a la lista de entidades renderizables.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Entities.EntitySet.Add(System.Int32,System.Type,System.Func{Kriptok.Mapping.Entities.MapEntityCreationArgs,Kriptok.Entities.Base.EntityBase})">
            <summary>
            Agrega una entidad a la lista de entidades renderizables.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Entities.EntitySet.RetrieveAll">
            <summary>
            Obtiene todas las entidades registradas en la colección.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Entities.EntitySet.AddEntity(Kriptok.Core.RegionBase,Kriptok.Mapping.Entities.MapEntityXBase)">
            <summary>
            Instancia una entidad en base a la configuración recibida por parámetro, y la agrega a 
            la región indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Entities.EntitySet.AddEntity(Kriptok.Core.RegionBase,Kriptok.Mapping.Entities.MapEntityXBase,System.Action{Kriptok.Mapping.Entities.MapEntityCreationArgs})">
            <summary>
            Instancia una entidad en base a la configuración recibida por parámetro, y la agrega a 
            la región indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Entities.EntitySet.CreateEntity(Kriptok.Core.RegionBase,Kriptok.Mapping.Entities.MapEntityXBase)">
            <summary>
            Crea une entidad, pero no la agrega a la región.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Entities.EntitySet.CreateEntity(Kriptok.Core.RegionBase,Kriptok.Mapping.Entities.MapEntityXBase,System.Action{Kriptok.Mapping.Entities.MapEntityCreationArgs})">
            <summary>
            Crea une entidad, pero no la agrega a la región.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Entities.MapEntityCreationArgs">
            <summary>
            Argumentos para la creación de entidades em
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Entities.MapEntityCreationArgs.Region">
            <summary>
            Región en la que se creó la entidad.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Entities.MapEntityCreationArgs.EntityX">
            <summary>
            Datos de la entidad cargados desde el editor de mapas.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Entities.TileMapEntityCollection">
            <summary>
            Colección de entidades registradas en un mapa.
            
            Cruza los datos registrados en el archivo de mapas con el <see cref="T:Kriptok.Mapping.Entities.EntitySet"/> indicado.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Entities.TileMapEntityCollection.entities">
            <summary>
            Entidades que se encuentran registradas en el mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Entities.TileMapEntityCollection.entitySet">
            <summary>
            Tipos de entidades que se pueden registrar en el mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Entities.MetadataDataItemX">
            <summary>
            Elemento de configuración genérico.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Entities.MetadataDataItemX.K">
            <summary>
            Creados para refactor. Borrar los otros cuando
            se terminen de actualizar todos los mapas.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Entities.MetadataDataItemX.V">
            <summary>
            Creados para refactor. Borrar los otros cuando
            se terminen de actualizar todos los mapas.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Entities.IHasMetadataX">
            <summary>
            Interfaz creada para para entidades que permiten extensibilidad en 
            editores de mapas.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Entities.IHasMetadataX.Data">
            <summary>
            Colección de metadatos.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Entities.IHasMetadataX.Item(System.String)">
            <summary>
            Obtiene o establece un metadato del vértice.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Entities.MapEntityInitializationArgs.Get``1(System.String)">
            <summary>
            Si se usa el tipo <see cref="T:System.String"/>, toma como valor por defecto <see cref="F:System.String.Empty"/>, por lo
            que no hace falta validar que sea distinto que null.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Base.MapResourceSetBase">
            <summary>
            Clase base para colecciones de recursos.
            Principalmente para ser accedidos en editores de mapas.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Base.MapResourceSetBase.Entities">
            <summary>
            Listado de entidades genéricas que deben aparecer en el editor de mapas.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Base.MapResourceSetBase`1">
            <summary>
            Clase base para colecciones de recursos.
            Principalmente para ser accedidos en editores de mapas.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Base.MapResourceSetBase`1.GetMapEditorConfig">
            <summary>
            Obtiene la configuración completa para el editor de mapas.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Base.MapResourceSetBase`1.ConfigureMapEditor(`0)">
            <summary>
            Customización de la configuración para el editor de mapas.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Base.MapEditorConfigBase">
            <summary>
            Configuración básica para que levanten programas de edición de mapas.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Base.MapEditorPreviewX">
            <summary>
            Propiedades del mapa que sólo son necesarias o referenciadas en el editor de mapas.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Base.MapEditorPreviewX.X">
            <summary>
            Coordenada X donde se encuentra la cámara al momento del preview del mapa en el editor.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Base.MapEditorPreviewX.Y">
            <summary>
            Coordenada Y donde se encuentra la cámara al momento del preview del mapa en el editor.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Base.MapEditorPreviewX.Height">
            <summary>
            Altura de la cámara al momento del preview del mapa en el editor.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Base.MapEditorPreviewX.Angle">
            <summary>
            Ángulo de la cámara al momento del preview del mapa en el editor.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Base.MapEditorPreviewX.YShearing">
            <summary>
            Distorción vertical de la cámara para simular ver hacia abajo o hacia arriba.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Base.MapEditorPreviewX.DraftFile">
            <summary>
            Nombre del archivo "borrador" que se debe cargar en el editor como "fondo" de la edición
            para tomar de guía a la hora de construir el mapa encima.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Base.MapEditorPreviewX.ResourceName">
            <summary>
            Indica el nombre de la clase que tiene la colección de texturas utilizadas por el mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Base.MapEditorPreviewX.WindowMode">
            <summary>
            Indica la resolución a utilizar en la vista previa del editor.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Base.MapEditorPreviewX.GetResourceSetInstance``1">
            <summary>
            Instancia el recurso utilizado por el mapa.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Base.MapBaseX`2">
            <summary>
            Clase base para confección de mapas que se guardan en formato Xml.
            </summary>    
        </member>
        <member name="M:Kriptok.Mapping.Base.MapBaseX`2.#ctor">
            <summary>
            Constructor necesario para poder deserializar desde XML.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Base.MapBaseX`2.Preview">
            <summary>
            Objeto que almacena las propiedades de renderización en los editores de mapas.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Base.MapBaseX`2.Load``1(System.String)">
            <summary>
            Carga un mapa desde un archivo
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Base.MapBaseX`2.LoadXml``1(System.String,System.String)">
            <summary>
            Carga un mapa desde un Xml.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Base.MapBaseX`2.Entities">
            <summary>
            Entidades registradas para el mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Base.MapBaseX">
            <summary>
            Clase base para confección de mapas que se guardan en formato Xml.
            </summary>    
        </member>
        <member name="M:Kriptok.Mapping.Base.MapBaseX.#ctor">
            <summary>
            Constructor necesario para poder deserializar desde XML.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Base.MapBaseX.FileName">
            <summary>
            Nombre del archivo guardado, se utiliza más que nada para guardar los cambios.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Base.MapBaseX.Save(System.String)">
            <summary>
            Guarda el mapa como archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Base.MapBaseX.LoadAssembliesForMapEditor">
            <summary>
            Carga los ensamblados que se encuentren en la carpeta del proyecto al cual pertenece el mapa.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Base.IMapEditorEntity">
            <summary>
            Esta interfaz representa un objeto que puede ser agregado a un mapa siendo configurado desde
            el tileset, o creado en un proyecto de juego, y ser agregado al mapa desde el editor.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Terrains.Editor.PerlinMapEntityX">
            <summary>
            Configuración de entidad para mapas de tipo <see cref="T:Kriptok.Mapping.Terrains.Editor.PerlinMapEntityX"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Terrains.Editor.PerlinMapEntityX.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Terrains.Editor.PerlinMapEntityX"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Terrains.Editor.PerlinMapEntityX.#ctor(Kriptok.Mapping.Terrains.Editor.PerlinMapEntityX)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Terrains.Editor.PerlinMapEntityX"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Terrains.Editor.PerlinMapX">
            <summary>
            Clase a la que se deserializan los terrenos de alturas generados proceduralmente.
            </summary>    
        </member>
        <member name="P:Kriptok.Mapping.Terrains.Editor.PerlinMapX.SizeX">
            <summary>
            Ancho en potencia de 2 del mapa a generar.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Terrains.Editor.PerlinMapX.SizeY">
            <summary>
            Alto en potencia de 2 del mapa a generar.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Terrains.Editor.PerlinMapX.RandomSeed">
            <summary>
            Semilla aleatoria utilizada por el algoritmo.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Terrains.Editor.PerlinMapX.OctaveCount">
            <summary>
            Cantidad de iteraciones a realizar.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Terrains.Editor.PerlinMapX.ScalingBias">
            <summary>
            Factor de escalado.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Terrains.Editor.PerlinMapX.Pow1">
            <summary>
            Potencia para amplicar contraste.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Terrains.Editor.PerlinMapX.Pow2">
            <summary>
            Potencia para redondear.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Terrains.Editor.PerlinMapX.Serialize(System.Boolean)">
            <summary>
            Serializa el mapa a Xml.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Terrains.Editor.PerlinMapX.Clone">
            <summary>
            Devuelve una copia del mapa.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Terrains.Editor.PerlinMapX.Load(System.String)">
            <summary>
            Carga un mapa desde un archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Terrains.Editor.PerlinMapX.Load(System.Reflection.Assembly,System.String)">
            <summary>
            Carga un mapa desde un recurso.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Terrains.Editor.PerlinMapX.Load(System.String,System.String)">
            <summary>
            Carga un mapa desde un xml.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Terrains.Editor.PerlinMapX.Load(Kriptok.Mapping.Terrains.Editor.PerlinMapX)">
            <summary>
            Carga propiedades extra en tiempo de ejecución después de parsear el Xml.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Terrains.Editor.PerlinMapX.GetRandomizer">
            <summary>
            Obtiene un generador de números aleatorios.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Terrains.Editor.PerlinMapPreviewX">
            <summary>
            Opciones de previsualización del mapa de alturas.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Terrains.Editor.IRandomizer">
            <summary>
            Generador de números aleatorios.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Terrains.Editor.IRandomizer.Sample(System.Int32)">
            <summary>
            Obtiene un número aleatorio entre 0 y 1.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Terrains.TileMapTerrain">
            <summary>
            Esta clase representa un terreno generado específicamente para mapas basados en tiles.     
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Terrains.TileMapTerrain.#ctor(System.Byte[0:,0:],Kriptok.Views.Shapes.IGdipTexture,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Terrains.TileMapTerrain"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Terrains.TileMapTerrain.#ctor(System.Byte[0:,0:],Kriptok.Views.Shapes.IGdipTexture,System.Drawing.Size)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Terrains.TileMapTerrain"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Terrains.TileMapTerrain.RemoveY0Faces">
            <summary>
            Remueve las caras que tiene Y = 0 en todas los vértices.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Terrains.SByteTerrainData.OnLoad(System.Byte[][])">
            <summary>
            Este método no tiene sentido para este tipo de terreno.
            Ni siquiera tiene el constructor que lo llama.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Terrains.ByteTerrainData.OnLoad(System.Byte[][])">
            <summary>
            Carga los bytes cuando se genera desde un mapa de alturas.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Terrains.TerrainDataBase">
            <summary>
            Clase base para información de terrenos basados en mapas de alturas.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Terrains.TerrainDataBase.GetCalculatedSize(System.Drawing.Size,System.Boolean)">
            <summary>
            Obtiene el tamaño del terreno (cantidad de vértices a lo alto y ancho) según
            sea infinito o no.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Terrains.TerrainDataBase`1.Item(System.Int32,System.Int32)">
            <summary>
            Obtiene o establece el valor de la matriz indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Terrains.TerrainDataBase`1.Resized(System.Drawing.Size,System.Drawing.SizeF,System.Boolean)">
            <summary>
            Genera un nuevo terrain igual al actual, pero redimensionado.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.MapEditorTexsetConfig">
            <summary>
            Configuraciones para el editor de mapas tridimensionales.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Tiles.Base.Tileset4Base">
            <summary>
            Representa un set de tiles de una sola capa de cuatro bytes.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Tiles.Base.TileBuilder">
            <summary>
            Funcionalidades de ayuda para generar Tiles.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.TileBuilder.MergeTiles(Kriptok.Mapping.Tiles.FastTileData,System.Drawing.Size,Kriptok.Mapping.Tiles.Map2DTileInfo[])">
            <summary>
            Este es el método principal, que une todas las capas y genera los nuevos tiles.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.TileBuilder.ResolveFlags(Kriptok.Mapping.Tiles.TileFlagsEnum,Kriptok.Mapping.Tiles.TileFlagsEnum)">
            <summary>
            Resuelve los flags que va a tener el nuevo "tile" generado con los tiles de las diferentes capas.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.TileBuilder.GetTile(System.Drawing.Size,Kriptok.Drawing.FastBitmap,System.Int32,System.Int32)">
            <summary>
            Este método crea un tile "básico", es decir, extrae un cuadrado del tamaño indicado por parámetro
            de la posición indicada, sin animación, ni nada especial.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.TileBuilder.BuildTile(System.Drawing.Size,Kriptok.Drawing.FastBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Recordar que los tiles se arman al revés.
            </summary>               
        </member>
        <member name="T:Kriptok.Mapping.Tiles.Base.ITileCanvas">
            <summary>
            Interfaz que presentan los objetos que pueden servir ocmo "lienzo" para dibujar tiles.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.ITileCanvas.BlitXY(Kriptok.Drawing.FastBitmap,System.Int32,System.Int32)">
            <summary>
            Copia los bites de un tile al objeto actual en la posición indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.ITileCanvas.BlitX0(Kriptok.Drawing.FastBitmap,System.Int32)">
            <summary>
            Copia los bites de un tile al objeto actual en la posición X indicada, y en Y = 0.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Tiles.Base.Tileset121Base">
            <summary>
            Representa un set de tiles tres capas, que utiliza un byte para la primera, uno para la última y dos para la del medio.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Tiles.Base.Tileset22Base">
            <summary>
            Representa un set de tiles con dos capas de dos bytes cada una.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Tiles.Base.Tileset112Base">
            <summary>
            Representa un set de tiles tres capas, que utiliza un byte para la primera y la segunda y dos para la tercera.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.Tileset112Base.Read(Kriptok.Mapping.Tiles.Editor.TileMapX)">
            <summary>
            Lee la información de un mapa, y genera un arreglo fácil de leer y transformar
            en otras estructuras.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.Tileset112Base.Read(Kriptok.Drawing.FastBitmap)">
            <summary>
            Lee la información de un mapa, y genera un arreglo fácil de leer y transformar
            en otras estructuras.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Tiles.Base.Tileset112Base.TiledMapDataBase`1.Size">
            <summary>
            Obtiene el tamaño del mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Tiles.Base.Tileset112Base.Tile112">
            <summary>
            Representa un tile con dos capas de un byte y una capa de dos bytes.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Tiles.Base.Tileset1111Base">
            <summary>
            Representa un set de tiles con cuatro capas, que utiliza un byte para cada capa.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Tiles.Base.ITile">
            <summary>
            Interfaz básica para un Tile de un mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.ITile.TileSample(System.Int32,System.Int32)">
            <summary>
            Obtiene el color correspondiente al pixel indicado por sus coordenadas, 
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.ITile.BlitOn(Kriptok.Mapping.Tiles.Base.ITileCanvas,System.Int32,System.Int32)">
            <summary>
            Dibuja el tile en el bitmap indicado por parámetro en las coordenadas indicadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.ITile.BlitOnX0(Kriptok.Mapping.Tiles.Base.ITileCanvas,System.Int32)">
            <summary>
            Dibuja el tile en el bitmap indicado por parámetro en la coordenada X indicada
            y en Y = 0.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.ITile.GetFlags">
            <summary>
            Obtiene los flags (metadata) del tile.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.ITile.Refresh(System.Int32)">
            <summary>
            Implementación del comportamiento de tiles animados.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Tiles.Base.ITile.Animated">
            <summary>
            Indica si el tile es animado o no.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Tiles.Base.TilesetBase">
            <summary>
            Representa un mapa en dos dimensiones construido con tiles.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.Base.TilesetBase.TileSize">
            <summary>
            Tamaño de los tiles.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Tiles.Base.TilesetBase.Layers">
            <summary>
            Capas definidas para el tileset.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.TilesetBase.#ctor(System.Int32,System.Int32)">
            <summary>
            Devulve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Tiles.Map2DAutoTileInfo"/>.
            </summary>      
        </member>
        <member name="P:Kriptok.Mapping.Tiles.Base.TilesetBase.Assembly">
            <summary>
            Obtiene el ensamblado en el que está definido el tileset.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.TilesetBase.CreateAnimatedTile(Kriptok.Drawing.FastBitmap,Kriptok.Drawing.Vector2I[])">
            <summary>
            Crea un tile animado para este tileset.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.TilesetBase.GetBasicTiles(Kriptok.Drawing.FastBitmap,System.Func{System.Int32,System.Int32,System.Boolean})">
            <summary>
            Agrega una lista de tiles básicos, es decir, sin animación ni comportamiento alguno.
            Recorre todos los tiles de la imagen, y si cumplen con la condición indicada, los agrega.
            </summary>
            <param name="bmp">Imagen con los tiles.</param>
            <param name="func">Función que determina si debe agregar los tiles o no.</param>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.TilesetBase.GetBasicTiles(System.Drawing.Size,Kriptok.Drawing.FastBitmap,System.Func{System.Int32,System.Int32,System.Boolean})">
            <summary>
            Agrega una lista de tiles básicos, es decir, sin animación ni comportamiento alguno.
            Recorre todos los tiles de la imagen, y si cumplen con la condición indicada, los agrega.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.TilesetBase.GetTile(Kriptok.Drawing.FastBitmap,System.Int32,System.Int32)">
            <summary>
            Este método crea un tile "básico", es decir, extrae un cuadrado del tamaño indicado en <see cref="F:Kriptok.Mapping.Tiles.Base.TilesetBase.TileSize"/>
            de la posición indicada, sin animación, ni nada especial.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.TilesetBase.BuildTile(Kriptok.Drawing.FastBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Recordar que los tiles se arman al revés.
            </summary>               
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.TilesetBase.GetSampleTexture(System.Int32,System.Int32,Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Obtiene una textura en base a un tile de un <see cref="T:Kriptok.Mapping.Tiles.Base.TilesetBase"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Base.TilesetBase.RetrieveAll">
            <summary>
            Obtiene todos los <see cref="T:Kriptok.Mapping.Tiles.Base.TilesetBase"/> que haya en los ensamblados cargados en el dominio.        
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Tiles.TileMapInfo`1">
            <summary>
            Representa la información de un mapa de tiles, antes de ser procesada para crear el mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMapInfo`1.#ctor(System.Reflection.Assembly,System.String)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Tiles.TileMapInfo"/> en base al <see cref="T:Kriptok.Mapping.Tiles.Editor.TileMapX"/>
            indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMapInfo`1.#ctor(Kriptok.Mapping.Tiles.Editor.TileMapX)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Tiles.TileMapInfo"/> en base al <see cref="T:Kriptok.Mapping.Tiles.Editor.TileMapX"/>
            indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Tiles.TileMapInfo">
            <summary>
            Representa la información de un mapa de tiles, antes de ser procesada para crear el mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileMapInfo.entities">
            <summary>
            Objetos a crear en el mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMapInfo.#ctor(Kriptok.Mapping.Tiles.Editor.TileMapX,Kriptok.Mapping.Tiles.Base.TilesetBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Tiles.TileMapInfo"/> en base al <see cref="T:Kriptok.Mapping.Tiles.Editor.TileMapX"/>
            indicado por parámetro.        
            </summary>        
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileMapInfo.Bitmap">
            <summary>
            Bits del mapa de tiles.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Tiles.TileMapInfo.Tileset">
            <summary>
            Tileset a utilizar para generar el mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Tiles.TileMapInfo.InfiniteScroll">
            <summary>
            Indica si el mapa se repite infinitamente horizontal y verticalmente.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Tiles.TileMapInfo.Size">
            <summary>
            Tamaño (en tiles) del mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Tiles.TileMapInfo.TileSize">
            <summary>
            Obtiene el tamaño de los tiles del mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Tiles.TileMapInfo.FullSize">
            <summary>
            Tamaño (en pixels) del mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Tiles.TileMapInfo.Layers">
            <summary>
            Cantidad de "capas" que tiene el mapa (entre 1 y 4).
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Tiles.TileMapInfo.Item(System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene o establece el valor del tile en las coordenadas y la capa
            indicadas por parámetro.
            </summary>
            <param name="layerIndex">Capa sobre la cual se desea operar.</param>
            <param name="x">Coordenada X del tile.</param>
            <param name="y">Coordenada Y del tile.</param>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMapInfo.CreateTiledMap">
            <summary>
            Instancia el mapa para que pueda ser renderizado.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMapInfo.GetBaseAndOverlayLayers">
            <summary>
            Genera y retorna dos mapas de tiles, uno para el mapa basa, y otro para 
            la "capa superior" (ver <see cref="F:Kriptok.Mapping.Tiles.TileFlagsEnum.OverlayLayer"/>).
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMapInfo.CreateEntities(Kriptok.Core.RegionBase)">
            <summary>
            Genera instancias de los objetos registrados en el mapa.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMapInfo.GetCalculatedTerrainSize">
            <summary>
            Obtiene el tamaño de un terreno si se construyera en base 
            a este mapa.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Tiles.TileHelper">
            <summary>
            Funcionalidades de ayuda para tilear coordenadas.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileHelper.TilePositive(System.Int32,System.Int32)">
            <summary>
            Ubica una coordenada positiva entre el 0 y el máximo.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileHelper.Tile(System.Int32,System.Int32)">
            <summary>
            Tilea una coordenada entre 0 y el máximo indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileHelper.TileCoord(System.Int32,System.Int32)">
            <summary>
            Ubica una coordenada entre el 0 y el máximo.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileHelper.ChessPattern(System.Int32,System.Int32)">
            <summary>
            Devuelve el valor booleano de una coordenada, siguiendo el patrón
            de un tablero de ajedrez, con el primer casillero en "<see cref="!:true"/>".
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileHelper.GetTiler(System.Int32)">
            <summary>
            Obtiene un objeto capaz de "tilear coordenadas" de la forma más óptima posible.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileHelper.TileXY(Kriptok.Drawing.FastBitmap,Kriptok.Drawing.FastBitmap)">
            <summary>
            Para mapas cuadrados, de alto y ancho potencias de dos. Aplica una transformación para 
            que la textura se continue infinitamente vertical y horizontalmente.
            </summary>        
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TilesetLayer.maxTiles">
            <summary>
            Cantidad máxima de tiles que puede tener esta capa.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TilesetLayer.Index">
            <summary>
            Indica el índice de la capa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TilesetLayer.AddEmptyTile">
            <summary>
            Agrega un tile vacío para llenar espacios.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TilesetLayer.AddRange(Kriptok.Mapping.Tiles.Map2DTileInfo[])">
            <summary>
            Agrega una lista de tiles.
            </summary>
            <param name="newTiles">Nuevos tiles a agregar.</param>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TilesetLayer.Add(Kriptok.Mapping.Tiles.Map2DTileInfo)">
            <summary>
            Agrega un nuevo tile.
            </summary>
            <param name="newTile">Nuevo tile a agregar.</param>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TilesetLayer.GetFlags(System.Int32,System.UInt32[])">
            <summary>
            Obtiene los flags de compatibilidad con los tiles de alrededor para saber qué tile tiene que mostrar.
            </summary>
            <param name="currentValue">Id del tile en el que estoy parado, presumiblemente <see cref="!:Map2DAutoTileInfo>"/></param>
            <param name="values">Valores de los 8 tiles de los alrededores, ordenados de izquierda a derecha y 
            de arriba hacia abajo.</param>
            <returns>Devuelve los flags con los que debe dibujarse el tile.</returns>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TilesetLayer.AddTileCompatibility(System.Int32,System.Int32,System.Boolean)">
            <summary>        
            Para tiles complejos, la compatibilidad permite a un tile adherirse a otro aunque no se trate
            del mismo tile.
            </summary>     
            <param name="from">Id del tile que debe adherirse.</param>
            <param name="to">Id del tile al que se debe adherir.</param>
            <param name="bidirectional">Indica si la relación es bidireccional. Esto genera que se
            agreguen dos compatibilidades en lugar de una:
            1) From => To
            2) To => From        
            </param>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TilesetLayer.Add(System.Func{Kriptok.Mapping.Tiles.AutoTileFlagsEnum,Kriptok.Mapping.Tiles.Map2DTileInfo})">
            <summary>
            Agrega un nuevo tile.
            </summary>
            <param name="newTile">Nuevo tile a agregar.</param>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TilesetLayer.SetEmptyTile(System.Int32)">
            <summary>
            Establece el tile con el id indicado com un tile vacío. No "nulo", porque en ese
            caso no podría ser seleccionable para edición.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TilesetLayer.SetLastTileEmpty">
            <summary>
            Establece como tile vacío el último tile de la capa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TilesetLayer.AddBasicTiles(Kriptok.Drawing.FastBitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Agrega una serie de "tiles básicos".
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileAnimation.animationIndexF">
            <summary>
            Indica el tile de animación, en formato contínuo.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileAnimation.animationIndex">
            <summary>
            Índice del tile de animación a utilizar.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileAnimation.Speed">
            <summary>
            Velocidad a la cual se deben actualizar los tiles animados del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileAnimation.IncCheck(System.Int32@)">
            <summary>
            Incrementa la animación e indica si se modificó.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Tiles.MapEditorTilesetConfig">
            <summary>
            Configuraciones para el editor de mapas bidimensioanles.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Tiles.MapEditorTilesetConfig.PaletteTilesCount">
            <summary>
            Cantidad de Tiles que se pueden ver en la paleta de edición.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Tiles.MapEditorTilesetConfig.PaletteTilesScale">
            <summary>
            Escala a la cual se deben renderizar los Tiles en la paleta de edición.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Tiles.Editor.TileMapEntityX">
            <summary>
            Entidad registrada para ser creada cuando se crea el mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Editor.TileMapEntityX.#ctor">
            <summary>
            Entidad registrada para ser creada cuando se crea el mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Editor.TileMapEntityX.#ctor(Kriptok.Mapping.Tiles.Editor.TileMapEntityX)">
            <summary>
            Entidad registrada para ser creada cuando se crea el mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Tiles.Editor.TileMapX">
            <summary>
            Clase a la que se deserializan los mapas de tiles generados con el editor.
            </summary>    
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Editor.TileMapX.#ctor">
            <summary>
            Constructor necesario para poder deserializar desde XML.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Editor.TileMapX.#ctor(System.String)">
            <summary>
            Crea un <see cref="T:Kriptok.Mapping.Tiles.Editor.TileMapX"/> en base a un archivo. Necesario para el editor.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Tiles.Editor.TileMapX.Width">
            <summary>
            Ancho del mapa en tiles.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Tiles.Editor.TileMapX.Height">
            <summary>
            Alto del mapa en tiles.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Tiles.Editor.TileMapX.InfiniteScroll">
            <summary>
            Indica si el mapa debe tener scroll infinito en vertical y horizontal.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Tiles.Editor.TileMapX.Data">
            <summary>
            Base64 con los datos crudos del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Editor.TileMapX.SaveMapData(Kriptok.Drawing.FastBitmap)">
            <summary>
            Guarda la información almacenada en el objeto indicado por parámetro en
            un formato de mapa de tiles.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Editor.TileMapX.Load">
            <summary>
            Genera un <see cref="T:Kriptok.Drawing.FastBitmap"/> con los colores correspondientes a los datos
            del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Editor.TileMapX.Load(System.String)">
            <summary>
            Carga un mapa desde un archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Editor.TileMapX.Load(System.Reflection.Assembly,System.String)">
            <summary>
            Carga un mapa desde un recurso.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Editor.TileMapX.Load(Kriptok.Common.Resource)">
            <summary>
            Carga un mapa desde un recurso.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Tiles.Editor.TileMapX.TileMapXTiles">
            <summary>
            Datos de los tiles del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Editor.TileMapX.TileMapXTiles.#ctor">
            <summary>
            Constructor necesario para poder deserializar desde XML.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.FastTileData.ClearFlagsForLayer(System.Int32)">
            <summary>
            Limpia los flags para el layer indicado por el índice correspondiente.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Tiles.AutoTileFlagsEnum">
            <summary>
            +----+----+-----+
            |  1 |  2 |   4 |
            +----+----+-----+
            |  8 |    |  16 |
            +----+----+-----+
            | 32 | 64 | 128 |
            +----+----+-----+
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Tiles.AutoTileFlagsEnumHelper">
            <summary>
            Para definir completamente un tile complejo, hay que plantear los siguientes casos:
            
            Un item solo:    Una cruz:      Un cuadrado:   Las "Ls":     Last "Ts":   Las "boquitas":
                                                           
            A                    B          I J K          R-  -S          -V-        \|    |/  \|/  \|/
                                 C          L M N          |    |        |  |  |      -0-  -1-  -2-  -3-
                             D E F G        O P Q                        W-   -X      /|\  /|\  /|    |\
                                 H                         |    |        |  |  |
                                                           T-  -U          -Y-   
            ((int)ComplexTileFlagsEnumHelper.A).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.B).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.C).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.D).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.E).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.F).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.G).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.H).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.I).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.J).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.K).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.L).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.M).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.N).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.O).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.P).ToBin(8)
            ((int)ComplexTileFlagsEnumHelper.Q).ToBin(8)
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DAutoTileInfo.GetTile(Kriptok.Mapping.Tiles.AutoTileFlagsEnum)">
            <summary>
            Obtiene el tile correspondiente según los tiles que hay alrededor.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DAutoTileInfo.ForEach(System.Action{Kriptok.Mapping.Tiles.AutoTileFlagsEnum,Kriptok.Mapping.Tiles.Map2DTileInfo})">
            <summary>
            Permite ejecutar una acción por cada uno de los sub-tiles de
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DAutoTileInfo.Add``1(Kriptok.Mapping.TexsetBase{``0},System.Int32,System.Collections.Generic.IDictionary{System.Int32,``0},System.Int32[],Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Agrega el tile como textura a la colección.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DAutoTileInfo.AddExcluding``1(Kriptok.Mapping.TexsetBase{``0},System.Int32,System.Collections.Generic.IDictionary{System.Int32,``0},System.Int32[],Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Agrega el tile como textura a la colección.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DAutoTileInfo.AddFlag(Kriptok.Mapping.Tiles.TileFlagsEnum)">
            <summary>
            Agrega el flag a todos los tiles.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Tiles.Map2DTile">
            <summary>
            Esta clase representa un tile común en un mapa bidimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.Map2DTile.currentTile">
            <summary>
            El tile que tiene que renderizar ahora.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.Map2DTile.Flags">
            <summary>
            Los flags que indican cómo se comporta.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.Map2DTile.tiles">
            <summary>
            Lista de tiles que puede renderizar.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Tiles.Map2DTile.Animated">
            <summary>
            Indica si el tile es animado.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTile.Kriptok#Mapping#Tiles#Base#ITile#Refresh(System.Int32)">
            <summary>
            Actualiza el tile a renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTile.Kriptok#Mapping#Tiles#Base#ITile#TileSample(System.Int32,System.Int32)">
            <summary>
            Obtiene el color correspondiente al pixel indicado por sus coordenadas, 
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTile.Kriptok#Mapping#Tiles#Base#ITile#BlitOn(Kriptok.Mapping.Tiles.Base.ITileCanvas,System.Int32,System.Int32)">
            <summary>
            Dibuja el tile actual en el <see cref="T:Kriptok.Drawing.FastBitmap"/> indicado por parámetro en la posición indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTile.ToAffineTexture(Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Transforma el tile en una textura.
            </summary>        
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileMap.TileCollection.MapTiles">
            <summary>
            Todos los tiles del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileMap.TileCollection.DifferentTiles">
            <summary>
            Tiles diferentes.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileMap.Tileset">
            <summary>
            <see cref="T:Kriptok.Mapping.Tiles.Base.TilesetBase"/> asociado al mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileMap.differentTiles">
            <summary>
            Lista de todos los tiles diferentes que se están renderizando.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileMap.animatedTiles">
            <summary>
            Listado de los tiles animados.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileMap.tileWidth">
            <summary>
            Ancho del tile.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileMap.tileHeight">
            <summary>
            Alto del tile.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileMap.InfiniteScroll">
            <summary>
            Indica si se trata de un mapa con scroll infinito en los dos ejes.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileMap.TileCount">
            <summary>
            Tamaño del mapa en tiles.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileMap.TileArray">
            <summary>
            Lista de todos los tiles del mapa en el momento actual.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMap.IsEmpty">
            <summary>
            Indica si el mapa está vacío (todos sus tiles son null).
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMap.AllTilesFilter(Kriptok.Mapping.Tiles.Map2DTileInfo)">
            <summary>
            No filtra tiles de ningún tipo.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMap.BaseTilesFilter(Kriptok.Mapping.Tiles.Map2DTileInfo)">
            <summary>
            Obtiene los tiles de la capa base.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMap.ViewTilesFilter(Kriptok.Mapping.Tiles.Map2DTileInfo)">
            <summary>
            Obtiene los tiles correspondientes a la capa de objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMap.OverlayTilesFilter(Kriptok.Mapping.Tiles.Map2DTileInfo)">
            <summary>
            Obtiene los tiles correspondientes a la capa de objeto.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Tiles.TileMap.FullSize">
            <summary>
            Devuelve el tamaño total del mapa. Es decir: (cantidad de tiles) x (tamaño de tiles).
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Tiles.TileMap.TileSize">
            <summary>
            Devuelve o establece el tamaño de los tiles para el mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMap.GetTileArray(Kriptok.Drawing.FastBitmap,Kriptok.Mapping.Tiles.Base.TilesetBase,System.Boolean,System.Func{Kriptok.Mapping.Tiles.Map2DTileInfo,System.Boolean})">
            <summary>
            Método que se encarga de armar el array de tiles para después dibujar punto por punto.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMap.ToFastBitmap">
            <summary>
            Genera un <see cref="T:Kriptok.Drawing.FastBitmap"/> en base al mapa. Este método obviamente omite tiles animados.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMap.IsValid(System.UInt32,System.Drawing.Size,System.Int32,System.Int32,System.Func{System.UInt32})">
            <summary>
            Verifica que al tratar de obtener el valor de una casilla cercana, esté dentro de los límites del mapa.
            </summary>
            <param name="currentValue">Valor de la casilla actual.</param>
            <param name="size">Tamaño del mapa.</param>
            <param name="x">Coordnada X de la casilla que se quiere obtener.</param>
            <param name="y">Coordenada Y de la casilla que se quiere obtener.</param>
            <param name="resolve">Función a ejecutar en caso de que las coordenadas sean válidas.</param>
            <returns>Devuelve el valor de la casilla indicada por las coordenadas X, Y (en caso de ser válidas).
            En caso de ser inválidas (estar fuera de los límites del mapa, dados por el parámetro "size", devuelve
            el color indicado en el primer parámetro.</returns>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.TileMap.GetTileFlags(System.Single,System.Single)">
            <summary>
            Obtiene los flags del tile que se encuentra en las coordenadas indicadas por parámetro.
            
            Las coordenadas no deben estar previamente divididas por la altura/anchura de los tiles.
            </summary>        
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileFlagsEnum.BlockedFromTop">
            <summary>
            Indica que el tile no es accesible desde arriba.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileFlagsEnum.BlockedFromLeft">
            <summary>
            Indica que el tile no es accesible desde la izquierda.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileFlagsEnum.BlockedFromBottom">
            <summary>
            Indica que el tile no es accesible desde abajo.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileFlagsEnum.BlockedFromRight">
            <summary>
            Indica que el tile no es accesible desde la derecha.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileFlagsEnum.Blocked">
            <summary>
            Indica que el tile no es accesible desde ninguna dirección.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileFlagsEnum.ViewLayer">
            <summary>
            Este flag indica que el tile se debe dibujar "por encima" del personaje. Pero manteniendo esta lógica
            de que la profundidad depende de la coordenada Y en pantalla. 
            
            Es decir, si un personaje tiene un Y menor o igual al del tile, el tile se dibujará encima, y 
            caso contrario, el tile se dibujará abajo.
            
            La forma de resolver esto, es obviamente generarlo como una vista en el mapa. Por eso se llama
            "<see cref="F:Kriptok.Mapping.Tiles.TileFlagsEnum.ViewLayer"/>".
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileFlagsEnum.Override">
            <summary>
            Este flag indica que los flags que se aplican al tile inferior dejan de ser tomados en cuenta
            y sólo se consideran los que están en este tile.
            
            Por ejemplo, si un tile de agua está bloqueado, pero se requiere un tile de "puente" que esté
            por encima, se debe utilizar este tile para indicarle al "puente" que debe anular el
            bloqueo de caminar sobre el agua.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.TileFlagsEnum.OverlayLayer">
            <summary>
            Indica que en el mapa en dos dimensiones, esta capa debe renderizarse por encima de todos los objetos.
            Es una "capa extra". Sólo funciona en modo Scroll.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Tiles.Map2DTileInfo">
            <summary>
            Representa un tile simple en un mapa 2D.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.Map2DTileInfo.Empty">
            <summary>
            Tile vacío (sin información gráfica).
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.Map2DTileInfo.bitmaps">
            <summary>
            Lista de bitmaps rápidos generados. 
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.#ctor(Kriptok.Mapping.Tiles.TileFlagsEnum,Kriptok.Drawing.FastBitmap[])">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Tiles.Map2DTileInfo"/>
            </summary>
            <param name="flags">Flags del tile.</param>
            <param name="bitmaps">Lista de bitmaps que componen el tile. Si
            es un tile simple (sin animación), debe recibir sólo un bitmap.</param>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.#ctor(Kriptok.Drawing.FastBitmap[])">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Tiles.Map2DTileInfo"/>
            </summary>
            <param name="bitmaps">Lista de bitmaps que componen el tile. Si
            es un tile simple (sin animación), debe recibir sólo un bitmap.</param>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.GetThumbnail">
            <summary>
            Obtiene la primera imagen (o única si corresponde) para ser utilizada por
            el editor de mapas.
            </summary>
            <returns>Devuelve la primera imagen (o única si corresponde) para ser utilizada por
            el editor de mapas.</returns>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.GetImage(System.Int32)">
            <summary>
            Obtiene la imagen correspondiente para dibujar según el índice de animación
            para tiles animados.
            </summary>
            <param name="animationIndex">Índice de animación.</param>
            <returns>Devuelve la imagen correspondiente para dibujar según el índice de animación
            para tiles animados.</returns>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.ToTile">
            <summary>
            Este método transforma el <see cref="T:Kriptok.Mapping.Tiles.Map2DTileInfo"/> en algo que entienda el renderizador, es decir,
            un <see cref="T:Kriptok.Mapping.Tiles.Map2DTile"/>, que es lo que eventualmente se renderiza.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.GetImages">
            <summary>
            Obtiene todas las imágenes asociadas al tile. Se utiliza en el momento en que
            se van a generar los tiles para renderizar.
            </summary>
            <returns>Devuelve todas las imágenes asociadas al tile. Se utiliza en el momento en que
            se van a generar los tiles para renderizar.</returns>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.GetImageCount">
            <summary>
            Para los tiles animados, obtiene la cantidad de imágenes sobre las cuales iterar.
            </summary>
            <returns>Devuelve la cantidad de imágenes sobre las cuales iterar, de tratarse
            de un tile animado.</returns>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.Dispose">
            <summary>
            Libera toda la memoria y recursos asociados al tile.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.MergeTile(System.Drawing.Graphics,System.Int32)">
            <summary>
            Cuando hay un tile superpuesto, este es el método que se utiliza para dibujar 
            un tile sobre el otro.
            </summary>
            <param name="g">Objeto de tipo Graphics sobre el que se debe dibujar el tile.</param>
            <param name="animationIndex">Índice de animación que debe dibujarse (para tiles animados).</param>
        </member>
        <member name="F:Kriptok.Mapping.Tiles.Map2DTileInfo.Flags">
            <summary>
            Indica el comportamiento del tile.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.Block">
            <summary>
            Indica que el tile es completamente inaccesible desde cualquier dirección.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.AddFlag(Kriptok.Mapping.Tiles.TileFlagsEnum)">
            <summary>
            Agrega un flag al tile en cuestión.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.GetTile(System.Func{Kriptok.Mapping.Tiles.AutoTileFlagsEnum})">
            <summary>
            Este método resuelve si se al obtener un tile se trata de un tile complejo (y resuelve
            cuál de los subtiles tiene que ser presentado), o si se trata de un tile común,
            simplemente lo devuelve.
            </summary>        
            <param name="getFlags">Función que obtiene los flags correspondientes al tile, 
            en caso de tratarse de un tile complejo.</param>
            <returns>Devuelve el subtile correspondiente a los flags si se trata de un tile complejo,
            o el tile en sí, si se trata de un tile simple.</returns>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.GetMiddleTile">
            <summary>
            Obtiene el tile correspondiente a un tile rodeado de sí mismo o de un tile compatible.
            Para los tiles básicos, es el mismo tile. Para los auto-tiles, el tile central., 
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.GetTile(Kriptok.Mapping.Tiles.AutoTileFlagsEnum)">
            <summary>
            Este método resuelve si se al obtener un tile se trata de un tile complejo (y resuelve
            cuál de los subtiles tiene que ser presentado), o si se trata de un tile común,
            simplemente lo devuelve.
            </summary>        
            <param name="flags">Flags correspondientes al tile, en caso de tratarse de un tile complejo.</param>
            <returns>Devuelve el subtile correspondiente a los flags si se trata de un tile complejo,
            o el tile en sí, si se trata de un tile simple.</returns>
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.AddExcluding``1(Kriptok.Mapping.TexsetBase{``0},System.Int32,System.Collections.Generic.IDictionary{System.Int32,``0},System.Int32[],Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Agrega el tile como textura a la colección.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.Add``1(Kriptok.Mapping.TexsetBase{``0},System.Int32,System.Collections.Generic.IDictionary{System.Int32,``0},System.Int32[],Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Agrega el tile como textura a la colección.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Tiles.Map2DTileInfo.IsEmpty">
            <summary>
            Indica si se trata de un casillero vacío.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Grid.TileSquare">
            <summary>
            Esta estructura se utiliza para validar, en un proceso de búsqueda de caminos, qué objetos del mapa
            deben ser tomados en cuenta a la hora de calcular por dónde moverse.
            
            Esto podría ser asociado, por ejemplo, con la "visión del personaje". Un personaje intentaría
            esquivar obstáculos que se encuentren cerca al buscar caminos, pero cuando están muy lejos,
            no los estaría viendo.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.TileSquare.center">
            <summary>
            Punto central a partir del cual se calculará si los demás vértices están dentro de la distancia
            indicada para ser tomados en cuenta.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.TileSquare.distance">
            <summary>
            Máxima distancia a la cual pueden estar los objetos para ser tomados en cuenta.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Grid.TileSquare.#ctor(Kriptok.Drawing.Vector2I,System.UInt16)">
            <summary>
            Devuelve una nueva instancia de la estructura <see cref="T:Kriptok.Mapping.Grid.TileSquare"/>
            </summary>
            <param name="center">Punto central a partir del cual se calculará si los demás vértices están dentro de la distancia
            indicada para ser tomados en cuenta.</param>
            <param name="distance">Máxima distancia a la cual pueden estar los objetos para ser tomados en cuenta.</param>
        </member>
        <member name="M:Kriptok.Mapping.Grid.TileSquare.Contains(Kriptok.Drawing.Vector2I)">
            <summary>
            Indica si el vértice indicado por parámetro está dentro de los límites del objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.TileSquare.ValidateSight">
            <summary>
            Indica si se debe validar la distancia a la que se encuentran los objetos.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Grid.MapGridGeneratorAddWallsArgs`1">
            <summary>
            Grupo de parámetros utilizados para crear paredes en un generador de mapas.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Grid.MapGridGeneratorAddWallsArgs`1.Cell">
            <summary>
            Tiene la celda que se está leyendo actualmente.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Grid.MapGridGeneratorAddWallsArgs`1.Height">
            <summary>
            Altura de la celda.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Grid.MapGridGeneratorAddWallsArgs`1.CellInFront">
            <summary>
            Tiene la celda que está "frente" a la que se está leyendo actualmente.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Grid.MapGridGeneratorAddWallsArgs`1.Side">
            <summary>
            Indica qué lado de la celda se está generando.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Grid.MapGridGeneratorAddWallsArgs`1.Coords">
            <summary>
            Coordenadas de la celda;
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Grid.MapGridPanelSideEnum">
            <summary>
            Este enumerado se utiliza para saber qué panel se está generando al momento
            crear el mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridGeneratorBase`1.IgnoreExternalBounds">
            <summary>
            Indica si debe remover los bordes "externos" del mapa. Es decir, las paredes que se construyen
            sobre X = 0, Y = 0, X = Width, Y = Height.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridGeneratorBase`1.LoadMap(`0[][],System.Int32,System.Int32,System.Collections.Generic.IList{Kriptok.Entities.Base.EntityBase})">
            <summary>
            Carga el mapa para ser renderizado.
            </summary>
            <param name="map">Mapa en cuestión.</param>
            <param name="h">Altura de las paredes a renderizar.</param>
            <param name="tileSize">Ancho y alto de las casillas a renderizar.</param>
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridGeneratorBase`1.GetCell(`0[][],System.Int32,System.Int32)">
            <summary>
            Obtiene la celda en las coordenadas indicadas.
            En caso de que sea fuera del mapa, devuelve null.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Grid.MapGridGeneratorBaseExtensions">
            <summary>
            Funcionalidades extendidas de la clase <see cref="T:Kriptok.Mapping.Grid.MapGridGeneratorBase`1"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridGeneratorBaseExtensions.LoadMap``1(Kriptok.Mapping.Grid.MapGridGeneratorBase{``0},``0[][],System.Int32,System.Int32,System.Action{Kriptok.Entities.Base.EntityBase[]})">
            <summary>
            Carga el mapa y permite realizar una acción sobre las listas resultantes.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridValidationContext.on">
            <summary>
            Para lockear lo que haga falta.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridValidationContext.Valid(Kriptok.Entities.Base.EntityBase,System.Single,System.Single,System.Single)">
            <summary>
            Valida si el objeto con la determinada posición y radio no se encuentra intersectado con
            las paredes o casilleros ocupados.
            </summary>
            <param name="obj">Utilizado para validar que el objeto no se choque consigo mismo.</param>        
            <param name="x">Coordenadas del objeto en el eje X pero tomando como tamaño de los tiles el valor 1.</param>
            <param name="y">Coordenadas del objeto en el eje Y pero tomando como tamaño de los tiles el valor 1.</param>
            <param name="radius">Radio del objeto pero tomando como tamaño de los tiles el valor 1.</param>
            <returns>Devuelve <see cref="!:true"/> si el objeto puede quedars en esa posición, 
            o false si se encuentra en una posición inválida.</returns>
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridValidationContext.Valid(Kriptok.Entities.Base.EntityBase,System.Single,System.Single)">
            <summary>
            Valida si el objeto con la determinada posición y radio no se encuentra intersectado con
            las paredes o casilleros ocupados.
            </summary>
            <param name="obj">Utilizado para validar que el objeto no se choque consigo mismo.</param>        
            <param name="x">Coordenadas del objeto en el eje X pero tomando como tamaño de los tiles el valor 1.</param>
            <param name="y">Coordenadas del objeto en el eje Y pero tomando como tamaño de los tiles el valor 1.</param>        
            <returns>Devuelve <see cref="!:true"/> si el objeto puede quedars en esa posición, 
            o false si se encuentra en una posición inválida.</returns>
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridValidationContext.VerifyOccupation(Kriptok.Drawing.Vector2I[],Kriptok.Drawing.Vector2I[])">
            <summary>
            Valida si alguno de los casilleros requeridos por un determinado objeto para establecerse en una
            posición está ocupado.
            </summary>
            <param name="required">Casilleros requeridos.</param>
            <param name="occupied">Casilleros ocupados.</param>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridValidationContext.RefreshAliveObjects(System.Int32)">
            <summary>
            Obtiene y devuelve los objetos que ocupan hoy la grilla.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridValidationContext.ObjectOcuppation(System.Int32)">
            <summary>
            Obtiene y devuelve los objetos que ocupan hoy la grilla.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridValidationContext.ObjectReservations(System.Int32)">
            <summary>
            Obtiene y devuelve los objetos que reservan hoy en la grilla.
            </summary>        
        </member>
        <member name="F:Kriptok.Mapping.Grid.PathFindArguments.EntityId">
            <summary>
            Objeto principal que está haciendo la consulta, para no chocarse consigo mismo.
            Si es cero, se ignora.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.PathFindArguments.SightDistance">
            <summary>
            Este círculo representa la "visión" del personaje. Debe ser un círculo centrado en las coordenadas
            XY del objeto, con el radio equivalente a su "visión".
            
            Este círculo es utilizado para saber cuáles de los objetos dentro de la grilla son "visibles", y por
            tanto tomados en cuenta a la hora de trazar el camino.
            
            También toma en cuenta las reservaciones de casilleros por otros objetos.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.PathFindArguments.From">
            <summary>
            Vector donde inicia la búsqueda.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.PathFindArguments.To">
            <summary>
            Vector donde finaliza la búsqueda.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.PathFindArguments.PathFindType">
            <summary>
            Algoritmo a utilizar.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Grid.PathFindArguments.NoPath">
            <summary>
            Indica si no puede haber un camino ya que el inicio y el fin son el mismo punto.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Grid.TileMapGrid">
            <summary>
            Clase utilizada para representar un mapa tipo cuadrícula en un juego.
            
            Debido a que las validaciones de posición se basan en el radio del 
            objeto, sólo se permiten celdas completamente cuadradas.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.TileMapGrid.inverseTileSize">
            <summary>
            Inversa del tamalño de los tiles.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Grid.TileMapGrid.From``1(``0[][],System.Int32)">
            <summary>
            Inicializa una matriz en base a una matriz de celdas. 
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.TileMapGrid.From(Kriptok.Mapping.Tiles.TileMap)">
            <summary>
            Obtiene una matriz de durezas del mapa.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.TileMapGrid.FindPath(Kriptok.Entities.Base.EntityBase,Kriptok.Drawing.Vector2I,Kriptok.Mapping.PathFindTypeEnum)">
            <summary>
            Encuentra un camino entre el objeto indicado y la coordenada destino.
            </summary>
            <param name="obj"></param>
            <param name="to">Coordenada Y de inicio del camino.</param>                
            <param name="type">Algorimo de búsqueda a utilizar</param>                
            <returns>Devuelve una serie de pasos a seguir para llegar al objetivo.</returns>
        </member>
        <member name="M:Kriptok.Mapping.Grid.TileMapGrid.FindPathMovement(Kriptok.Entities.Base.EntityBase,Kriptok.Drawing.Vector2I,Kriptok.Mapping.PathFindTypeEnum)">
            <summary>
            Encuentra un camino entre las coordenadas indicadas, en la matriz generada.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Grid.TileMapGrid.FindPathMovement(Kriptok.Entities.Base.EntityBase,Kriptok.Entities.Base.EntityBase,Kriptok.Mapping.PathFindTypeEnum)">
            <summary>
            Encuentra un camino entre las coordenadas indicadas, en la matriz generada.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Grid.TileMapGrid.OnFreeSquare(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Indica si la posición donde se encuentra el objeto se encuentra libre u ocupada por sí mismo.
            </summary>
            <param name="obj">Objeto que se desea evaluar.</param>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.TileMapGrid.GetTileCoords(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Obtiene las coordenadas del objeto, dentro de la grilla. Este método dependerá del tamaño de las
            casillas en las cuales se pueda mover el objeto.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.TileMapGrid.TransformVector(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Transforma las coordenadas enviadas por parámetro a coordenadas del mapa.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.TileMapGrid.Valid(Kriptok.Entities.Base.EntityBase,System.Single,System.Single)">
            <summary>
            Valida si la entidad paramétrica puede ubicarse en las coordenadas indicadas.
            </summary>                        
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridCellTypeEnum.Free">
            <summary>
            Indica que la celda está libre y puede accederse.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridCellTypeEnum.Blocked">
            <summary>
            Indica que la celda no puede accederse.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridCellTypeEnum.Walls">
            <summary>
            Indica que debe agregar paredes al mapa para esta celda.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridCellTypeEnum.Cover">
            <summary>
            Indica que debe agregar una "tapa" sobre las paredes.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridCellTypeEnum.Renderizable">
            <summary>
            Indica que debe agrear un "renderizable" en la celda.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridCellTypeEnum.Panel">
            <summary>
            Indica si debe crear un "panel".
            Esto es, una vista que se renderiza sobre el medio de la celda, como una puerta.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Grid.MapGridCell">
            <summary>
            Representa una celda en un mapa definido por una cuadrícula.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridCell.#ctor(Kriptok.Mapping.Grid.MapGridCellTypeEnum)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Grid.MapGridCell"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridCell.Type">
            <summary>
            Indica el tipo de celda.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridCell.IsBlocked">
            <summary>
            Indica si la celda debe estar "bloqueada" para los objetos que
            quieran pararse encima.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridCell.AddEntities(System.Collections.Generic.IList{Kriptok.Entities.Base.EntityBase},Kriptok.Drawing.Vector2I,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Permite agregar objetos a una lista para que se agreguen al mapa.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Grid.MapGridBase">
            <summary>
            Esta clase representa un mapa sobre el cual un objeto deberá buscar un camino de un punto al otro.
            La idea es cargar la matriz en base a un objeto Bitmap, pero que pueda ser modificada en tiempo de juego.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridBase.BlockedValue">
            <summary>
            Valor utilizado para referenciar que una celda está bloqueada al acceso de las entidades.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridBase.baseGrid">
            <summary>
            Esta matriz contiene la información levantada de la imagen. Es decir, el mapa de durezas inicial.        
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridBase.Width">
            <summary>
            Ancho de la grilla/mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridBase.Height">
            <summary>
            Alto de la grilla/mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridBase.widthMinusOne">
            <summary>
            Valores precalculados para acelerar cálculos.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridBase.heightMinusOne">
            <summary>
            Valores precalculados para acelerar cálculos.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridBase.entities">
            <summary>
            Esta lista contiene los objetos que ocupan casillas en el mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Grid.MapGridBase.reservations">
            <summary>
            Esta lista tiene todos los puntos "reserados" por algún proceso, que planea posicionarse en alguna
            casilla en particular. Esto es para que los procesos no puedan superponerse.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridBase.Clear(System.Int32[0:,0:],Kriptok.Drawing.Vector2I)">
            <summary>
            Este método se usa para limpiar una celda. Es ideal para limpiar antes de trazar caminos
            ya que un objeto puede estar partiendo de una casilla inválida, y no estaría bien que no
            pudiera moverse por error.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridBase.FindPathMovement(Kriptok.Mapping.Grid.PathFindArguments)">
            <summary>
            Encuentra un camino entre las coordenadas indicadas, en la matriz generada.
            </summary>
            <returns>Devuelve una serie de pasos a seguir para llegar al objetivo.</returns>
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridBase.Add(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Agrega un objeto para que el mapa lo siga, y mantega actualizada la matriz del mapa en base a 
            sus coordenadas.
            </summary>
            <param name="entity">Proceso del juego que debe ser tomado en cuenta en la matriz del mapa.</param>
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridBase.GenerateMatrix(Kriptok.Mapping.Grid.PathFindArguments)">
            <summary>
            Genera la matriz en el estado actual, es decir, con las durezas del mapa
            más todos los procesos registrados en el mapa.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridBase.IsFreeSquare(System.Int32,System.Int32)">
            <summary>
            Indica si el casillero indicado en las coordenadas x, y está libre para poder ser ocupado.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridBase.IsFreeSquare(Kriptok.Entities.Base.EntityBase,System.Int32,System.Int32)">
            <summary>
            Indica si el casillero indicado en las coordenadas (x, y) está libre para poder ser ocupado por
            el objeto indicado por parámetro.
            </summary>
            <param name="obj">Objeto que quiere ocupar el espacio en esas coordenadas.</param>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridBase.IsNotEmpty(System.Int32,System.Int32)">
            <summary>
            Indica si el casillero indicado no está vacío. Este método no toma en cuenta objetos que pudieran
            estar ocupando la casilla, sólo la grilla como está en ese momento.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridBase.ReserveIfFree(Kriptok.Entities.Base.EntityBase,System.Int32,System.Int32,Kriptok.Drawing.Vector2I[])">
            <summary>
            Indica si una casilla determinada está libre, y en caso de estarlo, la reserva.        
            </summary>
            <returns>Devuelve <see cref="F:System.Guid.Empty"/> si la casilla está ocupada y no pudo reservarse.
            O bien, el Guid asociado a la reserva (para poder posteriormente cancelarla).</returns>
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridBase.IfIsFree(Kriptok.Entities.Base.ProcessBase,Kriptok.Drawing.Vector2I,System.Action)">
            <summary>
            Ejecuta una acción determina si un objeto puede ubicarse en la posición indicada por parámetro.
            
            De poder hacerlo, reserva el casillero y ejecuta la acción determinada.
            
            Devuelve <see cref="!:true"/> si pudo realizar la acción, y <see cref="!:false"/> de lo contrario.
            </summary>
            <param name="obj">Objeto que se desea ubicar.</param>
            <param name="cell">Celda o casillero en el cual se desea ubicar el objeto.</param>
            <param name="action">Acción a realizar si el objeto puede ser ubicado en esa posición.
            Esta acción debe realizarse en paralelo, por eso este método sólo acepta procesos asincrónicos.</param>
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridBase.IfIsFree(Kriptok.Entities.Base.ProcessBase,System.Int32,System.Int32,System.Action)">
            <summary>
            Ejecuta una acción determina si un objeto puede ubicarse en la posición indicada por parámetro.
            
            De poder hacerlo, reserva el casillero y ejecuta la acción determinada.
            
            Devuelve <see cref="!:true"/> si pudo realizar la acción, y <see cref="!:false"/> de lo contrario.
            </summary>
            <param name="process">Objeto que se desea ubicar.</param>
            <param name="x">Coordenada X donde se desea ubicar el proceso.</param>
            <param name="y">Coordenada Y donde se desea ubicar el proceso.</param>
            <param name="action">Acción a realizar si el objeto puede ser ubicado en esa posición.
            Esta acción debe realizarse en paralelo, por eso este método sólo acepta procesos asincrónicos.</param>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridBase.IsFree(Kriptok.Entities.Base.EntityBase,System.Int32,System.Int32,System.Guid@)">
            <summary>
            Evalúa si un casillero de la grilla está libre.
            
            De estarlo, lo reserva hasta que manualmente se cancele la reservación.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridBase.CancelReservation(System.Guid)">
            <summary>
            Cancela la reserva de un punto de la matriz.
            </summary>
            <param name="reservationId">Id de la reserva.</param>
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridBase.GetDestinyPointForMatrix(Kriptok.Drawing.Vector2I,Kriptok.Drawing.Vector2I,System.Int32[0:,0:],Kriptok.Drawing.Vector2I,System.Boolean)">
            <summary>
            Cuando se encuentra obstáculos en la búsqueda de caminos, por ejemplo, si el destino está dentro
            de un anillo al que no se puede alcanzar, es necesario encontrar el punto accesible más cercano.
            De eso se encarga esta función.                
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridBase.Valid(Kriptok.Entities.Base.EntityBase,System.Single,System.Single,System.Single)">
            <summary>
            Valida si el objeto con la determinada posición y radio no se encuentra intersectado con
            las paredes o casilleros ocupados.
            </summary>
            <param name="entity">Utilizado para validar que el objeto no se choque consigo mismo.</param>        
            <param name="x">Coordenadas del objeto en el eje X pero tomando como tamaño de los tiles el valor 1.</param>
            <param name="y">Coordenadas del objeto en el eje Y pero tomando como tamaño de los tiles el valor 1.</param>
            <param name="radius">Radio del objeto pero tomando como tamaño de los tiles el valor 1.</param>
            <returns>Devuelve <see cref="!:true"/> si el objeto puede quedars en esa posición, 
            o false si se encuentra en una posición inválida.</returns>
        </member>
        <member name="M:Kriptok.Mapping.Grid.MapGridBase.GetTileCoords(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Obtiene las coordenadas del objeto, dentro de la grilla. Este método dependerá del tamaño de las
            casillas en las cuales se pueda mover el objeto. Por defecto, las casillas tienen un tamaño de 1x1.
            
            Pero en clases derivadas, este método se debe modificar para tomar en cuenta el tamaño alternativo
            de las casillas.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Helpers.MapEditorHelper">
            <summary>
            Funcionalidades de ayuda para el desarrollo de aplicaciones de edición de mapas.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Helpers.MapEditorHelper.LoadAssemblies(System.String)">
            <summary>
            Obtiene la lista de ensamblados referenciados por el archivo para ser cargados y utilizados
            en el editor de mapas.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Helpers.MapEditorHelper.LoadLastVersion(System.IO.FileInfo[])">
            <summary>
            Carga, de la lista de archivos compilados, la última versión de cada uno.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Helpers.MapEditorHelper.RetrieveTypes``1">
            <summary>
            Obtiene todos los <see cref="!:T"/> que haya en los ensamblados cargados en el dominio.        
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Helpers.MapEditorHelper.GetResources``1(Kriptok.Mapping.Base.MapEditorPreviewX)">
            <summary>
            Obtiene los recursos asociados al tipo indicado, y el que actualmente corresonde al mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.TextureListItemModel">
            <summary>
            Clase utilizada por los editores de mapas para generar ventanas de selección de texturas.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.AffineTexset">
            <summary>
            Representa una colección de texturas para ser utilizadas en diversos contextos.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.SampleTexsetBase">
            <summary>
            Representa una colección de texturas para ser utilizadas en diversos contextos.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.SampleTexsetBase.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Mapping.SampleTexsetBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.SampleTexsetBase.#ctor(System.Collections.Generic.IDictionary{System.Int32,Kriptok.Views.Shapes.ISampleTexture})">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Mapping.SampleTexsetBase"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.SampleTexsetBase.FullBlack">
            <summary>
            Obtiene una textura completamente negra, que no se ve afectada por iluminación.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.SampleTexsetBase.Load(System.Reflection.Assembly,System.String)">
            <summary>
            Crea una textura de muestreo en base al recurso indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.SampleTexsetBase.Load(System.Reflection.Assembly,System.String,Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Crea una textura de muestreo en base al recurso indicado por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.TileTexsetBase`1">
            <summary>
            Representa un <see cref="T:Kriptok.Mapping.SampleTexsetBase"/> construido en base a un <see cref="T:Kriptok.Mapping.Tiles.Base.TilesetBase"/>
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.TileTexsetBase`1.AddIndex(System.Int32)">
            <summary>
            Indica si se debe agregar la textura con el índice calculado.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.ITexset`1">
            <summary>
            Interfaz genérica para "sets de texturas".
            </summary>    
        </member>
        <member name="M:Kriptok.Mapping.ITexset`1.Texture(System.Int32)">
            <summary>
            Devuelve la textura indicada por su Id.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.ITexset`1.TextureIds">
            <summary>
            Devuelve un arreglo con todos los Ids de las texturas almacenadas.
            </summary>     
        </member>
        <member name="T:Kriptok.Mapping.ITexsetExtensions">
            <summary>
            Funcionalidades extendidas de la interfaz <see cref="T:Kriptok.Mapping.ITexset`1"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.ITexsetExtensions.ToDictionary``1(Kriptok.Mapping.ITexset{``0})">
            <summary>
            Obtiene un diccionario con todas las texturas identificadas por id.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.ISampleTexsetExtensions.GetResources(Kriptok.Mapping.ITexset{Kriptok.Views.Shapes.ISampleTexture})">
            <summary>
            Obtiene las texturas en formato Bitmap para poder ser mostradas en el editor de mapas.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Convos.Maps.ConvoMapEntityX">
            <summary>
            Entidad de mapas tipo <see cref="T:Kriptok.Mapping.Convos.ConvoMapX"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Convos.ConvoMapX">
            <summary>
            Representa un mapa 3D dividido en volúmenes convexos.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoMapX.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Convos.ConvoMapX"/>.
            
            Constructor necesario para poder deserializar desde XML.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoMapX.#ctor(System.String)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Convos.ConvoMapX"/>.
            
            Sólo debe ser utilizado por el editor de mapas 3D.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoMapX.Sectors">
            <summary>
            Lista de sectores que componen el mapa tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoMapX.Serialize(System.Boolean)">
            <summary>
            Serializa el mapa a Xml.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoMapX.Save(System.String)">
            <summary>
            Guarda el mapa en el archivo que se cargó.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoMapX.Clone">
            <summary>
            Devuelve una copia del mapa.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoMapX.Load(System.String)">
            <summary>
            Carga un mapa desde un archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoMapX.Load(System.Reflection.Assembly,System.String)">
            <summary>
            Carga un mapa desde un recurso.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoMapX.Load(System.String,System.String)">
            <summary>
            Carga un mapa desde un xml.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoMapX.Load(Kriptok.Mapping.Convos.ConvoMapX)">
            <summary>
            Carga propiedades extra en tiempo de ejecución después de parsear el Xml.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoMapX.AddSector(Kriptok.Mapping.Convos.ConvoSectorX)">
            <summary>
            Agrega un sector al mapa.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Convos.ConvoMapXGrid">
            <summary>
            Herramienta utilizada para leer un mapa de tipo <see cref="T:Kriptok.Mapping.Convos.ConvoMapX"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Convos.ConvoMapXGrid.config">
            <summary>
            Mapa que se está leyendo.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoMapXGrid.#ctor(Kriptok.Mapping.Convos.ConvoMapX)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Convos.ConvoMapXGrid"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoMapXGrid.Width">
            <summary>
            Cantidad de casilleros sobre el eje X.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoMapXGrid.Height">
            <summary>
            Cantidad de casilleros sobre el eje Y.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoMapXGrid.Depth">
            <summary>
            Cantidad de casilleros sobre el eje Z.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoMapXGrid.Get(System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene el elemento en la posición indicada.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Convos.ConvoPartitionX">
            <summary>
            Partición tridimensional de un sector.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoPartitionX.Contains(System.Int32,System.Int32,System.Int32)">
            <summary>
            Indica si un casillero está contenido por la partición.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoPartitionX.Sector">
            <summary>
            Referencia al sector al que pertenece la partición.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoPartitionX.Update(Kriptok.Common.IGrid3DReader{System.Int32})">
            <summary>
            Calcula la metadata de los distintos lados de la partición.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Convos.ConvoPartitionPanelX">
            <summary>
            Representa cada sección de una pared de una partición.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoPartitionPanelX.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Convos.ConvoPartitionPanelX"/>.
            
            NOTA: Importante mantener aunque no se use para la serialización/deserialización.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoPartitionPanelX.#ctor(System.Drawing.RectangleF)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Convos.ConvoPartitionPanelX"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoPartitionPanelX.X">
            <summary>
            Coordenada X de la figura en el plano bidimensional.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoPartitionPanelX.Y">
            <summary>
            Coordenada Y de la figura en el plano bidimensional.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoPartitionPanelX.Width">
            <summary>
            Ancho de la figura en el plano bidimensional.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoPartitionPanelX.Height">
            <summary>
            Alto de la figura en el plano bidimensional.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Convos.ConvoPartitionPortalX">
            <summary>
            Representa cada porción rectangular de una partición que se trata de un portal
            a otra partición.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoPartitionPortalX.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Convos.ConvoPartitionPortalX"/>.
            
            NOTA: Importante mantener aunque no se use para la serialización/deserialización.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoPartitionPortalX.#ctor(System.Int32,System.Drawing.RectangleF)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Convos.ConvoPartitionPortalX"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoPartitionPortalX.PartitionToId">
            <summary>
            Partición a la cual apunta el portal.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoPartitionPortalX.Intersect">
            <summary>
            Indica si el portal realmente debe realizar una "intersección" de secciones antes de
            renderizar la partición siguiente.
            
            La lógica es que si el portal inverso tiene las mismas dimensiones no es necesario
            realizar una intersección. De lo contrario, es necesario.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Convos.ConvoPartitionSideX">
            <summary>
            Representa un lado de una partición.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoPartitionSideX.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Convos.ConvoPartitionSideX"/>.
            
            NOTA: Importante mantener aunque no se use para la serialización/deserialización.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoPartitionSideX.Panels">
            <summary>
            Lista de secciones rectangulares de paredes.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoPartitionSideX.Portals">
            <summary>
            Lista de secciones rectangulares que dan a otras secciones.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoPartitionSideX.TextureId">
            <summary>
            Id de la textura a utilizar. 0, para ninguna.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Convos.ConvoPartitionSideX.Update(System.Int32[0:,0:])">
            <summary>
            Actualiza la lista de portales y secciones de pared que se deben renderizar
            en la partición.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Convos.ConvoSectorX">
            <summary>
            Representa una región tridimensional de un mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoSectorX.Id">
            <summary>
            Id del sector.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoSectorX.Partitions">
            <summary>
            Particiones que componen el sector.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Convos.ConvoSectorX.Map">
            <summary>
            Referencia al objeto principal del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Gfps.GfpsMapGenerator`1.ViewGrid">
            <summary>
            Mapa de paneles de la grilla.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Gfps.IGfpsOperableCell">
            <summary>
            Indica que esta celda tiene una reacción cuando se presiona una tecla.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Gfps.GfpsDoorCell">
            <summary>
            Esta celda es una "puerta".
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Partitioned.Terrain.Maps.TerrainMapEntityX">
            <summary>
            Objeto de configuración de entidades para mapas <see cref="T:Kriptok.Mapping.Partitioned.Terrain.TerrainMapX"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.Maps.TerrainMapEntityX.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Partitioned.Terrain.Maps.TerrainMapEntityX"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.Maps.TerrainMapEntityX.#ctor(Kriptok.Mapping.Partitioned.Terrain.Maps.TerrainMapEntityX)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Partitioned.Terrain.Maps.TerrainMapEntityX"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX">
            <summary>
            Vértice tridimensional para mapas de terreno Pseudo-3D.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.WallBuilder.Pivots">
            <summary>
            Para agrupar las paredes por los pivotes.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.WallBuilder.SameVertices(Kriptok.Mapping.Partitioned.Terrain.TerrainVertexX,Kriptok.Mapping.Partitioned.Terrain.TerrainVertexX)">
            <summary>
            Indica si la pared vertical pasada por parámetro utiliza los mismos vértices 
            que esta pared vertical.
            </summary>            
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.WallBuilder.Merge(Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.WallBuilder,Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.WallBuilder)">
            <summary>
            Une dos instancias de una pared que está dividida en dos triángulos.
            </summary>            
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.WallBuilder.Invert">
            <summary>
            Invierte la pared
            </summary>            
        </member>
        <member name="F:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.v0">
            <summary>
            Vertices que son utilizados para la pared.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.v1">
            <summary>
            Vertices que son utilizados para la pared.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.v2">
            <summary>
            Vertices que son utilizados para la pared.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.v3">
            <summary>
            Vertices que son utilizados para la pared.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.shading">
            <summary>
            Tipo de sombreado.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.Shading">
            <summary>
            Tipo de sombreado que debe aplicarse sobre la figura.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.ShadingValue">
            <summary>
            Valor entero a serializar con el tipo de sombreado.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.GetVertices">
            <summary>
            Obtiene los vértices que son utilizados por la pared.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainMapX.#ctor">
            <summary>      
            Constructor necesario para poder deserializar desde XML.      
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainMapX.#ctor(Kriptok.Views.Shapes.MeshBuilderBase,System.Int32[])">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Partitioned.Terrain.TerrainMapX"/>.
            </summary>
            <param name="mesh">Malla de polígonos que definiran las particiones del mapa.</param>
            <param name="textures">Listado de los identificadores de las texturas que
            se mapearán una a una con los materiales definidos para la malla.</param>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Terrain.TerrainMapX.Vertices">
            <summary>
            Vértices del mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Terrain.TerrainMapX.Partitions">
            <summary>
            Particiones del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainMapX.Serialize(System.Boolean)">
            <summary>
            Serializa el mapa a Xml.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainMapX.Clone">
            <summary>
            Devuelve una copia del mapa.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainMapX.Load(System.String)">
            <summary>
            Carga un mapa desde un archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainMapX.Load(System.Reflection.Assembly,System.String)">
            <summary>
            Carga un mapa desde un recurso.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainMapX.Load(System.String,System.String)">
            <summary>
            Carga un mapa desde un xml.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainMapX.Load(Kriptok.Mapping.Partitioned.Terrain.TerrainMapX)">
            <summary>
            Carga propiedades extra en tiempo de ejecución después de parsear el Xml.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainMapX.GetVertex(System.Int32)">
            <summary>
            Obtiene un vértice en base a su Id.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainMapX.GetAllWalls">
            <summary>
            Devuelve todas las "paredes verticales" del mapa.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX.Id">
            <summary>
            Id de la textura a utilizar.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX.TextureId">
            <summary>
            Id de la textura a utilizar.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX.HorizontalTextureMappingScale">
            <summary>
            Esta propiedad indica la escala a la que se debe renderizar la textura
            siempre y cuando se renderice completamente horizontal, y no con inclinación.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX.ShouldSerializeHorizontalTextureMappingScale">
            <summary>
            Indica si debe serializar la propiedad <see cref="P:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX.HorizontalTextureMappingScale"/>.
            </summary>        
        </member>
        <member name="F:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX.shading">
            <summary>
            Tipo de sombreado.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX.ShadingValue">
            <summary>
            Valor entero a serializar con el tipo de sombreado.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX.HasSide(Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.WallBuilder)">
            <summary>
            Indica si esta partición comparte un "lado" con la "pared vertical" indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX.GetWalls">
            <summary>
            Obtiene las vistas verticales o "paredes" de esta partición.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX.GetNormal">
            <summary>
            Obtiene la normal calculada de la superficie.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX.GetArea2D">
            <summary>
            Obtiene el área bidimensional de la partición.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX.Load(Kriptok.Mapping.Partitioned.Terrain.TerrainVertexX[])">
            <summary>
            Carga los objetos referidos a los datos para ser utilizados en la construcción del mapa.
            </summary>    
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX.GetVertices">
            <summary>
            Obtiene los vértices que componen la partición.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideX">
            <summary>
            Vértice tridimensional para mapas de terreno Pseudo-3D.
            </summary>    
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideX.Wall">
            <summary>
            En caso de no ser "null", contiene la información de renderización de una pared.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideX.SamePivot(Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideX)">
            <summary>
            Indica si el pivot del lado indicado por parámetro es el mismo que este lado.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideX.SetTo(Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX)">
            <summary>
            Establece la conexión entre la partición a la que pertenece este lado, y la partición indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideX.SetWall(Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideWallX.WallBuilder)">
            <summary>
            Establece que este lado debe renderizarse como una "pared" plana verticalmente.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionSideX.Load(Kriptok.Mapping.Partitioned.Terrain.TerrainVertexX[])">
            <summary>
            Carga los objetos referidos a los datos para ser utilizados en la construcción del mapa.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Partitioned.Terrain.TerrainVertexX">
            <summary>
            Vértice tridimensional para mapas de terreno Pseudo-3D.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Partitioned.Terrain.TerrainVertexX.normalSum">
            <summary>
            Sumatoria de normales de las particiones que utilizan
            el vértice para calcular la normal final.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainVertexX.AddNormal(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Agrega el vector a las normales 
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Terrain.TerrainVertexX.GetNormal">
            <summary>
            Obtiene la normal correspondiente al vértice.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Terrain.TerrainVertexX.Data">
            <summary>
            Metadatos asociados al vértice.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Terrain.TerrainVertexX.Item(System.String)">
            <summary>
            Obtiene o establece un metadato del vértice.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Partitioned.Wld.WldEntityX">
            <summary>
            Configuración de entidad de mapas de tipo <see cref="T:Kriptok.Mapping.Partitioned.Wld.WldMapX"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldEntityX.#ctor">
            <summary>
            Constructor necesario para la serialización/deserialización.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldEntityX.#ctor(Kriptok.Mapping.Partitioned.Wld.WldEntityX)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Partitioned.Wld.WldEntityX"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.Partitioned.Wld.WldMapX.MaxSize">
            <summary>
            Ancho y alto máximo que puede tener un mapa.
            Esto se debe a que sin este límite, las funciones 
            para ubicar objetos dentro de las particiones,
            produce overflows y puede producir problemas.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.#ctor">
            <summary>
            Constructor necesario para poder deserializar desde XML.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.#ctor(System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Mapping.Partitioned.Wld.WldMapX"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.Serialize(System.Boolean)">
            <summary>
            Serializa el mapa a Xml.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.Save(System.String)">
            <summary>
            Guarda el mapa en el archivo que se cargó.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.Clone">
            <summary>
            Devuelve una copia del mapa.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.Load(System.String)">
            <summary>
            Carga un mapa desde un archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.Load(Kriptok.Common.Resource)">
            <summary>
            Carga un mapa desde un recurso.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.Load(System.Reflection.Assembly,System.String)">
            <summary>
            Carga un mapa desde un recurso.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.Load(System.String,System.String)">
            <summary>
            Carga un mapa desde un xml.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.Load(Kriptok.Mapping.Partitioned.Wld.WldMapX)">
            <summary>
            Carga propiedades extra en tiempo de ejecución después de parsear el Xml.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Wld.WldMapX.Scale">
            <summary>
            Escalamientos a aplicar cuando se genera el mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Wld.WldMapX.Vertices">
            <summary>
            Lista de vértices del mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Wld.WldMapX.Sectors">
            <summary>
            Lista de sectores del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.CreateObjects">
            <summary>
            Devuelve una lista de los procesos creados para este mapa.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.UpdateProperties">
            <summary>
            Este método se utiliza al guardar desde el editor de mapas.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.ClearPartitions">
            <summary>
            Elimina todas las particiones de los sectores.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.FindOrCreateVertex(Kriptok.Drawing.Vector2I)">
            <summary>
            Encuentra o crea un nuevo vértice para las coordenadas indicadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.RefreshSectors">
            <summary>
            Actualiza los sectores del mapa y elimina particiones innecesarias.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldMapX.GetAllWalls">
            <summary>
            Devuelve todas las paredes.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.Partitioned.Wld.WldPartitionX">
            <summary>
            Metadata de las particiones de mapas WLD.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Wld.WldPartitionX.Id">
            <summary>
            Los Ids de las particiones empiezan en cero para que sean fácilmente mapeables a un array y se reenumeran para no dejar lugares en blanco.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldPartitionX.GetVectors">
            <summary>
            Obtiene los vectores bidimensionales de la partición.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldPartitionX.GetVertices">
            <summary>
            Obtiene las referencias a los vértices bidimensionales de la partición.
            </summary> 
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldPartitionX.Vertex(System.Int32)">
            <summary>
            Obtiene el vértice correspondiente al índice.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldPartitionX.NextVertexTo(System.Int32)">
            <summary>
            Obtiene el vértice correspondiente al índice.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldPartitionX.Contains(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si la partición contiene el punto indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldPartitionX.ShareTheSameVertices(Kriptok.Mapping.Partitioned.Wld.WldPartitionX,Kriptok.Mapping.Partitioned.Wld.WldPartitionX)">
            <summary>
            Indica si dos particiones están construidas con los mismos vértices.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Wld.WldPartitionSideX.PortalToSectorId">
            <summary>
            Indica a qué sector conecta este lado.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Wld.WldSectorX.Id">
            <summary>
            Id del sector, utilizado para identificar los sectores en tiempo de ejecución.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Wld.WldSectorX.Floor">
            <summary>
            Información del piso del sector.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Wld.WldSectorX.Ceiling">
            <summary>
            Información del techo del sector.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Wld.WldSectorX.Partitions">
            <summary>
            Lista de perticiones que pertenecen al sector.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Wld.WldSectorX.VisibleInEditor">
            <summary>
            Indica si está visible o no en el editor de mapas. Para facilitar la velocidad de edición.        
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Wld.WldSectorX.KeyIdentifier">
            <summary>
            Comentario identificatorio del sector para ver en el editor.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Wld.WldSectorX.BreakPartitionGroupGraph">
            <summary>
            Indica si este sector debe "romper" la construcción de grupos de particiones.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldSectorX.UpdateProperties(System.Int32)">
            <summary>
            Verifica que los datos sean válidos para el sector y numera las particiones para debugging.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldSectorX.Clear">
            <summary>
            Limpia las particiones del sector.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.Partitioned.Wld.WldSectorX.IsVisibleInEditor">
            <summary>
            Indica si se debe renderizar el sector en el editor de mapas.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.Wld.WldSurfaceX.Angle">
            <summary>
            NOTA: No se está usando, pero si alguna vez se quiere agregar, por las dudas lo dejo.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Partitioned.PartitionedPreviewX">
            <summary>
            Datos de "preview" o de edición del mapa pseudo tridimensional.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.PartitionedPreviewX.GridSize">
            <summary>
            Indica el tamaño de una grilla a la cuál se deben alinear las coordenadas de los vértices de los sectores.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.PartitionedPreviewX.UseGrid">
            <summary>
            Indica si durante la edición del mapa, se debe utilizar una grilla.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.PartitionedPreviewX.DraftScaleX">
            <summary>
            Escala sobre el eje X que se le debe aplicar a la imagen de fondo (<see cref="P:Kriptok.Mapping.Base.MapEditorPreviewX.DraftFile"/>
            al momento de renderizarlo en el editor.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.Partitioned.PartitionedPreviewX.DraftScaleY">
            <summary>
            Escala sobre el eje Y que se le debe aplicar a la imagen de fondo (<see cref="P:Kriptok.Mapping.Base.MapEditorPreviewX.DraftFile"/>
            al momento de renderizarlo en el editor.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.Partitioned.Vertex2DX">
            <summary>
            Representa un vértice bidimensional para entornos pseudo3D con particiones triangulares.
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.TileMapTexset">
            <summary>
            Representa un conjunto de texturas extraídas/generadas en base a un mapa de tiles.
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.TileMapTexset.tiles">
            <summary>
            Tiene todas las texturas de los tiles.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.TileMapTexset.#ctor(Kriptok.Mapping.Tiles.TileMap,Kriptok.Mapping.Tiles.Base.TilesetBase,Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.TileMapTexset"/>
            </summary>
            <param name="tiledMap">Mapa del cual se requiere generar un listado de texturas.</param>
            <param name="tileSet">Tileset en base al cual se construyen las texturas, en caso de tener
            que crear una nueva.</param>
            <param name="options">Opciones por defecto para la generación de texturas.</param>
        </member>
        <member name="P:Kriptok.Mapping.TileMapTexset.AnimatedTiles">
            <summary>
            Obtiene todos los tiles animados del set.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.TileMapTexset.Texture(Kriptok.Mapping.Tiles.Base.ITile)">
            <summary>
            Obtiene la textura para el tile indicado por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.VoxelSpace.VoxelTerrain">
            <summary>
            Clase que condensa la información de los terrenos Voxel: textura y altura del terreno.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.VoxelSpace.VoxelTerrain.Size">
            <summary>
            Obtiene el tamaño del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.VoxelSpace.VoxelTerrain.GetMaxHeight">
            <summary>
            Obtiene el máximo de altura que puede alcanzar el terreno.
            
            No obstante, este valor no debe ser utilizado en una expresión de cálculo, ya que no es
            para nada performante. Debe obtenerse una vez, guardarse en una variable, y luego ser utilizado.
            </summary>        
        </member>
        <member name="F:Kriptok.Mapping.PathFindTypeEnum._4_Way">
            <summary>
            Sólo se mueve en ángulos rectos.
            
            X
            .
            .
            . . . X
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.PathFindTypeEnum._4_Way_CutDiagonals">
            <summary>
            Puede cruzar esquinas abiertas.
            
            X WWWWW
            . WWWWW 
            .  WWWW   
              . . X
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.PathFindTypeEnum._4_Way_CutCorners">
            <summary>
            Puede cruzar esquinas abiertas.
            
            X WWWWW
            . WWWWW 
            . WWWWW   
              . . X
            </summary>
        </member>
        <member name="F:Kriptok.Mapping.PathFindTypeEnum._8_Ways">
            <summary>
            Puede cruzar esquinas cerradas.
            
            X WWWWW
            W . WWW 
            WWW . W
            WWWWW X
            </summary>
        </member>
        <member name="T:Kriptok.Mapping.TexsetBase">
            <summary>    
            OBSOLETA
            
            Utilizar <see cref="T:Kriptok.Mapping.SampleTexsetBase"/>.    
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase.AddExcluding(System.Int32,Kriptok.Mapping.Tiles.Map2DTileInfo,System.Int32[],Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Agrega una tile a la lista de texturas.       
            </summary>                
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase.Add(System.Int32,Kriptok.Mapping.Tiles.Map2DTileInfo,System.Int32[],Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Agrega una tile a la lista de texturas.       
            </summary>                
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase.AddExcluding(System.Int32,Kriptok.Mapping.TexsetBase{Kriptok.Views.Shapes.ISampleTexture},System.Int32[])">
            <summary>
            Agrega un texset completo a otro texset a partir del id indicado.
            </summary>        
        </member>
        <member name="T:Kriptok.Mapping.TexsetBase`1">
            <summary>
            Representa una colección de texturas para ser utilizadas en diversos contextos.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase`1.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.TexsetBase`1"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase`1.#ctor(System.Collections.Generic.IDictionary{System.Int32,`0})">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Mapping.TexsetBase`1"/>
            copiando el set de texturas indicado por parámetro.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.TexsetBase`1.Assembly">
            <summary>
            Obtiene el ensamblado en el que está declarada la clase.
            </summary>
        </member>
        <member name="P:Kriptok.Mapping.TexsetBase`1.Count">
            <summary>
            Obtiene la cantidad de texturas guardadas en el set.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase`1.Add(System.Int32,`0)">
            <summary>
            Permite agregar una textura ya generada.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase`1.NewTexture(System.Int32,System.Reflection.Assembly,System.String,Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Crea una nueva textura desde un recurso para agregar.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase`1.NewTexture(System.Int32,Kriptok.Drawing.FastBitmap[],Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Crea una nueva textura animada para agregar.
            </summary>  
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase`1.Texture(System.Int32)">
            <summary>
            Obtiene la textura indicada por parámetro.
             
            Utiliza el <see cref="M:Kriptok.Extensions.IDictionaryExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)"/>
            para obtener la textura, ya que puede darse el caso de que una determinada textura deje de existir,
            y en ese caso, en lugar de explotar, devolverá una textura nula.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase`1.TextureIds">
            <summary>
            Devuelve un arreglo con todos los Ids de las texturas almacenadas.
            </summary> 
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase`1.Add(System.Int32,System.Reflection.Assembly,System.String,System.Int32,System.Int32)">
            <summary>
            Agrega varias texturas cortando un mapa de bits en varias partes de igual tamaño.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase`1.Add(System.Int32,Kriptok.Common.Resource,Kriptok.Views.Shapes.Texts.TextureOptions,System.Int32,System.Int32)">
            <summary>
            Agrega varias texturas cortando un mapa de bits en varias partes de igual tamaño.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase`1.AddAnimated(System.Int32,Kriptok.Common.Resource,Kriptok.Views.Shapes.Texts.TextureOptions,System.Int32,System.Int32)">
            <summary>
            Agrega varias texturas cortando un mapa de bits en varias partes de igual tamaño.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase`1.SetAnimated(System.Int32,Kriptok.Common.Resource,Kriptok.Views.Shapes.Texts.TextureOptions,System.Int32,System.Int32)">
            <summary>
            Agrega o reemplaza la textura con el identificador indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase`1.NewTexture(System.Int32,Kriptok.Common.Resource,Kriptok.Views.Shapes.Texts.TextureOptions,System.Int32,System.Int32)">
            <summary>
            Crea una nueva textura animada.
            </summary>
        </member>
        <member name="M:Kriptok.Mapping.TexsetBase`1.Add(System.Int32,System.Reflection.Assembly,System.String,Kriptok.Views.Shapes.Texts.TextureOptions,System.Int32,System.Int32)">
            <summary>
            Agrega varias texturas cortando un mapa de bits en varias partes de igual tamaño.
            </summary>        
        </member>
        <member name="P:Kriptok.Mapping.TexsetBase`1.Item(System.Int32)">
            <summary>
            Obtiene o establece la textura correspondiente al id indicado por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Net.INetSession">
            <summary>
            Interfaz básica para intercambio de información entre el cliente y servidor.
            </summary>
        </member>
        <member name="P:Kriptok.Net.INetSession.Id">
            <summary>
            Identificador de la sesión.
            </summary>
        </member>
        <member name="M:Kriptok.Net.INetSession.Send(System.Action{Kriptok.Net.Messages.IMessageBuilder})">
            <summary>
            Envía un mensaje compuesto de varias partes.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.INetSession.Receive``1(``0@)">
            <summary>
            Recibe información del cliente/servidor.
            </summary>        
        </member>
        <member name="T:Kriptok.Net.Messages.IClientRequest">
            <summary>
            Interfaz genérica para mensajes internos del cliente hacia el servidor.
            </summary>
        </member>
        <member name="P:Kriptok.Net.Messages.IClientRequest.SessionId">
            <summary>
            Id de la sesión.
            </summary>
        </member>
        <member name="T:Kriptok.Net.Messages.InitClientMessage">
            <summary>
            Mensaje de inicialización de la sesión de juego.
            
            Note that the StructLayout attribute is used to specify how the struct should be laid out in memory. 
            The Pack field is set to 1 to ensure that the struct is packed tightly, 
            with no padding bytes added between fields.
            </summary>
        </member>
        <member name="F:Kriptok.Net.Messages.InitClientMessage.SessionId">
            <summary>
            Id de la sesión.
            </summary>
        </member>
        <member name="T:Kriptok.Net.Messages.IMessageBuilder">
            <summary>
            Objeto utilizado para construir un request para enviar con varios datos de distintos tipos.
            </summary>
        </member>
        <member name="M:Kriptok.Net.Messages.IMessageBuilder.Append(Kriptok.Net.NetSessionMessageEnum)">
            <summary>
            Agrega una instrucción.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.Messages.IMessageBuilder.Append``1(``0)">
            <summary>
            Agrega una estructura al request.
            </summary>        
        </member>
        <member name="T:Kriptok.Net.Messages.MessageBuilder">
            <summary>
            Objeto utilizado para construir un request para enviar con varios datos de distintos tipos.
            </summary>
        </member>
        <member name="M:Kriptok.Net.Messages.MessageBuilder.Append``1(``0)">
            <summary>
            Envía información al cliente/servidor.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.Messages.MessageBuilder.Append(Kriptok.Net.NetSessionMessageEnum)">
            <summary>
            Envía un mensaje de preparación a la sesión.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.Messages.MessageBuilder.ToBytes">
            <summary>
            Concatena todos los mensajes en un array de bytes para enviar.
            </summary>        
        </member>
        <member name="T:Kriptok.Net.NetClientBase">
            <summary>
            Cliente para juegos en red.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetClientBase.ipAddress">
            <summary>
            IP del servidor.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetClientBase.port">
            <summary>
            Puerto de la conexión.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetClientBase.handler">
            <summary>
            Controlador general de la mensajería.
            </summary>
        </member>
        <member name="M:Kriptok.Net.NetClientBase.#ctor(System.Int32)">
            <summary>
            Inicializa una conexión local. Sólo necesita el puerto para conectarse.
            </summary>
        </member>
        <member name="P:Kriptok.Net.NetClientBase.SessionId">
            <summary>
            Id de la sesión del cliente en el servidor.
            </summary>
        </member>
        <member name="M:Kriptok.Net.NetClientBase.GetLocalIPAddress">
            <summary>
            Obtiene la conexión a la computadora donde está corriendo.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.NetClientBase.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>
            Inicializa una conexión a través de la red.
            </summary>
        </member>
        <member name="M:Kriptok.Net.NetClientBase.Connect">
            <summary>
            Conecta (o intenta conectar) con el servidor.
            
            No se queda esperando, ya que puede parecer que el sistema se cuelga.
            
            Para esperar, utilizar <see cref="M:Kriptok.Net.NetClientBase.IsReady"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Net.NetClientBase.IsReady">
            <summary>
            Indica si el servidor está listo para jugar.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.NetClientBase.Send(System.Action{Kriptok.Net.Messages.IMessageBuilder})">
            <inheritdoc/>        
        </member>
        <member name="M:Kriptok.Net.NetClientBase.Receive``1(``0@)">
            <summary>
            Espera la llegada de un mensaje del tipo indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.NetClientBase.Start(System.Action{Kriptok.Net.Messages.IMessageBuilder},System.Action)">
            <summary>
            Inicializa el envío de información del cliente.
            </summary>        
        </member>
        <member name="T:Kriptok.Net.NetClientBase.NetClientLogger">
            <summary>
            Loggeador para el cliente.
            </summary>
        </member>
        <member name="T:Kriptok.Net.NetComponentBase">
            <summary>
            Componente básico de comunicación entre cliente/servidor.
            </summary>
        </member>
        <member name="M:Kriptok.Net.NetComponentBase.Send(System.Net.Sockets.Socket,System.Action{Kriptok.Net.Messages.IMessageBuilder})">
            <summary>
            Envía un mensaje compuesto.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.NetComponentBase.Receive(System.Net.Sockets.Socket)">
            <summary>
            Espera la llegada de un mensaje del tipo indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.NetComponentBase.Receive``1(System.Net.Sockets.Socket,``0@)">
            <summary>
            Espera la llegada de un mensaje del tipo indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.NetComponentBase.WaitForData(System.Net.Sockets.Socket)">
            <summary>
            Espera hasta que se reciba información.
            </summary>        
        </member>
        <member name="T:Kriptok.Net.NetHelper">
            <summary>
            https://stackoverflow.com/questions/3278827/how-to-convert-a-structure-to-a-byte-array-in-c
            </summary>
        </member>
        <member name="T:Kriptok.Net.INetLogger">
            <summary>
            Interfaz de loggear información en servidores de juego.
            </summary>
        </member>
        <member name="M:Kriptok.Net.INetLogger.ApplicationName(System.String)">
            <summary>
            Informa el nombre de la aplicación.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.INetLogger.Info(System.String)">
            <summary>
            Loggea un mensaje genérico.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.INetLogger.MaxConnections(System.Int32)">
            <summary>
            Informa la cantidad de conexiones que se permiten.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.INetLogger.Port(System.Int32)">
            <summary>
            Informa el puerto que se utilizará para la conexión.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.INetLogger.DnsHostName(System.String)">
            <summary>
            Informa el nombre del servidor donde está corriendo.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.INetLogger.AddressList(System.Net.IPAddress[])">
            <summary>
            Informa todas las direcciones de IP por las que se puede referenciar el servidor.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.INetLogger.Error(System.Int32,System.Net.Sockets.SocketError)">
            <summary>
            Indica que hubo un error de socket en una sesión en particular.
            </summary>        
        </member>
        <member name="T:Kriptok.Net.NetConsoleLogger">
            <summary>
            Loggeador a consola.
            </summary>
        </member>
        <member name="M:Kriptok.Net.NetConsoleLogger.ApplicationName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Net.NetConsoleLogger.Info(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Net.NetConsoleLogger.MaxConnections(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Net.NetConsoleLogger.Port(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Net.NetConsoleLogger.DnsHostName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Net.NetConsoleLogger.AddressList(System.Net.IPAddress[])">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Net.NetConsoleLogger.Param(System.String,System.String)">
            <summary>
            Loggea un parámetro a la consola.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.NetConsoleLogger.Error(System.Int32,System.Net.Sockets.SocketError)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Net.NetServerBase">
            <summary>
            Servidor para desarrollo de juegos en red.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetServerBase.sessionCreationLock">
            <summary>
            Objeto para lockear el contexto.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetServerBase.port">
            <summary>
            Puerto de la conexión.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetServerBase.maxConnections">
            <summary>
            Número máximo de conexiones.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetServerBase.log">
            <summary>
            Loggeador de información.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetServerBase.status">
            <summary>
            Estado en el que se encuentra el servidor.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetServerBase.currentConnections">
            <summary>
            Conexiones actuales.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetServerBase.sessions">
            <summary>
            Sesiones de los jugadores/clientes.
            </summary>
        </member>
        <member name="M:Kriptok.Net.NetServerBase.#ctor(System.Action{Kriptok.Net.NetServerStartup})">
            <summary>
            Devuelve una nueva instancia de <see cref="T:Kriptok.Net.NetServerBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Net.NetServerBase.Start">
            <summary>
            Inicializa el servidor esperando conexiones.
            </summary>
        </member>
        <member name="M:Kriptok.Net.NetServerBase.ServerLoop(System.Net.Sockets.Socket)">
            <summary>
            
            </summary>        
            <returns>Devuelve si debe mantenerse corriendo.</returns>
        </member>
        <member name="M:Kriptok.Net.NetServerBase.IsReady">
            <summary>
            Indica si el juego está listo para empezar.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.NetServerBase.OnFrame(Kriptok.Net.NetServerFrameHandler)">
            <summary>
            Bucle principal del juego a nivel server.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.NetServerBase.OnClientUpdate(Kriptok.Net.INetSession)">
            <summary>
            Recibe y actualiza el estado del cliente.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.NetServerBase.Error(System.Int32,System.Net.Sockets.SocketError)">
            <summary>
            Informa un error de socket en una sesión en particular.
            </summary>        
        </member>
        <member name="T:Kriptok.Net.NetServerStartHandler">
            <summary>
            Controlador del bucle de juego en el servidor de juegos en red.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetServerStartHandler.Connections">
            <summary>
            Cantidad de conexiones activas.
            </summary>
        </member>
        <member name="T:Kriptok.Net.NetServerFrameHandler">
            <summary>
            Controlador del bucle de juego en el servidor de juegos en red.
            </summary>
        </member>
        <member name="M:Kriptok.Net.NetServerFrameHandler.Break">
            <summary>
            Detiene el bucle principal. El juego terminó.
            </summary>
        </member>
        <member name="M:Kriptok.Net.NetServerFrameHandler.HasToBreak">
            <summary>
            Indica si el juego terminó y debe volver a esperar conexiones.
            </summary>        
        </member>
        <member name="T:Kriptok.Net.NetServerStartup">
            <summary>
            Propiedades de inicialización del servidor en red.
            </summary>
        </member>
        <member name="P:Kriptok.Net.NetServerStartup.Title">
            <summary>
            Nombre o título de la aplicación.
            </summary>
        </member>
        <member name="P:Kriptok.Net.NetServerStartup.Logger">
            <summary>
            Loggeador por defecto.
            </summary>
        </member>
        <member name="P:Kriptok.Net.NetServerStartup.Port">
            <summary>
            Puerto de la conexión.
            </summary>
        </member>
        <member name="P:Kriptok.Net.NetServerStartup.MaxConnections">
            <summary>
            Máximo de conexiones disponigles.
            </summary>
        </member>
        <member name="T:Kriptok.Net.NetServerStatusEnum">
            <summary>
            Estados en los que se encuentra el server.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetServerStatusEnum.TakingConnections">
            <summary>
            Indica que el servidor está esperando conexiones antes de empezar el juego.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetServerStatusEnum.Playing">
            <summary>
            Indica que empezó el juego. Ya no se aceptarán conexiones nuevas, pero sí
            se podrán conectar aquellos que hayan perdido la conexión.
            </summary>
        </member>
        <member name="T:Kriptok.Net.NetSession">
            <summary>
            Representa una sesión en un juego en red.    
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetSession.netServer">
            <summary>
            Controlador general del servidor.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetSession.handler">
            <summary>
            Socket que maneja la conexión.
            </summary>
        </member>
        <member name="P:Kriptok.Net.NetSession.Id">
            <summary>
            Identificador de la conexión.
            </summary>
        </member>
        <member name="M:Kriptok.Net.NetSession.Init">
            <summary>
            Inicializa la conexión y empieza a comunicarse con el jugador.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.NetSession.Process(Kriptok.Net.NetSessionMessageEnum)">
            <summary>
            Procesa un mensaje recibido desde el cliente.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.NetSession.Receive">
            <summary>
            Espera la llegada de un mensaje del tipo indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Net.NetSession.Receive``1(``0@)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Net.NetSession.Send(System.Action{Kriptok.Net.Messages.IMessageBuilder})">
            <inheritdoc/>        
        </member>
        <member name="T:Kriptok.Net.NetSessionMessageEnum">
            <summary>
            Tipos de mensaje que se envían el cliente y la sesión.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetSessionMessageEnum.None">
            <summary>
            Mensaje por default, sin valor.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetSessionMessageEnum.IsReady">
            <summary>
            Mensaje básico para preguntar si el sistema está listo.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetSessionMessageEnum.SyncClient">
            <summary>
            Indica que se va a enviar la información del cliente al servidor.
            El tamaño de la información puede variar, dependerá del servidor el análisis.
            </summary>
        </member>
        <member name="F:Kriptok.Net.NetSessionMessageEnum.Break">
            <summary>
            Indica que debe terminar el proceso.
            </summary>
        </member>
        <member name="T:Kriptok.Exceptions.InvalidEnumValueException`1">
            <summary>
            Esta excepción indica que el valor de una variable, propiedad o atributo
            enumerado no es válido.
            </summary>    
        </member>
        <member name="M:Kriptok.Exceptions.InvalidEnumValueException`1.Throw``1(`0)">
            <summary>
            Lanza una excepción de tipo <see cref="T:Kriptok.Exceptions.InvalidEnumValueException`1"/>, y se puede
            utilizar como valor de retorno de métodos.
            </summary>        
        </member>
        <member name="P:Kriptok.Exceptions.ResourceNotFoundException.AssemblyResources">
            <summary>
            Lista de recursos que sí están accessibles en el ensamblado indicado.
            </summary>
        </member>
        <member name="P:Kriptok.Exceptions.CoordinateOutOfMapException.Coordinate">
            <summary>
            Coordenada que se encuentra fuera del mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Extensions.DateTimeExtensions">
            <summary>
            Funcionalidades extendidas de la estructura <see cref="T:System.DateTime"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.DateTimeExtensions.ToStr(System.DateTime)">
            <summary>
            Convierte la fecha al formato YYYY-MM-DD HH:MM:SS.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.DateTimeExtensions.ToAbs(System.DateTime)">
            <summary>
            Convierte la fecha al formato YYYYMMDDHHMMSS.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.MemoryMappedFileExtensions.WriteStr(System.IO.MemoryMappedFiles.MemoryMappedFile,System.String)">
            <summary>
            Escribe un mensaje en la posición 0.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.MemoryMappedFileExtensions.ReadStr(System.IO.MemoryMappedFiles.MemoryMappedFile,System.Int32)">
            <summary>
            Lee un mensaje de texto.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.MemoryMappedFileExtensions.WriteUInt(System.IO.MemoryMappedFiles.MemoryMappedFile,System.UInt32)">
            <summary>
            Escribe un mensaje en la posición 0.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.MemoryMappedFileExtensions.ReadInt(System.IO.MemoryMappedFiles.MemoryMappedFile)">
            <summary>
            Lee un valor de tipo <see cref="T:System.UInt32"/> del archivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.RectangleExtensions.ToRectangleF(System.Drawing.Rectangle)">
            <summary>
            Transforma un <see cref="T:System.Drawing.Rectangle"/> en un <see cref="T:System.Drawing.RectangleF"/> con los mismos valores.
            </summary>        
        </member>
        <member name="T:Kriptok.Extensions.StackExtensions">
            <summary>
            Extensiones para la clase <see cref="T:System.Collections.Generic.Stack`1"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Extensions.TypeExtensions">
            <summary>
            Lista de extensiones para la clase <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.TypeExtensions.Implements``1(System.Type)">
            <summary>
            Indica si la clase implementa la interfaz indicada.
            </summary>        
        </member>
        <member name="T:Kriptok.Extensions.IListExtensions">
            <summary>
            Clase con métodos de extensión para la clase <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.IListExtensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Agrega todos los elementos indicados a la lista.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.UInt32Extensions.ScaleColorDown(System.UInt32,System.UInt32)">
            <summary>
            Escala el valor como si fuera un color de coordenadas RGB.
            </summary>                
        </member>
        <member name="M:Kriptok.Extensions.UInt32Extensions.ScaleColorUp(System.UInt32,System.UInt32)">
            <summary>
            Escala el valor (lo hace más brillante) como si fuera un color de coordenadas RGB.
            </summary>                
        </member>
        <member name="M:Kriptok.Extensions.UInt32Extensions.ScaleColorDownAlpha(System.UInt32,System.UInt32)">
            <summary>
            Escala el valor hacia abajo (lo oscurece) manteniendo la transparencia.
            </summary>                        
        </member>
        <member name="M:Kriptok.Extensions.UInt32Extensions.ScaleColorUpAlpha(System.UInt32,System.UInt32)">
            <summary>
            Escala el valor (lo hace más brillante) manteniendo la transparencia.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.UInt32Extensions.ToColor(System.UInt32)">
            <summary>
            Transforma un color almacenado en un <see cref="T:System.UInt32"/> en un <see cref="T:System.Drawing.Color"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.AssemblyExtensions.TryGetTypes(System.Reflection.Assembly)">
            <summary>
            Intenta obtener todas las clases de un ensamblado.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.DoubleExtensions.ClampToByte(System.Double)">
            <summary>
            Clampea un valor a los valores máximos y mínimos de un <see cref="T:System.Byte"/> y además lo castea.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.DoubleExtensions.Floor(System.Double)">
            <summary>
            Obtiene el "piso" del número de tipo <see cref="T:System.Single"/> indicado.
            </summary>                
        </member>
        <member name="M:Kriptok.Extensions.LinearGradientBrushExtensions.SavingState(System.Drawing.Drawing2D.LinearGradientBrush,System.Action{System.Drawing.Drawing2D.LinearGradientBrush})">
            <summary>
            Este método lo que hace es realizar una copia de la matriz de transformación,
            y volverla a guardar cuando se termine de utilizar la nueva transformación.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.ArrayExtensions.Add``1(``0[],``0)">
            <summary>
            Agrega un elemento a un array, y en caso de ser nulo, lo instancia.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.ArrayExtensions.AddRange``1(``0[],System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Agrega múltiples elementos a un array, y en caso de ser nulo, lo instancia.
            </summary>  
        </member>
        <member name="M:Kriptok.Extensions.ArrayExtensions.AddRange``1(``0[],``0[])">
            <summary>
            Agrega múltiples elementos a un array, y en caso de ser nulo, lo instancia.
            </summary>  
        </member>
        <member name="M:Kriptok.Extensions.ArrayExtensions.IsNullOrEmpty``1(``0[])">
            <summary>
            Indica si un vector no tiene elementos o bien la referencia es nula.
            </summary>                
        </member>
        <member name="M:Kriptok.Extensions.ArrayExtensions.LengthOrDefault``1(``0[])">
            <summary>
            Indica la longitud de un vector, o 0 si este es null.
            </summary>                
        </member>
        <member name="M:Kriptok.Extensions.ColorExtensions.Rotate(System.Drawing.Color,System.Single)">
            <summary>
            Rota la gama del color.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.ColorExtensions.MultiplyBy(System.Drawing.Color,System.Single)">
            <summary>
            Aplica un multiplicador (valor entre 0 y 1) al color, para calcular la opacidad real del color,
            a todas las coordenadas, menos al Alpha.
            </summary>        
            <returns>Devuelve el color modificado.</returns>
        </member>
        <member name="M:Kriptok.Extensions.ColorExtensions.Plus(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Suma las coordenadas de color de dos colores, menos al Alpha, que toma la del color original.
            </summary>        
            <returns>Devuelve el color modificado.</returns>
        </member>
        <member name="T:Kriptok.Extensions.FloatExtensions">
            <summary>
            Funcionalidades extendidas del tipo <see cref="T:System.Single"/>.
            </summary>    
        </member>
        <member name="M:Kriptok.Extensions.FloatExtensions.Floor(System.Single)">
            <summary>
            Obtiene el "piso" del número de tipo <see cref="T:System.Single"/> indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.FloatExtensions.Ceiling(System.Single)">
            <summary>
            Obtiene el "techo" del número de tipo <see cref="T:System.Single"/> indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.FloatExtensions.ClampToByte(System.Single)">
            <summary>
            Clampea un valor a los valores máximos y mínimos de un <see cref="T:System.Byte"/> y además lo castea.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.FloatExtensions.Round(System.Single)">
            <summary>
            Redondea un número al entero más ceracano.
            </summary>
            <param name="f">Número a redondear.</param>
        </member>
        <member name="M:Kriptok.Extensions.FloatExtensions.Round1(System.Single)">
            <summary>
            Redondea un valor de tipo flotante a un decimal.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.FloatExtensions.Clamp(System.Single,System.Single,System.Single)">
            <summary>
            Clampea un valor entre los límites indicados por parámetro.
            </summary>
        </member>
        <member name="F:Kriptok.Extensions.GraphicsExtensions.SolidBrush">
            <summary>
            Brush genérico para dibujar sombras sobre caras texturadas.
            </summary>
        </member>
        <member name="F:Kriptok.Extensions.GraphicsExtensions.ComplexPen">
            <summary>
            Brush genérico para dibujar sombras sobre caras texturadas.
            </summary>
        </member>
        <member name="F:Kriptok.Extensions.GraphicsExtensions.WirePen">
            <summary>
            Esta pluma se utiliza para dibujar figuras suaves como líneas y polígonos.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.GraphicsExtensions.SetPixelatedProperties(System.Drawing.Graphics,System.Drawing.Drawing2D.PixelOffsetMode)">
            <summary>
            https://www.codeproject.com/Tips/66909/Rendering-fast-with-GDI-What-to-do-and-what-not-to        
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.GraphicsExtensions.UsingDefaultInterpolationMode(System.Drawing.Graphics,System.Action)">
            <summary>
            Establece temporalmente el modo de interpolación por defecto. Luego
            vuelve a establecer el que estaba previamente.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.GraphicsExtensions.GetBounds(System.Drawing.Graphics)">
            <summary>
            Obtiene los límites visibles del objeto <see cref="T:System.Drawing.Graphics"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.GraphicsExtensions.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Dibuja la imagen en el objeto graphics indicado, utilizando los atributos indicados por parámero.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.GraphicsExtensions.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Dibuja la imagen en el objeto graphics indicado, utilizando los atributos indicados por parámero.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.IDictionaryExtensions.Resolve``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``1})">
            <summary>
            Resolve utiliza el patrón doble check (antes y después de lockear).
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.FromBase64(System.String)">
            <summary>
            Decodifica el string de base 64.
            </summary>
            <param name="s">String a decodificar.</param>
            <returns>Devuelve el string decodificado de base 64.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.ToBase64(System.String)">
            <summary>
            Codifica el string en base64.
            </summary>
            <param name="s">String a codificar.</param>
            <returns>Devuelve el string codificado en base 64.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.ToInt(System.String)">
            <summary>
            Parsea un string a un tipo de dato entero, validando previamente que no sea null-
            </summary>
            <param name="s">String a parsear.</param>
            <returns>Devuelve el valor del string parseado a int, o 0 si es null.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.ReplaceXmlCharacters(System.String)">
            <summary>
            Función que reemplaza en el contenido de un texto, los caracteres especiales de Xml.
            </summary>
            <param name="text">Texto a modificar.</param>
            <returns>Devuelve la cadena de texto, válida para un Xml.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.ReSplit(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="regex"></param>
            <returns></returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.PopLast(System.String)">
            <summary>
            Le quita el último caracter a una cadena.
            </summary>
            <param name="s">String a recortar.</param>        
            <returns>Devuelve una cadena sin el último caracter.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.PopFirst(System.String)">
            <summary>
            Le quita el primer caracter a la cadena.
            </summary>
            <param name="s">String a recortar.</param>        
            <returns>Devuelve una cadena sin el primer caracter.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.PopLast(System.String,System.Int32)">
            <summary>
            Le quita el último caracter a una cadena.
            </summary>
            <param name="s">String a recortar.</param>        
            <param name="numberOfCaracters">Cantidad de caracteres a recortar.</param>
            <returns>Devuelve una cadena sin el último caracter.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.PopFirst(System.String,System.Int32)">
            <summary>
            Le quita el primer caracter a la cadena.
            </summary>
            <param name="s">String a recortar.</param>        
            <param name="numberOfCaracters">Cantidad de caracteres a recortar.</param>
            <returns>Devuelve una cadena sin el primer caracter.</returns>
        </member>
        <member name="M:Kriptok.Extensions.StringExtensions.ToLowerOrEmpty(System.String)">
            <summary>
            Pasa un string a minúsculas o a uno vacío si el string es null.
            </summary>        
        </member>
        <member name="T:Kriptok.Extensions.BitmapExtensions">
            <summary>
            Estas funcionalidades no deben ser utilizadas dentro del flujo de un juego, por su pobre performance.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.BitmapExtensions.ForEachPixel(System.Drawing.Bitmap,System.Action{System.Int32,System.Int32,System.Drawing.Color})">
            <summary>
            Ejecuta una acción sobre cada pixel del Bitmap. Esta funcionalidad es para edición de imágenes,
            pero es sumamente lenta y no debe ser implementada dentro del flujo de un juego.
            </summary>
            <param name="img">Bitmap a rotar.</param>
            <param name="action">Acción a realizar para las coordenadas X, Y.</param>
        </member>
        <member name="M:Kriptok.Extensions.BitmapExtensions.SavePng(System.Drawing.Bitmap,System.String)">
            <summary>
            Guarda un bitmap como png.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.BitmapExtensions.GetSortOrder(System.Drawing.Bitmap)">
            <summary>
            Obtiene el valor para ordenar texturas en editores de mapas.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.IEnumerableExtensions.OrderByRandom``1(System.Collections.Generic.IEnumerable{``0},System.Random)">
            <summary>
            Ordena un enumerado de forma aleatoria.
            </summary>
            <typeparam name="T">Tipo del enumerado.</typeparam>
            <param name="enumerable">Objeto enumerado.</param>
            <returns>Devuelve un nuevo enumerado ordenado aleatoriamente.</returns>
        </member>
        <member name="M:Kriptok.Extensions.IEnumerableExtensions.ToArray``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Transforma cualquier tipo de enumerable en un array.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.ImageExtensions.ToByteArray(System.Drawing.Image)">
            <summary>
            Convierte una imagen a un array de bytes de color.
            Dependiendo del formato de pixels indicados, cada pixel
            puede ocupar 3 o 4 elementos del array.
            </summary>                
        </member>
        <member name="M:Kriptok.Extensions.ImageExtensions.ToUInt32Array(System.Drawing.Image)">
            <summary>
            Convierte una imagen a un array de bytes de color.
            Dependiendo del formato de pixels indicados, cada pixel
            puede ocupar 3 o 4 elementos del array.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.ImageExtensions.UsingGraphics(System.Drawing.Image,System.Action{System.Drawing.Graphics})">
            <summary>
            Crea un contexto de Graphics para modificar el bitmap.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.Int32Extensions.ClampToByte(System.Int32)">
            <summary>
            Clampea un valor a los valores máximos y mínimos de un <see cref="T:System.Byte"/> y además lo castea.
            </summary>
        </member>
        <member name="M:Kriptok.Extensions.Int32Extensions.IsPowerOfTwo(System.Int32)">
            <summary>
            Indica si un número es potencia de 2.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.ObjectExtensions.In``1(``0,``0[])">
            <summary>
            Indica si el objeto se encuentra dentro de un arreglo de posibles valores.
            </summary>
            <typeparam name="TSourceType">Parámetro de tipo inferido.</typeparam>
            <param name="obj">Objeto a evaluar.</param>
            <param name="possibleValues">Arreglo de valores para evaluar.</param>
            <returns>Devuelve "true" si el objeto se encuentra en el arreglo, y "false" de lo contrario.</returns>
        </member>
        <member name="M:Kriptok.Extensions.ObjectExtensions.IfNotNull``2(``0,System.Func{``0,``1})">
            <summary>
            Este método es poco performante.
            
            NO USAR EN ALGORITMOS QUE REQUIEREN CORRER DE FORMA OPTIMA.
            </summary>        
        </member>
        <member name="M:Kriptok.Extensions.ObjectExtensions.With``1(``0,System.Action{``0})">
            <summary>
            Permite establecer propiedades y configuraciones de un objeto 
            sin necesidad de almacenarlo en una variable.
            </summary>        
        </member>
        <member name="F:Kriptok.Forms.MsDosForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.MsDosForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Kriptok.Forms.MsDosForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Kriptok.Forms.TiedForm">
            <summary>
            Representa un formulario utilizado en juegos cuyo gameplay no requiere
            estar desligado de la velocidad de renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.TiedForm.interval">
            <summary>
            Cantidad de milisegundos entre frame.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.TiedForm.sw">
            <summary>
            Utilizado para medir la duración de cada frame.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.TiedForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.TiedForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Kriptok.Forms.TiedForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Kriptok.Forms.WinConsts">
            <summary>
            Constant value was found in the "windows.h" header file.
            
            https://docs.microsoft.com/en-us/windows/win32/winmsg/about-messages-and-message-queues
            https://docs.microsoft.com/en-us/windows/win32/winmsg/window-notifications
            https://docs.microsoft.com/en-us/windows/win32/gdi/painting-and-drawing-messages
            
            https://wiki.winehq.org/List_Of_Windows_Messages
            </summary>
        </member>
        <member name="F:Kriptok.Forms.WinConsts.WM_WNT_CONVERTREQUESTEX">
            <summary>
            WM_UNICHAR / WM_KEYLAST
            </summary>
        </member>
        <member name="M:Kriptok.Forms.PixelatedForm.TransformFullScreen(System.Drawing.Graphics)">
            <summary>
            Aplica las transformaciones necesarias para renderizar en pantalla completa.
            </summary>        
        </member>
        <member name="M:Kriptok.Forms.PixelatedForm.GetFullScreenBlitter(Kriptok.Drawing.DirectBitmap)">
            <summary>
            Crea un objeto que sirve para transferir la información de un back-buffer a otro.
            </summary>        
        </member>
        <member name="M:Kriptok.Forms.PixelatedForm.GetHorizontalBlitter(Kriptok.Drawing.DirectBitmap,System.Int32,System.Int32)">
            <summary>
            Crea un objeto que sirve para transferir la información de un back-buffer a otro.
            </summary>        
        </member>
        <member name="M:Kriptok.Forms.PixelatedForm.GetBlitter(Kriptok.Drawing.DirectBitmap,System.Int32,System.Int32)">
            <summary>
            Crea un objeto que sirve para transferir la información de un back-buffer a otro.
            </summary>        
        </member>
        <member name="M:Kriptok.Forms.PixelatedForm.GetBuffer">
            <summary>
            Obtiene el buffer.
            </summary>        
        </member>
        <member name="F:Kriptok.Forms.PixelatedForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.PixelatedForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Kriptok.Forms.PixelatedForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Kriptok.Forms.FormBase">
            <summary>
            Clase base para todos los tipos de formulario del framework.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.FormBase.frameCounter">
            <summary>
            Contador de frames del juego.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.FormBase.lostFocus">
            <summary>
            Indica si perdió el foco alguna vez desde que se abrió el formulario (para el modo ventana).
            
            Sólo se utiliza la primera vez que se pierde el foco.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.FormBase.ExitFlag">
            <summary>
            Indica si debe detener el juego completamente, y cerrarlo.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.FormBase.GameStartedTime">
            <summary>
            Utilizado en tiempo de desarrollo para 
            </summary>        
        </member>
        <member name="M:Kriptok.Forms.FormBase.#ctor">
            <summary>
            Para poder ser editado.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.FormBase.#ctor(Kriptok.Forms.FormInitArgs)">
            <summary>
            Crea una nueva instancia de la clase <see cref="T:Kriptok.Forms.FormBase"/>
            </summary>
        </member>
        <member name="M:Kriptok.Forms.FormBase.IsFullScreen">
            <summary>
            Indica si está en modo "pantalla completa".
            </summary>        
        </member>
        <member name="M:Kriptok.Forms.FormBase.OnStart">
            <summary>
            Permite ejecutar código antes de empezar el gameloop.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.FormBase.GameLoop">
            <summary>
            Método que se ejecuta constantemente para actualizar la pantalla y lógica del juego.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.FormBase.Render(System.Drawing.Graphics,Kriptok.Core.RegionBase)">
            <summary>
            Método que debería ser abstracto en una clase abstracta.
            
            Pero los forms no pueden ser abstractos porque rompen el modo diseño.
            </summary>        
        </member>
        <member name="M:Kriptok.Forms.FormBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Forms.FormBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Forms.FormBase.OnActivated(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Forms.FormBase.OnDeactivate(System.EventArgs)">
            <summary>
            Este método se dispara cuando el formulario pierde foco.        
            </summary>        
        </member>
        <member name="F:Kriptok.Forms.FormBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.FormBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Kriptok.Forms.FormBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Kriptok.Forms.MainForm">
            <summary>
            Este formulario incorpora los conceptos de Div, como objetos/procesos simultáneos.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.MainForm.currentScene">
            <summary>
            Actividad que está corriendo actualmente.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.MainForm.nextScene">
            <summary>
            Actividad que se debe iniciar en le próximo frame, reemplazando a <see cref="F:Kriptok.Forms.MainForm.currentScene"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Forms.MainForm.sceneOn">
            <summary>
            Objeto utilizado para lockear el cambio de escenas.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.MainForm.SetScene(Kriptok.Scenes.SceneBase)">
            <summary>
            Establece una nueva escena.
            </summary>        
        </member>
        <member name="M:Kriptok.Forms.MainForm.SendMessageToScene(System.Object)">
            <summary>
            Envía el menasje a la escena. El mensaje puede ser cualquier cosa.
            Pero depende de la escena saber interpretarlo en la implementación del método
            <see cref="M:Kriptok.Scenes.SceneBase.OnMessage(Kriptok.Scenes.SceneHandler,System.Object)"/>.
            </summary> 
        </member>
        <member name="F:Kriptok.Forms.MainForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Kriptok.Forms.MainForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Kriptok.Forms.MainForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Buffered.BackBuffer.backBuffer">
            <summary>
            Buffer donde se dibujará el fondo.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Buffered.BackBuffer.Scan0">
            <summary>
            Contiene el puntero al primer pixel del buffer.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Buffered.BackBuffer.RenderOn(System.Drawing.Graphics)">
            <summary>
            Renderiza el buffer en el graphics asociado.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Buffered.BackBuffer.RenderOn(System.Drawing.Graphics,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Renderiza el buffer en el graphics asociado con la transformación de color indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Buffered.BackBuffer.Clear">
            <summary>
            Limpia completamente el buffer.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Buffered.BackBuffer.CreateGraphics">
            <summary>
            Crea un objeto Graphics para el buffer.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Buffered.BackBuffer.CreateBlitter(System.Drawing.Rectangle)">
            <summary>
            Crea un blitter para este buffer.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Buffered.BackBuffer.GetTileCanvas">
            <summary>        
            Obtiene un lienzo para renderizar tiles.
            </summary>      
        </member>
        <member name="F:Kriptok.Regions.Buffered.BackBufferGraphics.blitter">
            <summary>
            Objeto que se encarga de transferir los bits renderizados a la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Buffered.BackBufferGraphics.backBufferGraphics">
            <summary>
            Objeto utilizado para dibujar sobre el buffer.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Buffered.BackBufferGraphics.Graphics">
            <summary>
            Obtiene el objeto para renderizar gráficos GDI+ asociado al buffer.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Buffered.IBuffered3DExtensions">
            <summary>
            Extensiones para modos buffereados para renderizar.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Context.Queries.IMouseLocationContext">
            <summary>
            Indica que la región puede obtener y devolver las coordenadas del mouse en el plano.
            
            Sólo funciona en determinados modos.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Queries.IMouseLocationContext.GetMouseLocation">
            <summary>
            Obtiene la ubicación del mouse proyectado al modo de renderización correspondiente.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Context.Queries.IOutOfScreenContext">
            <summary>
            Esta interfaz es implementada por modos de pantalla que permiten evaluar si determinados tipos de
            vista se encuentran fuera de la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Queries.IOutOfScreenContext.OutOfRegion(Kriptok.Drawing.Bound2)">
            <summary>
            Indica si el rectángulo indicado por parámetro se encuentra fuera de la pantalla.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Context.Base.ITranslatableRenderContext">
            <summary>
            Indica que se trata de un contexto que para ubicar figuras tridimencionales, traslada el centro de la pantalla,
            en lugar de usar perspectiva.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Context.Base.Render3DContextBase">
            <summary>
            Contexto base de renderización para interfaces tridimensionales.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.Render3DContextBase.HalfWidthFov">
            <summary>
            Campo precalculado para aplicar "field of view".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.Render3DContextBase.regionHeightF">
            <summary>
            Alto de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.Render3DContextBase.rayCastXSubstraction">
            <summary>
            Valor utilizado para reacomodar la coordenada X en la pantalla cuando se traza un rayo para
            intersectar con un plano.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.Render3DContextBase.rayCastYSubstraction">
            <summary>
            Valor utilizado para reacomodar la coordenada Y en la pantalla cuando se traza un rayo para
            intersectar con un plano.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.Render3DContextBase.currentRenderingDistance">
            <summary>
            Almacena el valor de la distancia hasta la cámara (en entornos tridimensicnales)
            a la cual se está renderizando actualmente.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.Render3DContextBase.fog">
            <summary>
            Indica si no se está utilizando un efecto de neblina.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.Render3DContextBase.spriteScaleMultiplier">
            <summary>
            Multiplicador de escala para sprites y otras vistas bidimensionales.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.Render3DContextBase.spriteScaleMultiplierFov">
            <summary>
            Multiplicador de escala para sprites y otras vistas bidimensionales, multiplicado
            por la inversa del field of view.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.Render3DContextBase.FieldOfView">
            <summary>
            Valor inverso del field of view, utilizado para cálculos de raycasting.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.Render3DContextBase.InverseFov">
            <summary>
            Valor inverso del field of view, utilizado para cálculos de raycasting.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.Render3DContextBase.noFog">
            <summary>
            Indica si para este frame no hay efectos de neblina.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.GetTransform">
            <summary>
            Obtiene la matriz de transformación de la cámara, para figuras tridimensionales.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.DeTransform(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.DeTransform(System.Single,System.Single,System.Single)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.DeTransform_XYZ_ZX(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            
            Sólo devuelve, sin embargo, las coordenadas (Z, X), en ese orden.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.DeTransform_X0Z_ZX(System.Single,System.Single)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            
            Se considera la coordenada Y = 0f, por defecto.
            
            Sólo devuelve, sin embargo, las coordenadas (Z, X), en ese orden.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.GetAmbientColorFilter">
            <summary>
            Filtro de color heredado de las configuraciones de la región.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.Render3DContextBase.AngleZDegrees">
            <summary>
            Valor en grados del ángulo Z de la cámara.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Context.Base.Render3DContextBase.CenterX">
            <summary>
            Coordenada X del centro de la pantalla (es virtual ya que en la clase derivada se 
            recalcula en base al Y-Shearing).
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Context.Base.Render3DContextBase.CenterY">
            <summary>
            Coordenada Y del centro de la pantalla (es virtual ya que en la clase derivada se 
            recalcula en base al Y-Shearing).
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.SetDistance(System.Single)">
            <summary>
            Establece la distancia de renderización que se estará utilizando.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.SetNoDistance">
            <summary>
            Establece una distancia precalculada para que parezca que no se aplica perspectiva al renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.GetCalculatedScale(System.Single)">
            <summary>
            Calcula la escala a la que se debe escalar un gráfico dada su distancia hasta la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.GetCalculatedScaleFov(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.ApplyTransformations(Kriptok.Views.Gdip.FlipEnum)">
            <summary>
            Aplica transformaciones correspondientes al estado actual de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.FillPolygon(System.UInt32,System.Drawing.PointF[])">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.UsingSolidBrush(System.UInt32,System.Action{System.Drawing.SolidBrush})">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.UsingPen(System.UInt32,Kriptok.Views.Shapes.IStroke,System.Action{System.Drawing.Pen})">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.NoFog">
            <summary>
            Indica si no debe aplicar filtros de color según neblina.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.Fill(System.Drawing.PointF[],System.Action)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.GetTextureFog">
            <summary>
            Obtiene el valor actual de la incidencia de la neblina para
            objetos tridimensionales texturados.        
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.GetFullFogDistance">
            <summary>
            Obtiene la distancia a partir de la cual la transformación de color 
            por distancia (neblina, por ejemplo) renderiza un polígono completamente 
            opacado por el efecto.
            
            Puede utilizarse para realizar polygon culling, de ser necesario.
            </summary>     
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.GetRenderLocationFor(Kriptok.Views.Base.GdipViewBase)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.Render(Kriptok.Views.Shapes.GdipShapeViewBase)">
            <summary>
            Renderiza una forma de Gdip. Utilizando el patrón Double-Dispatch.
            
            Para las figuras que heredan de <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/> debería utilizarse en lugar
            de <see cref="M:Kriptok.Regions.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.TransformVertices(Kriptok.Views.Shapes.VertexCollection)">
            <summary>
            Aplica las transformacinoes correspondientes a los vértices indicados por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.GetShapeTranform(Kriptok.Views.Shapes.Base.FastShapeViewBase)">
            <summary>
            Obtiene una matriz de transformación para la figura indicada por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.ProjectV(Kriptok.Drawing.Algebra.Vector3F)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.ProjectV(Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.ProjectP(Kriptok.Drawing.Algebra.Vector3F)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.GetRayX(System.Int32)">
            <summary>
            Obtiene la coordenada X para la columna indicada de un "rayo" en procesos de RayCasting.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.GetRayY(System.Int32)">
            <summary>
            Obtiene la coordenada Y para la fila indicada de un "rayo" en procesos de RayCasting.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.IsVisible(Kriptok.Views.Shapes.Base.IVisible)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)">
            <summary>
            Renderiza un objeto según corresponda en la perspectiva que se está utilizando.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.TranslateFor2D(Kriptok.Drawing.Algebra.Vector2F)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.GetSampleFloorShade">
            <summary>
            Obtiene el nivel de incidencia de la luz para un plano "piso".
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.GetSampleCeilingShade">
            <summary>
            Obtiene el nivel de incidencia de la luz para un plano "techo".
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.GetRotationAngle3D(Kriptok.Drawing.Algebra.Vector3F)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render3DContextBase.GetCameraLocation">
            <summary>
            Obtiene la posición calculada de la cámara.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Context.Base.IPseudo3DRenderContext">
            <summary>
            Este contexto agrega la posibilidad de utilizar texturas de tipo GDIP
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IPseudo3DRenderContext.FillHorizontal(System.Int32,System.Int32,System.Int32,System.Action)">
            <summary>
            Aplica transformaciones de color correspondiente a la renderización
            de líneas horizontales texturadas.
            </summary>  
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IPseudo3DRenderContext.FillVertical(System.Int32,System.Int32,System.Int32,System.Action)">
            <summary>
            Aplica transformaciones de color correspondiente a la renderización
            de líneas verticales texturadas.
            </summary>  
        </member>
        <member name="T:Kriptok.Regions.Context.Base.IRenderBufferContext">
            <summary>
            Este contexto se utiliza para cargar el buffer de los renderizables
            a, bueno... a renderizar...
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Context.Base.IRenderBufferContext.Region">
            <summary>
            Región de pantalla a la que pertenece el contexto de renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderBufferContext.Transform3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderBufferContext.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Context.Base.IRenderBufferContext.RegionBounds">
            <summary>
            Límites de renderización de la región.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Context.Base.Render2DContextBase">
            <summary>
            Clase utilizada para unificar comportamientos entre los modos de Screen y Scroll.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render2DContextBase.IsVisible(Kriptok.Views.Shapes.Base.IVisible)">
            <summary>
            Esta interfaz es bidimensional, por lo que se valida utilizando <see cref="!:IVisible.IsVisible2D(Base.IProjector)"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render2DContextBase.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)">
            <summary>
            Renderiza un objeto según corresponda en la perspectiva que se está utilizando.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render2DContextBase.TransformVertices(Kriptok.Views.Shapes.VertexCollection)">
            <summary>
            Aplica las transformacinoes correspondientes a los vértices indicados por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render2DContextBase.TranslateFor2D(Kriptok.Drawing.Algebra.Vector2F)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.Render2DContextBase.GetCalculatedScaleFov(System.Single)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Context.Base.RenderContextBase">
            <summary>
            Contexto de renderización del frame.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.#ctor(System.Drawing.Graphics,Kriptok.Core.RegionBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Context.Base.RenderContextBase"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Context.Base.RenderContextBase.Graphics">
            <summary>
            Lienzo donde se renderizan las vistas.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Context.Base.RenderContextBase.Region">
            <summary>
            Región de la pantalla donde se está renderizando.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Context.Base.RenderContextBase.RegionBounds">
            <summary>
            Obtiene los límites de renderización de la región de renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.RenderContextBase.Lightning">
            <summary>
            Iluminación al momento de la renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.FillPolygon(System.UInt32,System.Drawing.PointF[])">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.UsingSolidBrush(System.UInt32,System.Action{System.Drawing.SolidBrush})">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.UsingPen(Kriptok.Views.Shapes.IStroke,System.Action{System.Drawing.Pen})">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.ApplyTransformations(Kriptok.Views.Gdip.FlipEnum)">
            <summary>
            Aplica transformaciones correspondientes al estado actual de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.UpdateLightSource(Kriptok.Drawing.Algebra.Matrix3x4F)">
            <summary>
            Actualiza la fuente de la luz ambiental. La lógica es la siguiente:
            
            En un framework común, a los gráficos poligonales se le aplicarían dos transformaciones.
              1) Rotación/Escalamiento/etc.
                 * * * * Cálculo de incidencia de luz sobre las caras * * * *
              2) Transformaciones de la cámara.
              
            En mi caso, todas las transformaciones se aplican juntas, por tanto, al momento de calcular la
            incidencia de la luz, también tendría que aplicar las transformaciones de la cámara al vector
            que indica el origen de la luz.
              * * * * Adapto la incidencia de la luz a la cámara * * * *
              2) Aplico todas las transformaciones al polígono.
              * * * * Cálculo de incidencia de luz sobre las caras * * * *
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.Fill(System.Drawing.PointF[],System.Action)">
            <summary>
            Método utilizado para rellenar un área poligonal con una textura.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.Transform3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.GetAngleToCamera2D(Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Obtiene el ángulo percibido de la entidad desde la cámara, tomando en cuenta 
            su ubicación y rotación.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.GetRotationAngle3D(Kriptok.Drawing.Algebra.Vector3F)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.GetRenderLocationFor(Kriptok.Views.Base.GdipViewBase)">
            <inheritdoc/>     
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.Render(Kriptok.Views.Shapes.GdipShapeViewBase)">
            <summary>
            Renderiza una forma de Gdip. Utilizando el patrón Double-Dispatch.
            
            Para las figuras que heredan de <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/> debería utilizarse en lugar
            de <see cref="M:Kriptok.Regions.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.TransformVertices(Kriptok.Views.Shapes.VertexCollection)">
            <summary>
            Aplica las transformacinoes correspondientes a los vértices indicados por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.GetShapeTranform(Kriptok.Views.Shapes.Base.FastShapeViewBase)">
            <summary>
            Obtiene una matriz de transformación para la figura indicada por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.Fill(Kriptok.Views.Shapes.IGdipTexture,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Utiliza una textura para llenar una determinada región de la pantalla, con las
            coordenadas indicadas por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.Fill(Kriptok.Views.Shapes.IGdipTexture,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint)">
            <summary>
            Utiliza una textura para llenar una determinada región de la pantalla, con las
            coordenadas indicadas por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.FilterVisible``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Recibe una lista de objetos, y determina si vale la pena evaluar su prioridad basado en su visibilidad.        
            </summary>        
            <typeparam name="T">Tipo de vistas a renderizar.</typeparam>
            <param name="views">Lista de vistas a renderizar.</param>        
            <returns>Devuelve la lista de vistas a renderizar que son visibles en el contexto indicado.</returns>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.IsVisible(Kriptok.Views.Shapes.Base.IVisible)">
            <summary>
            Evalúa si una figura es visible actualmente, para saber si debe agregarla al buffer de renderización.
            </summary>   
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)">
            <summary>
            Renderiza un objeto según corresponda en la perspectiva que se está utilizando.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.TranslateFor2D(Kriptok.Drawing.Algebra.Vector2F)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.GetCalculatedScaleFov(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.Compare(Kriptok.Views.Base.IPriorizable,Kriptok.Views.Base.IPriorizable)">
            <summary>
            Compara dos objetos priorizables para ordenarlos en la renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.RenderContextBase.GetInversePriority(Kriptok.Drawing.Algebra.Vector3F)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Context.Base.ScrollRenderContextBase">
            <summary>
            Contexto base de renderización de modos bidimensionales con scroll.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.ScrollRenderContextBase.Sin">
            <summary>
            Seno del ángulo Z de la cámara.
            Utilizado para no recalcular cada vez que sea necesario.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.ScrollRenderContextBase.Cos">
            <summary>
            Coseno del ángulo Z de la cámara.
            Utilizado para no recalcular cada vez que sea necesario.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.ScrollRenderContextBase.transform">
            <summary>
            Matriz de transformación de la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.ScrollRenderContextBase.Rotation">
            <summary>
            Ángulo de rotación de la cámara para el renderizado.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Base.ScrollRenderContextBase.CameraLocation">
            <summary>
            Ubicación del objeto en base al cual se renderiza el plano de scroll.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.ScrollRenderContextBase.ApplyTransformations(Kriptok.Views.Gdip.FlipEnum)">
            <summary>
            Aplica transformaciones correspondientes al estado actual de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.ScrollRenderContextBase.CalculateScreenCoords(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Calcula las coordenadas en pantalla para las coordenadas del entorno de scroll indicadas.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.ScrollRenderContextBase.CalculateScreenCoords(System.Single,System.Single)">
            <summary>
            Calcula las coordenadas en pantalla para las coordenadas del entorno de scroll indicadas.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.ScrollRenderContextBase.CalculateScreenY(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la coordenada "Y" de las coordenadas bidimencionales transformadas, sin
            tomar en cuenta la altura de la cámara.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.ScrollRenderContextBase.UsingMatrix(System.Action{System.Drawing.Drawing2D.Matrix})">
            <summary>
            Permite ejecutar una porción de código transformando la
            <see cref="T:Kriptok.Drawing.Algebra.Matrix2x3F"/> en una <see cref="T:System.Drawing.Drawing2D.Matrix"/> y liberándola después.
            </summary> 
        </member>
        <member name="M:Kriptok.Regions.Context.Base.ScrollRenderContextBase.Transform3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.ScrollRenderContextBase.CustomTransform(Kriptok.Drawing.Algebra.Matrix2x3F)">
            <summary>
            Permite aplicar transformaciones extra al momento de renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.ScrollRenderContextBase.TranslateWithTransformations(System.Drawing.Drawing2D.Matrix)">
            <summary>
            Traslada la matriz al centro para transformarla.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.ScrollRenderContextBase.TransformWithTransformations(System.Drawing.Graphics)">
            <summary>
            Transformaciones sobre el objeto "Graphics".
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Context.Base.IRenderContext">
            <summary>
            Contexto actual de renderización.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Context.Base.IRenderContext.Graphics">
            <summary>
            Lienzo donde se renderizan las vistas.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext.GetAngleToCamera2D(Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Obtiene el ángulo desde la cámara, para vistas de tipo <see cref="T:Kriptok.Views.Sprites.DirectionalSpriteView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext.Render(Kriptok.Views.Shapes.GdipShapeViewBase)">
            <summary>
            Renderiza una forma de Gdip. Utilizando el patrón Double-Dispatch.
            
            Para las figuras que heredan de <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/> debería utilizarse en lugar
            de <see cref="M:Kriptok.Regions.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext.FillPolygon(System.UInt32,System.Drawing.PointF[])">
            <summary>
            Renderiza el polígono con el material indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext.UsingSolidBrush(System.UInt32,System.Action{System.Drawing.SolidBrush})">
            <summary>
            Abre un contexto para la utilización de una brocha de color sólido.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext.UsingPen(Kriptok.Views.Shapes.IStroke,System.Action{System.Drawing.Pen})">
            <summary>
            Abre un contexto para la utilización de una lapicera de color sólido.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext.ApplyTransformations(Kriptok.Views.Gdip.FlipEnum)">
            <summary>
            Aplica transformaciones correspondientes al estado actual de la cámara.        
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext.GetLightIncidence(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene la incidencia de la luz ambiental calculada en base a los
            vértices tridimencionales indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext.Fill(System.Drawing.PointF[],System.Action)">
            <summary>
            Aplica transformaciones de color correspondiente a la renderización
            de polígonos texturados.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext.Fill(Kriptok.Views.Shapes.IGdipTexture,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Utiliza una textura para llenar una determinada región de la pantalla, con las
            coordenadas indicadas por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext.Fill(Kriptok.Views.Shapes.IGdipTexture,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint)">
            <summary>
            Utiliza una textura para llenar una determinada región de la pantalla, con las
            coordenadas indicadas por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)">
            <summary>
            Renderiza un objeto según corresponda en la perspectiva que se está utilizando.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext.TranslateFor2D(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Aplica una transformación para la renderización de sprites y otras figuras bidimensionales.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext.GetRenderLocationFor(Kriptok.Views.Base.GdipViewBase)">
            <summary>
            Obtiene mediante patrón doble-dispach la ubicación final en pantalla de la vista indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext.GetRotationAngle3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo de rotación 3D para vistas bidimensionales. En escencia, indica qué ángulo debe ser 
            utilizado para los <see cref="T:Kriptok.Views.Sprites.DirectionalSpriteView"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Context.Base.IRenderContext2D">
            <summary>
            Contexto de renderización bidimensional.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Context.Base.IRenderContext3D">
            <summary>
            Contexto de renderización tridimencional.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext3D.SetDistance(System.Single)">
            <summary>
            Establece la distancia de renderización que se estará utilizando.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContext3D.GetCalculatedScale(System.Single)">
            <summary>
            Calcula la escala a la que se debe escalar un gráfico dada su distancia hasta la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContextExtensions.IsVisible2D(Kriptok.Regions.Context.Base.IRenderContext2D,System.Func{Kriptok.Drawing.BoundF2})">
            <summary>
            Indica si un objeto bidimensional en un entorno tridimensional
            es visible dada la distancia de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContextExtensions.IsNotBehindTheCamera(Kriptok.Regions.Context.Base.IProjector,System.Single)">
            <summary>
            Indica si un objeto bidimensional en un entorno tridimensional
            es visible dada la distancia de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContextExtensions.IsVisible3D(Kriptok.Regions.Context.Base.IRenderContext3D,System.Single,System.Func{Kriptok.Drawing.BoundF2})">
            <summary>
            Indica si un objeto bidimensional en un entorno tridimensional
            es visible dada la distancia de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContextExtensions.RenderAxis(Kriptok.Regions.Context.Base.IRenderContext,System.Single)">
            <summary>
            Renderiza el eje de coordenadas para tener 
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContextExtensions.Project3D(Kriptok.Regions.Context.Base.IRenderContext,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Proyecta un vector tridimensional a las dos dimensiones de la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContextExtensions.ProjectEdge(Kriptok.Regions.Context.Base.IRenderContext,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Proyecta un segmento definido por dos vértices contra la pantalla. Y los recorta contra
            el plano Z = <see cref="F:Kriptok.Drawing.Algebra.Vector3F.InvalidZ"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContextExtensions.DrawTransformedWire3D(Kriptok.Regions.Context.Base.IRenderContext,Kriptok.Views.Shapes.IStroke,Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Renderiza un segmento en un entorno tridimencional, ya adaptado
            a la posición de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IRenderContextExtensions.DrawNoTransformedWire3D(Kriptok.Regions.Context.Base.IRenderContext,Kriptok.Views.Shapes.IStroke,Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Renderiza un segmento en un entorno tridimencional, ya adaptado
            a la posición de la cámara.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Context.Base.IProjector">
            <summary>
            Interfaz que debe implementarse con la forma de proyectar las coordenadas tridimensionales en 
            el plano bidimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IProjector.ProjectP(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Proyecta un vector tridimensional contra la pantalla en un <see cref="T:System.Drawing.PointF"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IProjector.ProjectV(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Proyecta un vector tridimensional contra la pantalla en un <see cref="T:Kriptok.Drawing.Algebra.Vector3F"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IProjector.ProjectV(Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Proyecta un vector tridimensional contra la pantalla en un <see cref="T:Kriptok.Drawing.Algebra.Vector3F"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IProjector.TransformVertices(Kriptok.Views.Shapes.VertexCollection)">
            <summary>
            Aplica las transformacinoes correspondientes a los vértices indicados por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IProjector.GetShapeTranform(Kriptok.Views.Shapes.Base.FastShapeViewBase)">
            <summary>
            Obtiene una matriz de transformación para la figura indicada por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IProjector.FilterVisible``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Recibe una lista de objetos, y determina si vale la pena evaluar su prioridad basado en su visibilidad.        
            </summary>        
            <typeparam name="T">Tipo de vistas a renderizar.</typeparam>
            <param name="views">Lista de vistas a renderizar.</param>        
            <returns>Devuelve la lista de vistas a renderizar que son visibles en el contexto indicado.</returns>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IProjector.IsVisible(Kriptok.Views.Shapes.Base.IVisible)">
            <summary>
            Indica si un objeto pasado por parámetro es visible para el contexto.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IProjector.GetCalculatedScaleFov(System.Single)">
            <summary>
            Calcula la escala a la que se debe escalar un gráfico dada su distancia hasta la cámara,
            tomando en cuenta cómo afecta el ángulo de visión.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IProjector.GetInversePriority(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene la distancia del vector indicado por parámetro a la cámara.
            O bien, el negativo de la prioridad.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Context.Base.IProjectorExtensions">
            <summary>
            Funcionalidades extendidas del proyector.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IProjectorExtensions.GetVertexPriority(Kriptok.Regions.Context.Base.IProjector,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Obtiene la prioridad de un vértice tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IProjectorExtensions.GetLinePriority(Kriptok.Regions.Context.Base.IProjector,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Obtiene la prioridad para dibujar la figura definida por dos puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IProjectorExtensions.GetFacePriority(Kriptok.Regions.Context.Base.IProjector,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Obtiene la prioridad para dibujar la figura definida por tres puntos.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Base.IProjectorExtensions.GetFacePriority(Kriptok.Regions.Context.Base.IProjector,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Obtiene la prioridad para dibujar la figura definida por cuatro puntos 
            (no necesariamente sobre el mismo plano).
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Context.AxonometricRegionTiledContext">
            <summary> 
            Contexto de renderización de modo scroll Axonométrico sin transformciones.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Context.AxonometricRenderContext">
            <summary>
            Contexto de renderización de modo scroll axonométrico general.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.AxonometricRenderContext.defaultMatrix">
            <summary>
            Matriz de proyección por defalt.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.AxonometricRenderContext.scroll">
            <summary>
            Región de pantalla sobre la que se está renderizando.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.AxonometricRenderContext.cameraCoords">
            <summary>
            Coordenadas calculadas de dónde se encuentra la cámara.
            Lo utilizan las <see cref="T:Kriptok.Views.Sprites.DirectionalSpriteView"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.AxonometricRenderContext.CameraZ">
            <summary>
            Altura de la cámara. Guardada para realizar cálculos.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.AxonometricRenderContext.ProjectTransformed(Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Este método sólo tiene sentido para vistas bidimensionales y para
            la perspectiva isométrica.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Context.AxonometricRenderContext.GetInversePriority(Kriptok.Drawing.Algebra.Vector3F)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.AxonometricRenderContext.GetAngleToCamera2D(Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.AxonometricRenderContext.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.AxonometricRenderContext.GetRenderLocationFor(Kriptok.Views.Base.GdipViewBase)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.AxonometricRenderContext.Render(Kriptok.Views.Shapes.GdipShapeViewBase)">
            <summary>
            Renderiza una forma de Gdip. Utilizando el patrón Double-Dispatch.
            
            Para las figuras que heredan de <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/> debería utilizarse en lugar
            de <see cref="M:Kriptok.Regions.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.AxonometricRenderContext.GetShapeTranform(Kriptok.Views.Shapes.Base.FastShapeViewBase)">
            <summary>
            Obtiene una matriz de transformación para la figura indicada por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.AxonometricRenderContext.GetRotationAngle3D(Kriptok.Drawing.Algebra.Vector3F)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Context.Full3DRenderContextBase`2">
            <summary>
            Contexto de renderización para interfaces tridimensionales.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Full3DRenderContextBase`2.owner">
            <summary>
            Objeto al cual pertenece el contexto de renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Full3DRenderContextBase`2.cameraAngle">
            <summary>
            Indica el ángulo de la cámara para la renderización de imágenes direccionales
            como <see cref="T:Kriptok.Views.Sprites.DirectionalSpriteView"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Full3DRenderContextBase`2.inverseMatrix3D">
            <summary>
            Matriz inversa de tranformación.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Full3DRenderContextBase`2.transform">
            <summary>
            Matriz de transformaciones. Utilizada para ahorrar recálculos al momento de dibujar vistas.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Full3DRenderContextBase`2.rotation">
            <summary>
            Matriz de rotación que se utilizó para construir la matriz de transformación final.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Full3DRenderContextBase`2.DeTransform_XYZ_ZX(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            
            Sólo devuelve, sin embargo, las coordenadas (Z, X), en ese orden.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Full3DRenderContextBase`2.DeTransform_X0Z_ZX(System.Single,System.Single)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            
            Se considera la coordenada Y = 0f, por defecto.
            
            Sólo devuelve, sin embargo, las coordenadas (Z, X), en ese orden.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Full3DRenderContextBase`2.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Full3DRenderContextBase`2.Transform3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Full3DRenderContextBase`2.Rotate3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Full3DRenderContextBase`2.GetCameraLocation">
            <summary>
            Obtiene la ubicación calculada de la cámara en el espacio tridimensional.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Full3DRenderContextBase`2.GetRotationAngleInDegrees(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo de rotación para sprites y otras figuras planas.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Context.ScreenProjector">
            <summary>
            Este proyector arma una perspectiva simple que no genera errores de renderización (por tener polígonos detrás
            de la cámara), pero tampoco crea una perspectiva realista.
            
            De hecho, a larga distancia, puede generar errores de renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.ScreenProjector.translateX">
            <summary>
            IMPORTANTE: no hacer que sea READ-ONLY porque sino no se puede establecer el Translate.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.ScreenProjector.translateY">
            <summary>
            IMPORTANTE: no hacer que sea READ-ONLY porque sino no se puede establecer el Translate.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.ScreenProjector.RenderShapes(Kriptok.Regions.Context.Base.ITranslatableRenderContext,Kriptok.Views.Shapes.GdipShapeViewBase)">
            <summary>
            Método generado para reutilizar código.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Context.Scroll3DRenderContext">
            <summary>
            Contexto de renderización de modos scroll.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Scroll3DRenderContext.powBase">
            <summary>
            Base utilizada para calcular la proyección 3D de las figuras.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.Scroll3DRenderContext.powMultiplier">
            <summary>
            Multiplicador del exponente.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Scroll3DRenderContext.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Scroll3DRenderContext.GetScrollCoords(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Calcula las coordenadas de Scroll manteniendo la coordenada Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Scroll3DRenderContext.GetRenderLocationFor(Kriptok.Views.Base.GdipViewBase)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.Scroll3DRenderContext.Render(Kriptok.Views.Shapes.GdipShapeViewBase)">
            <summary>
            Renderiza una forma de Gdip. Utilizando el patrón Double-Dispatch.
            
            Para las figuras que heredan de <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/> debería utilizarse en lugar
            de <see cref="M:Kriptok.Regions.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Scroll3DRenderContext.GetShapeTranform(Kriptok.Views.Shapes.Base.FastShapeViewBase)">
            <summary>
            Obtiene una matriz de transformación para la figura indicada por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.Scroll3DRenderContext.GetRatio(System.Single)">
            <summary>
            Obtiene el ratio para la proyección del eje Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.Scroll3DRenderContext.GetRotationAngle3D(Kriptok.Drawing.Algebra.Vector3F)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Context.ScrollRenderContext">
            <summary>
            Contexto de renderización de modos scroll.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.ScrollRenderContext.projector">
            <summary>
            IMPORTANTE: no hacer que sea READ-ONLY porque sino no se puede establecer el Translate.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.ScrollRenderContext.#ctor(Kriptok.Regions.Scroll.ScrollRegion,System.Drawing.Graphics,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Context.ScrollRenderContext"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.ScrollRenderContext.#ctor(Kriptok.Regions.Scroll.TileScrollFixedRegion,System.Drawing.Graphics,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Context.ScrollRenderContext"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.ScrollRenderContext.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.ScrollRenderContext.GetScrollCoords(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Calcula las coordenadas de Scroll manteniendo la coordenada Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Context.ScrollRenderContext.GetRenderLocationFor(Kriptok.Views.Base.GdipViewBase)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.ScrollRenderContext.Render(Kriptok.Views.Shapes.GdipShapeViewBase)">
            <summary>
            Renderiza una forma de Gdip. Utilizando el patrón Double-Dispatch.
            
            Para las figuras que heredan de <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/> debería utilizarse en lugar
            de <see cref="M:Kriptok.Regions.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.ScrollRenderContext.GetShapeTranform(Kriptok.Views.Shapes.Base.FastShapeViewBase)">
            <summary>
            Obtiene una matriz de transformación para la figura indicada por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.ScrollRenderContext.GetRotationAngle3D(Kriptok.Drawing.Algebra.Vector3F)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Context.ScreenRenderContext">
            <summary>
            Contexto de renderización de toda la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Context.ScreenRenderContext.projector">
            <summary>
            El projector no puede estar como "sólo lectura" aunque se cree en el constructor,
            ya que se trata de una estructura, no de un objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.ScreenRenderContext.ApplyTransformations(Kriptok.Views.Gdip.FlipEnum)">
            <summary>
            Aplica transformaciones correspondientes al estado actual de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.ScreenRenderContext.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.ScreenRenderContext.GetRenderLocationFor(Kriptok.Views.Base.GdipViewBase)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Context.ScreenRenderContext.Render(Kriptok.Views.Shapes.GdipShapeViewBase)">
            <summary>
            Renderiza una forma de Gdip. Utilizando el patrón Double-Dispatch.
            
            Para las figuras que heredan de <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/> debería utilizarse en lugar
            de <see cref="M:Kriptok.Regions.Context.Base.IRenderContext.RenderBranch(Kriptok.Views.Shapes.Base.IRenderBranch)"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.ScreenRenderContext.GetShapeTranform(Kriptok.Views.Shapes.Base.FastShapeViewBase)">
            <summary>
            Obtiene una matriz de transformación para la figura indicada por parámetro.
            Utiliza el patrón Double-Dispatch.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.ScreenRenderContext.Transform3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Context.ScreenRenderContext.GetRotationAngle3D(Kriptok.Drawing.Algebra.Vector3F)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Brushes.PlotFull3DBrush.GetRelativeLocation(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Regions.Planes.IPlotPlane)">
            <summary>
            Obtiene la ubicación de la cámara relativa al tamaño de la textura y la escala.
            </summary>            
        </member>
        <member name="T:Kriptok.Regions.Full3D.Full3DBufferedRegion">
            <summary>
            Interfaz tridimencional con Back-Buffer.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DBufferedRegion.#ctor(System.Drawing.Rectangle)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Full3D.Full3DBufferedRegion"/>.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Full3D.Full3DRegion">
            <summary>
            Clase base para entornos tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DRegion.#ctor(System.Drawing.Rectangle)">
            <summary>
            Inicializa el modo 3D para la región indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DRegion.NewContext(System.Drawing.Graphics,Kriptok.Drawing.Algebra.Matrix3x4F)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Full3D.Full3DRegion.Full3DRenderContext">
            <summary>
            Contexto de renderización para interfaces tridimensionales.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Full3D.Full3DPlanesRegion">
            <summary>
            Modo tridimencional con múltiples planos.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Full3D.Full3DPlanesRegion.InverseRegionWidth">
            <summary>
            Utilizado para cálculos de rasterización.        
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Full3D.Full3DPlanesRegion.InverseRegionHeight">
            <summary>
            Utilizado para cálculos de rasterización.        
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Full3D.Full3DPlanesRegion.planes">
            <summary>
            Planos actualmente cargados.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DPlanesRegion.#ctor(System.Drawing.Rectangle)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Full3D.Full3DPlanesRegion"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DPlanesRegion.AddPlane``1(``0)">
            <summary>
            Agrega un plano con una textura repetida infintamente a la altura cero.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Full3D.Cameras.AcumulativeRotationCamera">
            <summary>
            Representa una cámara con rotación "acumulativa". O sea que no obtiene los valores
            de transformación cada frame.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Full3D.Cameras.AcumulativeRotationCamera.rotation">
            <summary>
            Esta natruz es utilizada cuando se utiliza una cámara que puede ser apuntada en cualquier dirección
            desde cualquier dirección.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Full3D.Cameras.AcumulativeRotationCamera.RelativeLocation">
            <summary>
            Indica la posición relativa al objetivo.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Full3D.Cameras.AcumulativeRotationCamera.TargetLocation">
            <summary>
            Posición del objetivo de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Cameras.AcumulativeRotationCamera.GetCameraLocation">
            <summary>
            Obtiene la ubicación calculada de la cámara en el espacio tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Cameras.AcumulativeRotationCamera.Reset">
            <summary>
            Resetea las transformaciones aplicadas a la cámara 3D.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Cameras.AcumulativeRotationCamera.CalculatedAngleX">
            <summary>
            Se utiliza para enderezar la cámara.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Cameras.AcumulativeRotationCamera.StraightCamera(System.Single)">
            <summary>
            Endereza suavemente la cámara sobre el ángulo del eje de profundidad.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Full3D.Cameras.RotableTargetCameraBase.Rotation">
            <summary>
            Angulo de rotación de la cámara sobre el ángulo X.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Full3D.Cameras.TargetCameraBase">
            <summary>
            Representa una "cámara" base para implementar que obtiene los valores de transformación
            cada frame.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Full3D.Cameras.FreeTargetCamera.Location">
            <summary>
            Ubicación de la cámara en espacio tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Full3D.Cameras.LookAtTarget.Location">
            <summary>
            Ubicación de la cámara en espacio tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Full3D.Cameras.LookAtTarget.RotationX">
            <summary>
            Angulo de rotación de la cámara sobre el ángulo X.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Cameras.LookAtTarget.GetDirectionalVector(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene un vector de dirección para que un objeto mire desde un punto al otro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Cameras.Full3DCameraBase.Init(Kriptok.Regions.Full3D.Full3DRegion)">
            <summary>
            Método que se dispara cuando se asigna la cámara a la región.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Cameras.Full3DCameraBase.GetCameraLocation">
            <summary>
            Obtiene la ubicación calculada de la cámara en el espacio tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Cameras.Full3DCameraBase.GetTransform(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Matrix3x4F)">
            <summary>
            Obtiene la matriz de transformación completa para la cámara.
            </summary>
            <param name="location">Matriz obtenida con el método <see cref="M:Kriptok.Regions.Full3D.Cameras.Full3DCameraBase.GetTargetLocation3D"/>.</param>        
            <param name="rotationTransform">Matriz obtenida con el método <see cref="M:Kriptok.Regions.Full3D.Cameras.Full3DCameraBase.GetRotationTransform"/>.</param>        
        </member>
        <member name="T:Kriptok.Regions.Full3D.Full3DRegionBase">
            <summary>
            Clase base para entornos tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DRegionBase.#ctor(System.Drawing.Rectangle)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Full3D.Full3DRegionBase"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Full3D.Full3DRegionBase.Target">
            <summary>
            Objeto utilizado para posicionar la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DRegionBase.Render(System.Drawing.Graphics,Kriptok.Entities.Base.EntityBase[])">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DRegionBase.SetCamera``1(``0)">
            <summary>
            Permite establecer el proceso "cámara" o foco de
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DRegionBase.GetTargetLocation2D">
            <summary>
            Permite personalizar la coordenada central que se debe utilizar para
            renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Full3D.Full3DRegionBase`2">
            <summary>
            Clase base para entornos tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DRegionBase`2.#ctor(System.Drawing.Rectangle)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Full3D.Full3DRegionBase`2"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DRegionBase`2.NewContext(System.Drawing.Graphics,Kriptok.Drawing.Algebra.Matrix3x4F)">
            <summary>
            Obtiene un nuevo contexto de renderización 3D.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DRegionBase`2.Render(`1,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Renderiza el entorno tridimensional, así como los objetos que haya.
            </summary> 
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DRegionBase`2.CreateSphereBackground(System.Reflection.Assembly,System.String,System.Int32,System.Int32)">
            <summary>
            Crea un fondo tridimencional poligonal, en forma de esfera.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DRegionBase`2.CreateCubeSphereBackground(System.Reflection.Assembly,System.String,Kriptok.Views.Shapes.TexturedCubeSphereView.StyleEnum,System.Int32)">
            <summary>
            Crea un fondo tridimensional poligonal en forma de cubo redondeado.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DRegionBase`2.CreateCubeSphereBackground(System.Reflection.Assembly,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Crea un fondo tridimensional poligonal en forma de cubo redondeado en base a múltiples imágenes.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Full3D.Full3DPanel">
            <summary>
            Este componente se utiliza para delegar comportamiento que pueden tener
            paneles de 4 vértices en una interfaz tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DPanel.#ctor(Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Full3D.Full3DPanel"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DPanel.IfVisible(Kriptok.Regions.Context.Base.IRenderContext,System.Action{System.Drawing.PointF[]})">
            <summary>
            Analiza si el panel es visible a la camara.
            
            Se asume que los vértices han sido correctamente transformados al espacio
            tridimensional previamente.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DPanel.IfVisible(Kriptok.Regions.Context.Base.IRenderContext,System.Action{Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F})">
            <summary>
            Analiza si el panel es visible a la camara.
            
            Se asume que los vértices han sido correctamente transformados al espacio
            tridimensional previamente.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Full3D.Convos.Full3DConvoRegion">
            <summary>
            Implementación de mapas diseñados con volúmenes convexos para perspectiva full-3D.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Full3D.Convos.Base.ConvoMapBase`3.vertices">
            <summary>
            Colección con todos los vértices del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Full3D.Convos.Base.ConvoMapBase`3.texset">
            <summary>
            Conjunto de texturas usadas en el mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Full3D.Convos.Base.ConvoMapBase`3.partitions">
            <summary>
            Particiones volumétricas del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Convos.Base.ConvoMapBase`3.#ctor(Kriptok.Mapping.Convos.ConvoMapX,Kriptok.Mapping.ITexset{`1})">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Full3D.Convos.Base.ConvoMapBase`3"/>.
            </summary>                
        </member>
        <member name="M:Kriptok.Regions.Full3D.Convos.Base.ConvoMapBase`3.FindVertex(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Encuentra un vértice en base a sus coordenadas.
            
            En este caso, sólo devuelvo un nuevo vértice tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Convos.Base.ConvoMapBase`3.GetPanels">
            <summary>
            Obtiene todos los paneles del mapa.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Full3D.Convos.ConvoPartition`1.ownerView">
            <summary>
            Vista principal que contiene la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Full3D.Convos.ConvoPartition`1.Id">
            <summary>
            Id de la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Full3D.Convos.ConvoPartition`1.Volume">
            <summary>
            Volumen de la partición.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Full3D.Convos.ConvoPartition`1.#ctor(Kriptok.Regions.Full3D.Convos.Base.IConvoMap{`0},Kriptok.Mapping.Convos.ConvoPartitionX)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="!:ConvoPartition"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Convos.ConvoPartition`1.GetPanels">
            <summary>
            Obtiene todos los paneles de la partición.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Convos.ConvoPartition`1.PostProcessing(Kriptok.Regions.Full3D.Convos.ConvoPartition{`0}[])">
            <summary>
            Genera los portales hacia las otras particiones y realiza otros post-procesamientos
            de la construcción del mapa.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Convos.ConvoPartition`1.FindVertex(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene un vértice de la partición en base a sus coordenadas tridimensionales.
            
            Esto permite almacenar los vértices en una colección que permita su reutilización
            para no tener que aplicar las transformaciones más de una vez a vértices compartidos.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Convos.ConvoPartition`3.#ctor(Kriptok.Regions.Full3D.Convos.Base.ConvoMapBase{`0,`1,`2},Kriptok.Mapping.Convos.ConvoPartitionX)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="!:SdxPartition"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Convos.ConvoPartitionSide`1.GeneratePortals(Kriptok.Regions.Full3D.Convos.ConvoPartition{`0}[])">
            <summary>
            Genera los portales hacia las otras particiones.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Convos.ConvoPartitionSide`1.GetPanels">
            <summary>
            Devuelve todos los paneles que componen el lado.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DSurfaceRegion`1.RenderOn(Kriptok.Regions.Full3D.Full3DRegion.Full3DRenderContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Renderiza las vistas recibidas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DSurfaceRegion`1.GetMaxDrawingDistance(Kriptok.Regions.Full3D.Full3DRegion.Full3DRenderContext)">
            <summary>
            Obtiene la distancia a partir de la cual se ignoran todas las vistas a renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DSurfaceRegion`1.AddSurface(Kriptok.Regions.Full3D.Full3DRegion.Full3DRenderContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Este método agrega las vistas relacionadas al terreno a
            la lista de vistas por renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Full3D.Full3DSurfaceRegion`1.GetTerrainHeight(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la altura del terreno en el vértice indicado por parámetro.
            </summary>   
        </member>
        <member name="T:Kriptok.Regions.Planes.IPlotPlane">
            <summary>
            Interfaz utilizada para la renderización de planos infinitos en espacios tridimencionales.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Planes.IPlotPlane.Size">
            <summary>
            Tamaño en pixels del plano.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Planes.IPlotPlane.Z">
            <summary>
            Altura del plano en el eje vertical (Z).
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Planes.IPlotPlane.GetRenderScale">
            <summary>
            Escala de renderización (utilizado para hacer parecer los planos más grandes o chicos de lo que son).
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Planes.IPlotPlane.SampleOrDefault(System.Int32,System.Int32)">
            <summary>
            Obtiene el color de las coordenadas indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Planes.IPlotPlane.OnRendering(Kriptok.Regions.Context.Base.Render3DContextBase)">
            <summary>
            Evento que se dispara antes de renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Planes.FinitePlane">
            <summary>
            Hace que un plano deje de repetirse infinitamente.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Planes.FinitePlane.#ctor(Kriptok.Regions.Planes.IPlotPlane)">
            <summary>
            Obtiene una nueva instancia de la clase <see cref="T:Kriptok.Regions.Planes.FinitePlane"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Planes.FinitePlane.#ctor(Kriptok.Regions.Planes.IPlotPlane,System.Drawing.Color)">
            <summary>
            Obtiene una nueva instancia de la clase <see cref="T:Kriptok.Regions.Planes.FinitePlane"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Planes.FinitePlane.Size">
            <summary>
            Tamaño en pixels del plano.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Planes.FinitePlane.Z">
            <summary>
            Altura del plano en el eje vertical (Z).
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Planes.FinitePlane.GetRenderScale">
            <summary>
            Escala de renderización (utilizado para hacer parecer los planos más grandes o chicos de lo que son).
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Planes.FinitePlane.SampleOrDefault(System.Int32,System.Int32)">
            <summary>
            Obtiene el color de las coordenadas indicadas por parámetro.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Planes.PlaneShadeBase.Size">
            <summary>
            Tamaño en pixels del plano.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Planes.PlaneShadeBase.Z">
            <summary>
            Altura del plano en el eje vertical (Z).
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Planes.PlaneShadeBase.GetRenderScale">
            <summary>
            Escala de renderización (utilizado para hacer parecer los planos más grandes o chicos de lo que son).
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Planes.PlotPlaneBase">
            <summary>
            Clase base para planos infinitos de entornos tridimencionales.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Planes.PlotPlaneBase.tilerX">
            <summary>
            Objetos utilizados para relocalizar las coordenadas al renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Planes.PlotPlaneBase.tilerY">
            <summary>
            Objetos utilizados para relocalizar las coordenadas al renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Planes.PlotPlaneBase.#ctor(System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Planes.PlotPlaneBase"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Planes.PlotPlaneBase.Scale">
            <summary>
            Escala con la cual se debe representar el mapa en Mode7.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Planes.PlotPlaneBase.Size">
            <summary>
            Tamaño en pixels del plano.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Planes.PlotPlaneBase.Z">
            <summary>
            Altura del plano en el eje vertical (Z).
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Planes.PlotPlaneBase.OnRendering(Kriptok.Regions.Context.Base.Render3DContextBase)">
            <summary>
            Permite ejecutar código antes de renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Planes.PlotPlaneBase.SampleOrDefault(System.Int32,System.Int32)">
            <summary>
            Obtiene el color del pixel en las coordenadas indicadas por parámetro.
            </summary>            
        </member>
        <member name="M:Kriptok.Regions.Planes.PlotPlaneBase.InnerSample(System.Int32,System.Int32)">
            <summary>
            Obtiene el color en base a una textura, mapa de tiles, o lo que sea necesario.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Planes.PlotPlaneBase.GetRenderScale">
            <summary>
            Escala de renderización (utilizado para hacer parecer los planos más grandes o chicos de lo que son).
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Planes.PlotPlaneBase.Dispose">
            <summary>
            Libera los recursos.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Planes.PlotAnimatedPlane">
            <summary>
            Esta clase representa un bitmap preparador para ser dibujado en Mode7.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Planes.PlotAnimatedPlane.XTiles">
            <summary>
            Para imágenes indexadas, indica cuántos tiles hay en horizontal.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Planes.PlotAnimatedPlane.TileAnimationIndexes">
            <summary>
            Índices de los tiles que deben mostrarse para generar la animación del plano.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Planes.PlotAnimatedPlane.TileAnimation">
            <summary>
            Indica la posición del array del TileAnimationIndexes se encuentra.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Planes.PlotAnimatedPlane.AnimationSpeed">
            <summary>
            Velocidad a la cual se deben actualizar los tiles animados.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Planes.PlotBitmapPlane`1">
            <summary>
            Esta clase representa un bitmap preparador para ser dibujado en Mode7.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Planes.TileMapPlane`1">
            <summary>
            Plano basado en un mapa de tiles.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Planes.TileMapPlane">
            <summary>
            Plano basado en un mapa de tiles.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Planes.TileMapPlane.TileAnimatedSpeed">
            <summary>
            Velocidad a la cual se deben actualizar los tiles animados del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Planes.TileMapPlane.Get(Kriptok.Regions.Planes.TileMapPlane)">
            <summary>
            Genera un plano basado en un mapa de tiles.
            </summary>      
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Anaglyph3DHandler`2">
            <summary>
            Controlador para agregar tridimencionalidad a las regiones de tipo Pseudo3D.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Anaglyph3DHandler`2.DistanceModifier">
            <summary>
            Modificador de distancia entre los "ojos".
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Anaglyph3DHandler`2.#ctor(`0)">
            <summary>
            Devuelve una nueva instancia de <see cref="!:Anaglyph3DHandler"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Anaglyph3DHandler`2.Render(System.Drawing.Graphics,System.Action{System.Drawing.Graphics})">
            <summary>
            Renderiza la pantalla en 3D.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Anaglyph3DHandler`2.NewRenderContext(Kriptok.Core.Camera,System.Func{Kriptok.Core.Camera,`1})">
            <summary>
            Devuelve un nuevo contexto de renderización tridimencional.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Backgrounds.GdipHorizontalScrollingBackground`1">
            <summary>
            Este fondo utiliza una <see cref="T:System.Drawing.TextureBrush"/> para renderizar el fondo.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Backgrounds.GdipHorizontalScrollingBackground`1.#ctor(Kriptok.Regions.Pseudo3D.Pseudo3DRegionBase{`0},Kriptok.Common.Resource,Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollArgs)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Backgrounds.GdipHorizontalScrollingBackground`1"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Backgrounds.GdipHorizontalScrollingBackground`1.#ctor(Kriptok.Regions.Pseudo3D.Pseudo3DRegionBase{`0},Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollArgs,System.Reflection.Assembly,System.String)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Backgrounds.GdipHorizontalScrollingBackground`1"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Backgrounds.GdipHorizontalScrollingBackground`1.#ctor(Kriptok.Regions.Pseudo3D.Pseudo3DRegionBase{`0},Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollArgs,Kriptok.Drawing.FastBitmap)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Backgrounds.GdipHorizontalScrollingBackground`1"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Backgrounds.GdipHorizontalScrollingBackground`1.GetMaxY(`0)">
            <summary>
            Obtiene la máxima coordenada "Y" hasta la cual se debe renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollArgs">
            <summary>
            Propiedades para inicializar fondos de scroll en entornos Pseudo3D.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollArgs.#ctor(System.Int32,System.Single)">
            <summary>
            Devuelve una nueva instancia de la estructura <see cref="T:Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollArgs"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollArgs.Repetitions">
            <summary>
            Cantidad de veces que se debe repetir el plano de scroll horizontalmente.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollArgs.FovScale">
            <summary>
            Multiplicador para extender el campo de visión. En la práctica, hace que 
            el fondo scrolle más lento o más rápido. También comprime o extiende la imagen horizontalmente.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollingBackgroundBase`2">
            <summary>
            Representa fondos de escenarios pseudo-3D que scrollean una imagen plana como
            si fuera un cilindro alrededor de la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollingBackgroundBase`2.regionWidth">
            <summary>
            Ancho de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollingBackgroundBase`2.multiplier">
            <summary>
            Mutiplicador para el mapeo de la textura.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollingBackgroundBase`2.fovModifier">
            <summary>
            Modificador de la velocidad de scroll.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollingBackgroundBase`2.Render(`1)">
            <summary>
            Renderiza el fondo desde la primer fila hasta el horizonte.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Backgrounds.PlotHorizontalScrollingBackground`2">
            <summary>
            Este fondo permite especificar pixel por pixel el fondo que scrollea.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Backgrounds.PlotHorizontalScrollingBackground`2.#ctor(`0,Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollArgs,System.Reflection.Assembly,System.String)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Backgrounds.PlotHorizontalScrollingBackground`2"/>
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Backgrounds.PlotHorizontalScrollingBackground`2.#ctor(`0,Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollArgs,Kriptok.Drawing.FastBitmap)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Backgrounds.PlotHorizontalScrollingBackground`2"/>
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Backgrounds.PlotHorizontalScrollingBackground`2.#ctor(Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollArgs,`0,Kriptok.Drawing.FastBitmap)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Backgrounds.PlotHorizontalScrollingBackground`2"/>
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Backgrounds.BufferedPseudo3DSkyBackground">
            <summary>
            Esta clase hace que un fondo común se vea afectado por la neblina, en modos con "back-buffer"
            proyectados en Pseudo-3D.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Backgrounds.BufferedPseudo3DSkyBackground.Pseudo3DFogEffectBrush">
            <summary>
            Esta es una brocha que sólo aplica un efecto de neblina a un fondo que ya está renderizado.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Brushes.PlotPseudo3DFogBrush">
            <summary>
            Agrega un efecto de neblina o bruma a la brocha de planos.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Brushes.Pseudo3DFogBrushBase`1">
            <summary>
            Agrega un efecto de neblina o bruma a la brocha.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushDataBase">
            <summary>
            Esta clase se utiliza cuando se desea "pintar" una región de la pantalla con un plano en perspectiva
            tipo "Pseudo3D". Tiene toda la información necesaria para la renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushDataBase.#ctor(Kriptok.Common.Box{Kriptok.Drawing.Algebra.Matrix2x3F},System.Single,System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushDataBase"/>.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushDataBase.RelativeHeight">
            <summary>
            Obtiene la altura relativa del plano con respecto a la cámara.    
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Brushes.Base.IPseudo3DBrush`1">
            <summary>
            Representa una brocha para "pintar" regiones con un estilo tridimensional plano y Pseudo3D.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Brushes.Base.IPseudo3DBrush">
            <summary>
            Representa una brocha para "pintar" regiones con un estilo tridimensional plano y Pseudo3D.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Brushes.Base.IPseudo3DBrush.ScanLineDistance">
            <summary>
            Obtiene la distancia a la cual se está renderizando cada línea.        
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase">
            <summary>
            Esta clase se utiliza cuando se desea "pintar" una región de la pantalla con un plano en perspectiva
            tipo "Pseudo3D". Tiene toda la información necesaria para la renderización, además
            de la lógica necesaria.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1">
            <summary>
            Esta clase se utiliza cuando se desea "pintar" una región de la pantalla con un plano en perspectiva
            tipo "Pseudo3D". Tiene toda la información necesaria para la renderización, además
            de la lógica necesaria.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1.relativeY0">
            <summary>
            Valor inicial que debe adoptar <see cref="F:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1.RelativeY"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1.relativeX">
            <summary>
            Coordenada X relativa al centro de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1.RelativeY">
            <summary>
            Coordenada Y relativa al centro de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1.dX">
            <summary>
            Valor iniciales pre-calculado.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1.dY">
            <summary>
            Valor iniciales pre-calculado.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1.dIncX">
            <summary>
            Incrementos por columna.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1.dIncY">
            <summary>
            Incrementos por fila.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1.halfWidthFovInvMult">
            <summary>
            Mitad del ancho de la pantalla, se guarda para hacer los cálculos de la coordenada Z.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1.relativeHeightMultiplier">
            <summary>
            Valor precalculado para optimización de cálculos después.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1.a02Multiplier">
            <summary>
            Valores precalculados para optimizar cálculos posteriores.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1.a12Multiplier">
            <summary>
            Valores precalculados para optimizar cálculos posteriores.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1.#ctor(Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext,System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1.RefreshPrecalculatedValues">
            <summary>
            Precalcula algunos valores para optimizar cálculos después.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase`1.ScanLineDistance">
            <summary>
            La coordenada Z de la línea que se está renderizando en ese momento.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Brushes.GdipPseudo3DScanlineBrush.s">
            <summary>
            Indica cuánto se debe escalar la brocha al momento de renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Brushes.GdipPseudo3DScanlineBrush.a">
            <summary>
            Matriz utilizada para renderizar.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.GaroudShading.GaroudShadingPlaneGenerator">
            <summary>
            Esta estructura es para optimizar la generación de planos de sombreado para
            figuras con sombreado tipo "garoud".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.GaroudShading.GaroudShadingPlaneGenerator.p0">
            <summary>
            Vectores utilizados para validar que no se modifique la malla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.GaroudShading.GaroudShadingPlaneGenerator.p1">
            <summary>
            Vectores utilizados para validar que no se modifique la malla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.GaroudShading.GaroudShadingPlaneGenerator.p2">
            <summary>
            Vectores utilizados para validar que no se modifique la malla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.GaroudShading.GaroudShadingPlaneGenerator.n0">
            <summary>
            Normales precalculadas del efecto de la luz.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.GaroudShading.GaroudShadingPlaneGenerator.n1">
            <summary>
            Normales precalculadas del efecto de la luz.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.GaroudShading.GaroudShadingPlaneGenerator.n2">
            <summary>
            Normales precalculadas del efecto de la luz.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.GaroudShading.PlaneSample3">
            <summary>
            Estructura utilizada para "samplear" información de un plano texturado en procesos de raycasting.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.GaroudShading.PlaneSample3.U">
            <summary>
            Coordenada U de la textura.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.GaroudShading.PlaneSample3.V">
            <summary>
            Coordenada V de la textura.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.GaroudShading.PlaneSample3.W">
            <summary>
            Distancia del punto "sampleado" a la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.GaroudShading.GaroudShadingHelper.InitUVTextureMappingMatrix(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint)">
            <summary>
            Inicializa una matriz de mapeo UV para vistas de particiones de pantalla.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase">
            <summary>
            Vista base para caras tridimencionales que renderizan ploteando pixels
            para entornos de renderización particionados.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.renderPlane">
            <summary>
            Plano utilizado para determinar la inclinación del plano en la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.shadePlane">
            <summary>
            Plano utilizado para determinar el sombreado del plano durante la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.shadingPlaneGenerator">
            <summary>
            Este objeto se encarga de generar/actualizar el mapa de sombreado en cada frame.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.CustomRenderBounds(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Permite customizar por columna los límites verticales de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.RenderVertically(Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.RenderVertically(Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext,Kriptok.Views.Shapes.Vertices.Vertex25Normal,Kriptok.Views.Shapes.Vertices.Vertex25Normal,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.RenderColumn(System.Int32,System.Int32,System.Int32,Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4,Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4)">
            <summary>
            Método principal que realiza el renderizado.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.IsVisible(Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext,Kriptok.Drawing.BoundF2)">
            <summary>
            Indica si el polígono es visible, pero además realiza ciertos cálculos para su posterior renderizado.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4">
            <summary>
            Estructura utilizada para "samplear" información de un plano texturado en procesos de raycasting.
            
            Agrega una propiedad extra que es el sammpleo de la incidencia de la luz.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4.innerData">
            <summary>
            Estructura interna básica.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4.U">
            <summary>
            Coordenada U de la textura.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4.V">
            <summary>
            Coordenada V de la textura.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4.W">
            <summary>
            Distancia del punto "sampleado" a la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4.Shade">
            <summary>
            Sombreado del punto "sampleado".
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7PlaneShaded">
            <summary>
            Esta clase representa un mapa de Mode7 renderizado con GDI+, pero que 
            se puede ver afectado por el ángulo de la luz.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7PlaneShaded.#ctor(System.Reflection.Assembly,System.String,Kriptok.Regions.Pseudo3D.Mode7.Mode7PlaneShadingEnum)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7PlaneShaded"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7PlaneShaded.GetTexture(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext)">
            <summary>
            Obtiene la textura para renderizar dependiendo de los parámetros de sombreado definidos.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Mode7.Mode7PlaneShadingEnum">
            <summary>
            Indica cómo debe sombrearse un plano de Mode7.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.Mode7PlaneShadingEnum.Floor">
            <summary>
            "Piso" del entorno.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.Mode7PlaneShadingEnum.Ceiling">
            <summary>
            "Techo" del entorno.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0">
            <summary>
            Representa una vista de Mode7 con un ángulo fijo de -90°.
            
            Es decir, se presenta de forma frontal, similar a un scroll.
            
            Es el modo más restrictivo ya que no presenta rotación en ningún eje.
            
            Por otro lado, es el que renderiza más rápido.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.MinusHalfPI">
            <summary>
            Esta constante permite centralizar un valor para todos los modos pseudo3D que
            mantienen la cámara apuntando en un ángulo fijo.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.CreatePlaneBrush(Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext,Kriptok.Regions.Planes.IPlotPlane)">
            <summary>
            Obtiene una brocha para renderizar con el plano indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.PlotMode7BrushY0">
            <summary>
            Representa una brocha que toma la información de colores de un plano de Mode7.
            
            Pero que sólo funciona cuando el ángulo es (PI / 2) o (-PI / 2).
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.PlotMode7BrushY0Base">
            <summary>
            Esta clase se utiliza cuando se desea "pintar" una región de la pantalla con un plano en perspectiva
            tipo "Pseudo3D". Tiene toda la información necesaria para la renderización, además
            de la lógica necesaria.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.PlotMode7BrushY0Base.context">
            <summary>
            Contexto actual de renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.PlotMode7BrushY0Base.relativeY0">
            <summary>
            Valor inicial que debe adoptar <see cref="F:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.PlotMode7BrushY0Base.relativeY"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.PlotMode7BrushY0Base.relativeX">
            <summary>
            Coordenada X relativa al centro de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.PlotMode7BrushY0Base.relativeY">
            <summary>
            Coordenada Y relativa al centro de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.PlotMode7BrushY0Base.iY">
            <summary>
            Coordenada Y precalculada.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.PlotMode7BrushY0Base.dX">
            <summary>
            Valor inicial precalculado.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.PlotMode7BrushY0Base.dIncX">
            <summary>
            Incremento por columna.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.PlotMode7BrushY0Base.halfRegionWidthFov">
            <summary>
            Mitad del ancho de la pantalla, se guarda para hacer los cálculos de la coordenada Z.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.PlotMode7BrushY0Base.a01multiplier">
            <summary>
            Cálculos previos para acelerar los cálculos después.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.PlotMode7BrushY0Base.a02multiplier">
            <summary>
            Cálculos previos para acelerar los cálculos después.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.PlotMode7BrushY0Base.#ctor(Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext,System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushBase"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7RegionY0.PlotMode7BrushY0Base.ScanLineDistance">
            <summary>
            La coordenada Z de la línea que se está renderizando en ese momento.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Mode7.TiltMode7Region">
            <summary>
            Vista de plano en perspectiva que acepta una rotación sobre el eje de profundidad.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.TiltMode7Region.regionWidth">
            <summary>
            Tamaño de la región donde ser renderiza.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.TiltMode7Region.regionHeight">
            <summary>
            Tamaño de la región donde ser renderiza.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.TiltMode7Region.regionWidthF">
            <summary>
            Ancho de la región donde ser renderiza.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.TiltMode7Region.#ctor(System.Drawing.Rectangle,Kriptok.Regions.Planes.IPlotPlane)">
            <summary>
            Esta vista renderiza un plano en una perspectiva tridimensional.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.TiltMode7Region.TiltAngle">
            <summary>
            Obtiene o establece el ángulo de rotación sobre el eje de profundidad.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.TiltMode7Region.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.TiltMode7Region.TiltedMode7RenderContext.GetHorizon">
            <summary>
            Obtiene un segmento bidimensional que indica dónde en la pantalla se encuentra visible el horizonte.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.TiltMode7Region.PlotMode7TiltedBrush.Sample">
            <summary>
            Hay que calcular la distancia en valor absoluto porque cuando se acerca al horizonte,
            puede darse que un pixel más arriba aún sea válido para la figura que intenta renderizar,
            pero la distancia quede negativa.
            </summary>            
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.TiltMode7Region.PlotMode7TiltedBrushFog.relativeHeightScale">
            <summary>
            Obtiene una variable a la cual se debe escalar el resultado de <see cref="F:Kriptok.Regions.Pseudo3D.Brushes.Base.PlotPseudo3DBrushDataBase.RelativeHeight"/>
            para saber cuánto se debe aplicar el efecto de neblina.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7Plane`1">
            <summary>
            Mapa de Mode7 que utiliza una <see cref="T:System.Drawing.TextureBrush"/> nativa de GDI+ para renderizar.
            
            Se construye en base a un mapa de tiles. No conserva las animaciones, por obvias razones.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7Plane">
            <summary>
            Mapa de Mode7 que utiliza una <see cref="T:System.Drawing.TextureBrush"/> nativa de GDI+ para renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7Plane.Z">
            <summary>
            Altura Y del plano tridimensional sobre el cuál se debe dibujar el plano de Mode7.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7Plane.Brush">
            <summary>
            Brocha utilizada para renderizar.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7Plane.Scale">
            <summary>
            Escala con la cual se debe representar el mapa en Mode7.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7Region">
            <summary>
            Vista de plano en perspectiva.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7Region.Plane">
            <summary>
            Plano inferior, 
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7Region.regionWidth">
            <summary>
            Ancho de la región donde ser renderiza.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7Region.topPlane">
            <summary>
            Utilizado cuando el Mode7 también tiene un "techo".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7Region.Location">
            <summary>
            Ubicación del punto central en la renderización de la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7Region.#ctor(System.Drawing.Rectangle,System.Reflection.Assembly,System.String,System.Boolean)">
            <summary>
            Esta vista renderiza un plano en una perspectiva tridimensional.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.GdipMode7Region.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7Brush">
            <summary>
            Representa una brocha que toma la información de colores de un plano de Mode7.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7Region">
            <summary>
            Vista de plano en perspectiva.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7Region.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7Region.CreateGdipScrollingBackground(Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollArgs,System.Reflection.Assembly,System.String)">
            <summary>
            Obtiene una instancia de un fondo scrolleable para este modo de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7Region.CreatePlotScrollingBackground(Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollArgs,System.Reflection.Assembly,System.String)">
            <summary>
            Obtiene una instancia de un fondo scrolleable para este modo de renderización.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7Region`1">
            <summary>
            Vista de plano en perspectiva.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7Region`1.groundPlane">
            <summary>
            Plano inferior.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7Region`1.topPlane">
            <summary>
            Utilizado cuando el Mode7 también tiene un "techo".
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7Region`1.#ctor(System.Drawing.Rectangle,Kriptok.Regions.Planes.IPlotPlane)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7Region"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7Region`1.#ctor(System.Drawing.Rectangle,Kriptok.Regions.Planes.TileMapPlane)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Mode7.PlotMode7Region"/>.
            </summary>  
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegion">
            <summary>
            Clase base para fondos con perspectiva Pseudo3D, que utilizan un buffer
            para renderizar pixel por pixel.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegion.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1">
            <summary>
            Clase base para fondos con perspectiva Pseudo3D, que utilizan un buffer
            para renderizar pixel por pixel.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.regionWidth">
            <summary>
            Ancho de la región. Utilizado en algunos cálculos.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.regionHeight">
            <summary>
            Alto de la región. Utilizado en algunos cálculos.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.#ctor(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegion"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.#ctor(System.Drawing.Rectangle)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegion"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.GetScan0">
            <summary>
            Obtiene un puntero a la posición inicial del buffer de pixels.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.RegionWidth">
            <inheritdoc/>        
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.RegionHeight">
            <inheritdoc/>   
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.Dispose">
            <summary>
            Libera los recursos de la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.RasterSolidLine(System.Int32,System.UInt32)">
            <summary>
            Rasteriza una linea de un color determinado.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.RasterFilterLine(System.Int32,Kriptok.Regions.Ambient.Base.IColorTransformation)">
            <summary>
            Aplica el filtro indicado a la línea indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.Plot(System.UInt32*,System.UInt32)">
            <summary>
            Pone el pixel indicado del color indicado, pero realiza las validaciones
            necesarias para saber que todo está funcionando perfectamente.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.RasterColumn(System.UInt32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Dibuja una línea vertical en base a los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.RasterColumn(System.UInt32,System.Int32,System.UInt32*)">
            <summary>
            Rasteriza una columna de pixels según los parámetros indicados.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.CreatePlaneBrush(Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext,Kriptok.Regions.Planes.IPlotPlane)">
            <summary>
            Obtiene una brocha para renderizar con el plano indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.CreateCubeCilinderBackground(Kriptok.Common.Resource,System.Int32)">
            <summary>
            Crea un fondo poligonal extendiendo la textura indicada sobre un cilindro.        
            </summary>       
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegionBase`1.CreateCilinderBackground(Kriptok.Common.Resource,System.Int32,System.Int32)">
            <summary>
            Crea un fondo poligonal extendiendo la textura indicada sobre un cilindro.        
            </summary>       
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.IPseudo3DRegion.SetCamera``1(``0)">
            <summary>
            Establece el objeto sobre el cual se enfoca el modo.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.IBufferedPseudo3DRegion.RasterFilterLine(System.Int32,Kriptok.Regions.Ambient.Base.IColorTransformation)">
            <summary>
            Aplica el filtro indicado a la línea indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Base.IBufferedPseudo3DRegion.CreatePlaneBrush(Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext,Kriptok.Regions.Planes.IPlotPlane)">
            <summary>
            Obtiene una brocha para renderizar con el plano indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Cameras.AutoShearPseudo3DCamera">
            <summary>
            Cámara para interfaces Pseudo3D que modifica su Y-Shearing para apuntar a un objeto.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Cameras.AutoShearPseudo3DCamera.Height">
            <summary>
            Altura a la que se encuentra la cámara.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Cameras.AutoShearPseudo3DCameraBase">
            <summary>
            Cámara para interfaces Pseudo3D que modifica su Y-Shearing para apuntar a un objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Cameras.AutoShearPseudo3DCameraBase.GetYShearing(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext,System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Cameras.OpenPseudo3DCamera">
            <summary>
            Representa una cámara de Pseudo3D fácil y rápida de implementar.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Cameras.OpenPseudo3DCamera.Height">
            <summary>
            Altura a la que se encuentra la cámara.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Cameras.Pseudo3DWithMouseLookCamera">
            <summary>
            Cámara en modo Pseudo3D recomendada para interfaces en primera persona.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Cameras.Pseudo3DWithMouseLookCamera.Height">
            <summary>
            Altura a la que se encuentra la cámara.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Cameras.Pseudo3DWithMouseLookCameraBase">
            <summary>
            Cámara en modo Pseudo3D recomendada para interfaces en primera persona.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Cameras.Pseudo3DWithMouseLookCameraBase.GetVerticalAngle">
            <summary>
            Obtiene el "ángulo" vertical en el que está "mirando" la cámara, calculando un 
            ángulo aproximado en base al Y-Shearing y al campo de visión.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Cameras.IPseudo3DCamera">
            <summary>
            Cámara utilizada para definir el comportamiento de la cámara en interfaces Pseudo3D.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Cameras.IPseudo3DCamera.GetYShearing(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext,System.Single,System.Single)">
            <summary>
            Obtiene el valor de Y-Shearing que debe presentar la cámara en el siguiente frame.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Cameras.IPseudo3DCamera.GetCameraHeight">
            <summary>
            Obtiene la altura de la cámara (la posición sobre el eje Z).
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Cameras.TargetPseudo3DCameraBase">
            <summary>
            Cámara para interfaces Pseudo3D que tiene un Y-shearing variable.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Cameras.TargetPseudo3DCameraBase.GetDirection">
            <inheritdoc />
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Cameras.TargetPseudo3DCameraBase.GetLocation2D">
            <inheritdoc />
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Cameras.TargetPseudo3DCameraBase.GetYShearing(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext,System.Single,System.Single)">
            <inheritdoc />
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Cameras.TargetPseudo3DCameraBase.GetCameraHeight">
            <inheritdoc />
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Cameras.IPseudo3DCameraExtensions.GetCamData(Kriptok.Regions.Pseudo3D.Cameras.IPseudo3DCamera)">
            <summary>
            Obtiene las propiedades de la cámara para renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Cameras.IPseudo3DTarget">
            <summary>
            Los objetos que implementan esta interfaz pueden ser utilizados para ubicar un plano Pseudo3D.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.ShadingAlgorithmEnum">
            <summary>
            Algoritmo de sombreado.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.ShadingAlgorithmEnum.None">
            <summary>
            Indica que no debe aplicar sombreados, independientemente de la textura utilizada.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.ShadingAlgorithmEnum.Flat">
            <summary>
            Sombreado "plano". La transformación es por igual a todos los pixels a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.ShadingAlgorithmEnum.Garoud">
            <summary>
            Sombreado con gradiente entre las normales de los vértices.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.PlotTexturedShapeBase.ScaleZ">
            <summary>
            Se utiliza para ahorrar algunos cálculos, indicando si debe o no escalara verticalmente
            los vértices.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.PlotViewWrapper">
            <summary>
            Esta vista es sólo para debug y pruebas.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.PlotViewWrapper.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.PlotViewWrapper.PlotFlatVerticalQuadView">
            <summary>
            Representa un panel vertical para planos pseudo3D.        
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.PlotViewWrapper.PlotTexturedVerticalQuadView">
            <summary>
            Representa un panel vertical para planos pseudo3D.        
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalTexturedPanelUVBase`1">
            <summary>
            Este componente se utiliza para delegar comportamiento que pueden tener
            los paneles texturados verticals en una interfaz Pseudo3D.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalTexturedPanelUVBase`1.SetTexture(`0)">
            <summary>
            Establece la textura a utilizar para renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.PlotTexturedVerticalQuadViewBase">
            <summary>
            Pared texturada vertical que se renderiza pixel por pixel.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.PlotTexturedVerticalQuadViewBase.v0">
            <summary>
            Coordenada V0 del mapeo de textura para esta figura.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.PlotTexturedVerticalQuadViewBase.texture">
            <summary>
            La textura que realmente va a utilizar para renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.PlotTexturedVerticalQuadViewBase.PlotColumn(Kriptok.Regions.IBufferedExtensions.Plotter,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Plotea una columna de pixels sin aplicar filtros.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.PlotTexturedVerticalQuadViewBase.Sample(System.Int32,System.Int32)">
            <summary>
            Toma un color de la textura en base a sus coordenadas (U, V).
            </summary>                
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRegion.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRegionBase`1.Render(System.Drawing.Graphics,Kriptok.Entities.Base.EntityBase[])">
            <summary>
            Renderiza la vista, aplicando las transformaciones correspondientes.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRegionBase`1.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera)">
            <summary>
            Método encargado de crear un nuevo contexto de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRegionBase`1.Render(`0,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Renderiza el fondo y los objetos pasados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRegionBase`1.CreateGdipScrollingBackground(Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollArgs,System.Reflection.Assembly,System.String)">
            <summary>
            Obtiene una instancia de un fondo scrolleable para este modo de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRegionBase`1.CreateGdipScrollingBackground(Kriptok.Regions.Pseudo3D.Backgrounds.HorizontalScrollArgs,Kriptok.Common.Resource)">
            <summary>
            Obtiene una instancia de un fondo scrolleable para este modo de renderización.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Pseudo3DRegionBase">
            <summary>
            Clase base para fondos con perspectiva Pseudo3D.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Pseudo3DRegionBase.regionWidth">
            <summary>
            Ancho de la región de pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Pseudo3DRegionBase.regionHeight">
            <summary>
            Alto de la región de pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRegionBase.SetCamera``1(``0)">
            <summary>
            Permite establecer el proceso "cámara" o foco de la cámara.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRegionBase.FillFloor(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext,Kriptok.Regions.Pseudo3D.Mode7.GdipMode7Plane)">
            <summary>
            Genera una brocha en base al plano indicado y la utiliza
            para renderizar la región inferior de la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRegionBase.GetYShearing(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext,System.Single,System.Single)">
            <summary>
            Obtiene la modificación sobre el eje Y a realizar para simular "mirar hacia abajo" o "hacia arriba".
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.rayCastShearing">
            <summary>
            Modificador de la coordenada Y para los rayos utilizados en procesos de RayCasting.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.transform">
            <summary>
            Matriz de transoformaciones. Utilizada para ahorrar recálculos al momento de dibujar vistas.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.rotation">
            <summary>
            Matriz de transformación sobre los ejes de rotación.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.inverseMatrix3D">
            <summary>
            Inversa de la matriz de transformación 3D. Se utiliza para raycasting.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.cameraCoords">
            <summary>
            Coordenadas calculadas de dónde se encuentra la cámara después de aplicar 
            la <see cref="F:Kriptok.Core.Camera.Distance"/>.
            Lo utilizan las <see cref="T:Kriptok.Views.Sprites.DirectionalSpriteView"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.YShearing">
            <summary>
            Modificación vertical del campo de visión que permite simular "mirar hacia abajo y hacia arriba"
            sin realmente rotar la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.RenderClipX">
            <summary>
            Área de renderización sobre el eje X.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.Camera">
            <summary>
            Propiedes de la cámara para renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.ScreenMidPoint">
            <summary>
            Indica el punto medio de la pantalla donde el "techo" pasa a convertirse en "piso",
            o bien tiene una "distancia infinita".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.ScreenMidPoint1">
            <summary>
            Punto medio de la pantalla +1.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.IsScreenMidPointInfiniteDistance">
            <summary>
            Indica si la línea horizontal correspondiente a <see href="ScreenMidPoint"></see>
            es donde se unen los dos planos horizontales superior e inferior, y la distancia
            a la cámara en ese caso es infinita.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.FixYTop(System.Int32)">
            <summary>
            Realiza una pequeña corrección a la altura a la que se puede terminar de renderizar una línea
            vertical con una textura completamente horizontal, para evitar errores de división por cero.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.FixYBottom(System.Int32)">
            <summary>
            Realiza una pequeña corrección a la altura a la que se puede empezar a renderizar una línea
            vertical con una textura completamente horizontal, para evitar errores de división por cero.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.DeTransform(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Detransforma un vector tridimencional, aplicando la matriz inversa de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.DeTransform(System.Single,System.Single,System.Single)">
            <summary>
            Detransforma un vector tridimencional, aplicando la matriz inversa de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.DeTransform_XYZ_ZX(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            
            Sólo devuelve, sin embargo, las coordenadas (Z, X), en ese orden.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.DeTransform_X0Z_ZX(System.Single,System.Single)">
            <summary>
            Realiza la operación inversa de la transformación de la cámara para obtener el vector original.
            
            Se considera la coordenada Y = 0f, por defecto.
            
            Sólo devuelve, sin embargo, las coordenadas (Z, X), en ese orden.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.FillVertical(System.Int32,System.Int32,System.Int32,System.Action)">
            <summary>
            Aplica transformaciones de color correspondiente a la renderización
            de líneas verticales texturadas.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.GetGdipFloorShade">
            <summary>
            Obtiene el nivel de incidencia de la luz para un plano "piso".
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.GetGdipCeilingShade">
            <summary>
            Obtiene el nivel de incidencia de la luz para un plano "techo".
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.Transform3D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.Transform3D_XZ_XZ(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.Transform3D_XZ_X(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Transforma un vértice tridimensional a la perspectiva del contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.GetAngleToCamera2D(Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Obtiene el ángulo de la ubicación hacia la cámara, tomando en cuenta el ángulo de la entidad.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.GetCalculatedLocation(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene las coordenadas de renderización del objeto.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.CenterX">
            <summary>
            Obtiene el centro horizontal de la pantalla.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.CenterY">
            <summary>
            Obtiene el valor del centro de la pantalla, pero modificado por el <see cref="F:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.YShearing"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.Dispose">
            <summary>
            Libera los recursos utilizados por la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.LineR(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,System.Action{System.Int32,System.Single})">
            <summary>
            Recorre de un punto al otro del segmento definido por los dos puntos,
            y ejecuta la acción indicada en cada uno.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.ToInt(System.Single)">
            <summary>
            Generaliza la transformación de valores de tipo float a entero
            en interfaces que utilicen este tipo de vistas.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.Rotate(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Rota un vector utilizando la matriz de rotación usada para generar el contexto.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.GetRayY(System.Int32)">
            <summary>
            Obtiene la coordenada Y para la fila indicada de un "rayo" en procesos de RayCasting.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.SetClipX(Kriptok.Drawing.Bound)">
            <summary>
            Establece los límites horizontales de renderización para algunas vistas.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.GetClipX">
            <summary>
            Obtiene los límites horizontales de renderización para algunas vistas.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.ProjectV_X(System.Single,System.Single)">
            <summary>
            Proyecta un vector tridimensional ya transformado, pero
            sólo obtiene la coordenada X.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.ProjectV_Y(System.Single,System.Single)">
            <summary>
            Obtiene la proyección de la coordenada Y, según la coordenada Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext.RayCasting(System.Action{System.Int32,Kriptok.Drawing.Algebra.Vector2F})">
            <summary>
            Realiza un paneo columna por columna de la región indicando por parámetro el "rayo" sobre
            el plano XY resultante.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalTexturedPanelUV">
            <summary>
            Este componente se utiliza para delegar comportamiento que pueden tener
            los paneles texturados verticals en una interfaz Pseudo3D.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalTexturedPanelUV.texture">
            <summary>
            Textura que finalmente se va a usar para renderizar en el siguiente frame.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalTexturedPanelUV.CalculateHeight(System.Single,System.Single)">
            <summary>
            Helper para calcular la altura de las columnas de pixels a renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.GdipTexturedVerticalQuadViewBase">
            <summary>
            Represnta una panel vertical para planos pseudo3D.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalTexturedPanelU">
            <summary>
            Este componente se utiliza para delegar comportamiento que pueden tener
            los paneles verticals en una interfaz Pseudo3D.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel">
            <summary>
            Este componente se utiliza para delegar comportamiento que pueden tener
            los paneles verticals en una interfaz Pseudo3D.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.#ctor(Kriptok.Views.Shapes.Vertices.Vertex25Base,Kriptok.Views.Shapes.Vertices.Vertex25Base,Kriptok.Views.Shapes.Vertices.Vertex25Base,Kriptok.Views.Shapes.Vertices.Vertex25Base)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.IsInvalid">
            <summary>
            Indica si el panel se encuentra "detrás de la cámara".
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.Vertices">
            <summary>
            Obtiene los vértices de la figura.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.ClipZ">
            <summary>
            Clipea los segmentos que describen el panel contra el plano 
            Z = <see cref="F:Kriptok.Drawing.Algebra.Vector3F.InvalidZ"/> de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.IfVisible(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext,System.Action)">
            <summary>
            Analiza si el panel es visible a la camara.
            
            Se asume que los vértices han sido correctamente transformados al espacio
            pseudo tridimensional previamente.
            
            También se asume que el ángulo sobre el eje de profundidad de la cámara es cero.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.ProjectZ(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext,System.Action{System.Int32,System.Single})">
            <summary>
            Realiza una proyección bidimensional del panel, iterando sobre
            los valores de X que se renderizan en la pantalla, y la coordenada
            Z tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.ProjectY0(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext,System.Action{System.Int32,System.Int32})">
            <summary>
            Realiza una proyección bidimensional del panel, iterando sobre
            los valores de X que se renderizan en la pantalla, y la coordenada
            Y0 bidimensinoal.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.Project(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext,System.Boolean,System.Action{System.Int32,System.Single,System.Single,System.Single})">
            <summary>
            Realiza una proyección bidimensional del panel, iterando sobre
            los valores de X que se renderizan en la pantalla, y la coordenada
            Z tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.Project3D(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext,System.Int32,System.Int32,System.Single,System.Single,System.Action{System.Int32,System.Single,System.Single,System.Single})">
            <summary>
            Proyecta la figura cuando la diferencia entre las coordenadas Z de los
            vértices no se encuentre entre -1 y 1.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.GetHorizontalBounds(System.Int32)">
            <summary>
            Obtiene los límites horizontales que ocupa el panel.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.GetCurrentLength">
            <summary>
            Obtiene la longitud del panel.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.GetCurrentHeight">
            <summary>
            Obtiene la altura actual del panel.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.GetLightIncidence(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext)">
            <summary>
            Obtiene la incidencia de la luz sobre la figura, de forma optimizada.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.ClampValues(System.Int32,System.UInt32,System.Int32@,System.Int32@)">
            <summary>
            Permite customizar el área de renderizado vertical.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.GetNormal">
            <summary>
            Obtiene la normal del plano.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.IntersectionWithPlane(System.Single)">
            <summary>
            Obtiene la coordenada X de la intersección entre el lado, y el plano Z = z.
            
            Siempre y cuando el valor de Z sea mayor o igual que <see cref="F:Kriptok.Drawing.Algebra.Vector3F.InvalidZ"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.ProjectV(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext,System.Single,System.Single,System.Single)">
            <summary>
            Proyecta contra la pantalla un vértice, pero sólo calculando la coordenada Y.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DVerticalPanel.IfVisiblePolygon(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext,System.Drawing.PointF[]@)">
            <summary>
            Obtiene el polígono bidimensional que está visible en pantalla.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.YBufferDouble">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.YBufferDouble.Height">
            <summary>
            Altura del buffer.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.YBufferDouble.buffer1">
            <summary>
            Buffer inferior.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferDouble.#ctor(System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.YBufferDouble"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferDouble.Reset">
            <summary>
            Reinicia el estado del buffer.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferDouble.IsVisibleInternal(System.Int32,System.Int32)">
            <summary>
            Indica si el valor indicado por parámetro es visible para la columna indicada.
            </summary> 
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferDouble.ExcludeFromTop(System.Int32,System.Int32)">
            <summary>
            Excluye para la columna X, todo por encima del valor Y indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferDouble.ExcludeFromBottom(System.Int32,System.Int32)">
            <summary>
            Excluye para la columna X, todo por debajo del valor Y indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferDouble.GetValueTop(System.Int32)">
            <summary>
            Obtiene el estado del buffer de la columna indicada por parámetro desde arriba
            de la pantalla. Es decir, de (0 -> Height)
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferDouble.GetValueBottom(System.Int32)">
            <summary>
            Obtiene el estado del buffer de la columna indicada por parámetro desde abajo
            de la pantalla. Es decir, de (Height -> 0)
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferDouble.GetMinBufferValueFromBottom(System.Int32,System.Int32)">
            <summary>
            Obtiene el menor valor del buffer (o el más alto, si se piensa como altura de abajo
            para arriba), entre los límites indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferDouble.GetMaxBufferValueFromTop(System.Int32,System.Int32)">
            <summary>
            Obtiene el mayor valor del buffer (o el más bajo, si se piensa como altura de arriba
            para abajo), entre los límites indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferDouble.ClampValues(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Ajusta los dos valores indicados por parámetro a los límites
            superior e inferior del Y-Buffer para la columna indicada.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.GdipTexturedVerticalQuadView">
            <summary>
            Represnta una panel vertical para planos pseudo3D.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext.NoSampleShade">
            <summary>
            Valor que indica que no se deben aplicar sombreados sobre los polígonos.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext.GetPlaneBrush(Kriptok.Regions.Planes.IPlotPlane)">
            <summary>
            Crea una brocha para renderizar el piso o techo.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext.BaseToInt(System.Single)">
            <summary>
            Indica cómo transformar los valores flotantes a enteros para
            renderizar planos pseudo3D.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext.IncToInt(System.Single)">
            <summary>
            Indica cómo transformar los valores flotantes a enteros para
            renderizar planos pseudo3D.
            </summary>   
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext.RasterFilterLine(System.Int32,Kriptok.Regions.Ambient.Base.IFogTransformation)">
            <summary>
            Aplica el filtro indicado a la línea indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext.FillVertical(Kriptok.Regions.Pseudo3D.Brushes.Base.IPseudo3DUInt32Brush,System.Int32,System.Int32,System.Int32)">
            <summary>
            Renderiza una línea texturada vertical, pero aplicando transformaciones y efectos a cada pixel.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext.FillVertical(System.UInt32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Renderiza una línea texturada vertical, pero aplicando transformaciones y efectos a cada pixel.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.YBufferBase">
            <summary>
            Representa un buffer de columnas de pixels verticales utilizados en perspectiva pseudo 3D.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.YBufferBase.resetValue">
            <summary>
            Valor al cual se resetean las columnas del buffer.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.YBufferBase.renderHeight">
            <summary>
            Listado del estado actual de las columnas.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferBase.#ctor(System.Drawing.Size,System.UInt16)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.YBufferBase"/>.
            </summary>
            <param name="size">Tamaño de la pantalla.</param>
            <param name="resetValue">Valor al cual se resetean las columnas del buffer.</param>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferBase.#ctor(System.Int32,System.Int32,System.UInt16)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.YBufferBase"/>.
            </summary>
            <param name="width">Tamaño de la pantalla.</param>
            <param name="height">Tamaño de la pantalla.</param>
            <param name="resetValue">Valor al cual se resetean las columnas del buffer.</param>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferBase.Reset">
            <summary>
            Reinicia el estado del buffer.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferBase.GetValue(System.Int32)">
            <summary>
            Obtiene el estado actual del buffer para una determinada columna.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferBase.IsVisibleInternal(System.Int32,System.Int32)">
            <summary>
            Indica si el valor indicado por parámetro es visible para la columna indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferBase.IsVisible(System.Int32,System.Int32)">
            <summary>
            Indica si el valor indicado por parámetro es visible para la columna indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferBase.SetRenderHeight(System.Int32,System.Int32)">
            <summary>
            Establece una nueva altura para la columna X.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferBase.Exclude(System.Int32,System.Int32)">
            <summary>
            Excluye una línea vertical a partir del punto indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferBase.CheckStatus(System.Int32,System.Int32,System.UInt16@)">
            <summary>
            Este método tiene un funcionamiento complejo.
            Por un lado, valida si el valor indicado por parámetro para la columna
            indicada no está ya ocludido por el buffer.
            
            También actualiza el buffer con el valor indicado.
            </summary>   
            <param name="columnIndex">Columna a evaluar.</param>
            <param name="value">Valor para validar.</param>
            <param name="currentHeight">Parámetro de salida que indica el estado
            actual del buffer para la columna indicada.</param>
            <returns>Indica si el valor indicado.</returns>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferBase.FindMinValue(System.Int32,System.Int32)">
            <summary>
            Obtiene el menor valor entre los límites indicados por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferBase.FindMaxValue(System.Int32,System.Int32)">
            <summary>
            Obtiene el mayor valor entre los límites indicados por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBufferBase.All(System.Func{System.UInt16,System.Boolean})">
            <summary>
            Indica si todas las columnas verticales cumplen una determinada condición.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.YBuffer0">
            <summary>
            Representa un buffer de columnas de pixels verticales utilizados en perspectiva pseudo 3D.
            El buffer se extiende desde la fila X = 0 hasta el final de la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBuffer0.#ctor(System.Drawing.Size)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.YBuffer0"/>.
            </summary>
            <param name="size">Tamaño de la pantalla.</param>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBuffer0.#ctor(System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.YBuffer0"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBuffer0.IsVisible(System.Int32,System.Int32)">
            <summary>
            Indica si el valor indicado por parámetro es visible para la columna indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBuffer0.ClampValue(System.Int32,System.Int32)">
            <summary>
            Obtiene el máximo valor para la columna X.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.YBuffer1">
            <summary>
            Representa un buffer de columnas de pixels verticales utilizados en perspectiva pseudo 3D.
            El buffer se extiende desde el final de la pantalla, hacia arriba.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBuffer1.#ctor(System.Drawing.Size)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.YBuffer1"/>.
            </summary>
            <param name="size">Tamaño de la pantalla.</param>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBuffer1.#ctor(System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.YBuffer1"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBuffer1.IsVisible(System.Int32,System.Int32)">
            <summary>
            Indica si el valor indicado por parámetro es visible para la columna indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBuffer1.FullyCovered">
            <summary>
            Indica si el buffer está cubierto por completo.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.YBuffer1.ClampValue(System.Int32,System.Int32)">
            <summary>
            Obtiene el mínimo valor para la columna X.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.PlotFlatVerticalQuadViewBase.renderColor">
            <summary>
            Color que se va a utilizar para renderizar el siguiente frame.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.PlotFlatVerticalQuadViewBase.FillVertical(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext,System.Int32,System.Single,System.Single)">
            <summary>
            Este método, en una futura implementación, debería ser "abstract",
            para que existiesen distintas implementaciones Gdip y Plot.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Gfps.GfpsCBuffer">
            <summary>
            Representa un Z-Buffer unidimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsCBuffer.length">
            <summary>
            Longitud del buffer. Generalmente, el ancho de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsCBuffer.bBuffer">
            <summary>
            Arreglo para controlar qué cantidad de la pantalla está cubierta por paredes.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsCBuffer.zBuffer">
            <summary>
            Profundidad de cada z perteneciente a las paredes del buffer.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsCBuffer.zBufferMax">
            <summary>
            Buffer de coordenadas Z que se utiliza para limpiar el <see cref="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsCBuffer.zBuffer"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsCBuffer.pBuffer">
            <summary>
            Paneles que ocupan cada elemento del buffer.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsCBuffer.differentPanels">
            <summary>
            Listado de los "diferentes paneles" a renderizar por frame.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GfpsCBuffer.#ctor(System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Gfps.GfpsCBuffer"/>.
            </summary>
            <param name="length">Longitud del buffer. Generalmente, el ancho de la pantalla.</param>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GfpsCBuffer.Clear">
            <summary>
            Limpia el buffer para volver a empezar a chequear profundidad.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GfpsCBuffer.FullyChecked">
            <summary>
            Checkea los casilleros indicados, y además indica si se terminó de completar el array.
            </summary>               
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GfpsCBuffer.Add(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext,Kriptok.Regions.Pseudo3D.Gfps.GfpsPanelWrapperBase)">
            <summary>
            Agrega un panel al buffer.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GfpsCBuffer.MaxZ">
            <summary>
            Obtiene la máxima coordenada Z registrada en el buffer.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Gfps.GfpsPanelWrapper`1">
            <summary>
            Representa un panel genérico que se encarga de controlar la visiblidad de los paneles,
            y su posterior renderización.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Gfps.GfpsPanelWrapperBase">
            <summary>
            Representa un panel genérico que se encarga de controlar la visiblidad de los paneles,
            y su posterior renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GfpsPanelWrapperBase.GetMaxDistance">
            <summary>
            Obtiene la distancia a la cámara del punto mas cercano del polígono tridimencional.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GfpsPanelWrapperBase.GetMinDistance">
            <summary>
            Obtiene la distancia a la cámara del punto mas lejano del polígono tridimencional.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GfpsPanelWrapperBase.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <summary>
            Obtiene la prioridad de renderización de la vista.
            
            Se utiliza el valor "más lejano" del polígono, para que ocluya los sprites
            de los objetos.
            </summary> 
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GfpsPanelWrapperBase.GetDrawOrder">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Gfps.GfpsPlotPanelWrapper">
            <summary>
            Representa un panel genérico que se encarga de controlar la visiblidad de los paneles,
            y su posterior renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsViewBuffer`1.renderMap">
            <summary>
            Arreglo bidimensional que indica qué tile ya se leyó para renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsViewBuffer`1.mapGridWidth">
            <summary>
            Ancho del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsViewBuffer`1.mapGridHeight">
            <summary>
            Alto del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsViewBuffer`1.viewGrid">
            <summary>
            Grilla de celdas generadas para la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsViewBuffer`1.regionWidth">
            <summary>
            Ancho de la region donde se renderiza.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsViewBuffer`1.regionHeight">
            <summary>
            Ancho de la region donde se renderiza.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsViewBuffer`1.FloorBound">
            <summary>
            Subregión de la pantalla donde se debe renderizar "piso".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsViewBuffer`1.CeilingBound">
            <summary>
            Subregión de la pantalla donde se debe renderizar "techo".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsViewBuffer`1.vertices">
            <summary>
            Colección con todos los vértices generados cuando se arma mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GfpsViewBuffer`1.cBuffer">
            <summary>
            Buffer utilizado para determinar qué parades dibujar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GfpsViewBuffer`1.MaxZ">
            <summary>
            Obtiene la minima prioridad a tomar en cuenta para renderizar.
            </summary>              
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GfpsViewBuffer`1.GetViews(Kriptok.Regions.Pseudo3D.Pseudo3DRenderContext,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Views.Base.IRenderizable[],System.Boolean,System.Boolean)">
            <summary>
            Obtiene todas las vistas para renderizar en la región.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Gfps.GdipGfpsRegion">
            <summary>
            Genera una vista basada en un mapa de tipo Ray-Casting
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Gfps.GdipGfpsRegion.mapGrid">
            <summary>
            Alto/ancho invertido del tamaño del mapa de tiles.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GdipGfpsRegion.#ctor(System.Drawing.Rectangle,Kriptok.Mapping.Gfps.GfpsCell[][],Kriptok.Mapping.Grid.TileMapGrid,System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Gfps.GdipGfpsRegion"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GdipGfpsRegion.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Gfps.PlotGfpsRegion">
            <summary>
            Genera una vista basada en un mapa de tipo Ray-Casting
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.PlotGfpsRegion.#ctor(System.Drawing.Rectangle,Kriptok.Mapping.Gfps.GfpsCell[][],Kriptok.Mapping.Grid.TileMapGrid,System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Gfps.PlotGfpsRegion"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.PlotGfpsRegion.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Gfps.PlotGfpsRegionY0">
            <summary>
            Genera una vista basada en un mapa de tipo Ray-Casting, pero con un ángulo de cámara fijo.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.PlotGfpsRegionY0.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.PlotGfpsRegionY0.CreatePlaneBrush(Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext,Kriptok.Regions.Planes.IPlotPlane)">
            <summary>
            Obtiene una brocha para renderizar con el plano indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.IGfpsPanel.GetWrapper">
            <summary> 
            Obtiene un wrapper para este panel.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Gfps.GdipGfpsDoubleSidePanel">
            <summary>
            Representa un panel que depende de un estado para "opacar" o no lo que hay detrás.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Gfps.GdipGfpsMiddleTilePanel">
            <summary>
            Representa a los paneles que se renderizan por la mitad del tile.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GdipGfpsPanel.GetWrapper">
            <summary>
            Obtiene un wrapper para esta vista.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Gfps.GfpsPanelRenderer">
            <summary>
            Esta vista se utiliza para renderizar paneles que podrían o no aparecer
            más de una vez en la lista de vistas, por estar parcialmente ocluídos por otro panel.
            
            Ej: un panel marco de puerta, cuando la puerta está casi abierta.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GfpsPanelRenderer.GetLocation2D">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GfpsPanelRenderer.GetLocationZ">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GfpsPanelRenderer.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.GfpsPanelRenderer.GetDrawOrder">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Gfps.PlotGfpsDoubleSidePanel">
            <summary>
            Representa un panel que depende de un estado para "opacar" o no lo que hay detrás.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Gfps.PlotGfpsMiddleTilePanel">
            <summary>
            Representa a los paneles que se renderizan por la mitad del tile.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Gfps.PlotGfpsPanel.GetWrapper">
            <summary>
            Obtiene un wrapper para este panel.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedBufferedContextBase">
            <summary>
            Contexto de renderización de entornos Pseudo3D particionados.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedBufferedContextBase.RegionWidth">
            <summary>
            Ancho de la región de pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedBufferedContextBase.RegionHeight">
            <summary>
            Alto de la región de pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedBufferedContextBase.Matrix">
            <summary>
            Matriz utilizada para evaluar la visualización de vistas bidimensionales
            en entornos particionados.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedBufferedContextBase.#ctor(System.Drawing.Graphics,Kriptok.Core.Camera,Kriptok.Regions.Pseudo3D.Pseudo3DRegionBase,Kriptok.Regions.Pseudo3D.Base.IBufferedPseudo3DRegion)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedBufferedContextBase"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedBufferedContextBase.ExcludeFromTopVertical(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Excluye del Y-Buffer todo aquello por debajo de los vértices indicados por parámtro.
            Utilizar este método en vistas verticales.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedBufferedContextBase.ExcludeFromBottomVertical(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Excluye del Y-Buffer todo aquello por debajo de los vértices indicados por parámtro.
            Utilizar este método en vistas verticales.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedBufferedContextBase.ExcludeFromTopHorizontal(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Excluye del Y-Buffer la región por encima del segmento definido por los puntos
            indicados por parámetro.
            
            NOTA: utilizar este método sólo para texturas que rendericen planos totalmente horizontales,
            ya que deben validarse contra el medio de la pantalla para evitar divisiones por cero.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedBufferedContextBase.ExcludeFromBottomHorizontal(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Excluye del Y-Buffer la región por debajo del segmento definido por los puntos
            indicados por parámetro.
            
            NOTA: utilizar este método sólo para texturas que rendericen planos totalmente horizontales,
            ya que deben validarse contra el medio de la pantalla para evitar divisiones por cero.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedBufferedContextBase.ExcludeFromBottom(System.Int32,System.Int32)">
            <summary>
            Excluye del Y-Buffer todo lo que está por debajo del valor Y, de la columna X.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedBufferedContextBase.ExcludeFromTop(System.Int32,System.Int32)">
            <summary>
            Excluye del Y-Buffer todo lo que está por arriba del valor Y, de la columna X.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedBufferedContextBase.FilterRenderizables(System.Collections.Generic.IEnumerable{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Filtra los objetos a renderizar en la pantalla, utilizando los límites horizontales de renderización.
            
            Podría interpretarse como un efecto de "frustrum-culling", pero sólo con los límites horizontales.
            
            Este método sólo funciona cuando la cámara no está ladeada, por lo que en modo DEBUG, lanzará
            una excepción si es el caso.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedBufferedContextBase.ClipY1(System.Single,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Clipea dos vértices contra el borde inferior de la pantalla, e indica si se clippeó algo o no.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedBufferedContextBase.ClipY0(System.Single,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Clipea dos vértices contra el borde superior de la pantalla, e indica si se clippeó algo o no.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2">
            <summary>
            Clase base para mapas Pseudo3D particionados en triángulos.
            </summary>    
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.PlanePadding">
            <summary>
            Es un límite de qué tan cerca puede estar la cámara del piso y el techo.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.NoPartitionId">
            <summary>
            Id de una partición inválida. Es decir: no hay partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.lastCameraLocation">
            <summary>
            Última ubicación donde se leyó la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.localizableCamera">
            <summary>
            Referencia a la cámara utilizada cuando la distancia al objetivo es mayor a cero,
            y se requiere calcular el punto de intersección para que la cámara no se salga del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.localizables">
            <summary>
            Lista de objetos que se encuentran en la vista para renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.#ctor(System.Drawing.Rectangle)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionContextBase"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.GetClosestCameraLocationToTarget(`1,Kriptok.Drawing.Algebra.Vector2F,System.Single,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Obtiene la ubicación válida de la cámara más cercana a la buscada, en dirección al objetivo.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.GetLocation2D">
            <summary>
            Obtiene la última ubicación conocida de la cámara, para la búsqueda de la partición a partir
            de la cual empezar a renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera,Kriptok.Drawing.Algebra.Vector2F,`1)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.SetCamera``1(``0)">
            <summary>
            Establece la cámara a utilizar en este entorno.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.Render(`0,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Sella la renderización por defecto, para que la vista ya reciba
            sólo los objetos que se pueden renderizar en pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.Render(`0,Kriptok.Regions.Pseudo3D.Partitioned.Base.RenderizableHandler[])">
            <summary>
            Permite customizar la renderización del escenario de terreno.
            Recibe por parámetro sólo los objetos a renderizar que se encuentran frente a la pantalla.
            </summary>       
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.GetPartitionForLocalizable(Kriptok.Common.Base.ILocalizable2D)">
            <summary>
            Obtiene la partición en la cual se encuentra un objeto localizable.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.AssignPartitionTo(Kriptok.Entities.Base.EntityBase,Kriptok.Entities.Base.EntityBase)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.FindPartition(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la partición en la que se encuentra la coordenada indicada. O <see cref="!:null"/>
            de no encontrarse dentro de ninguna partición.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.FindPartition(Kriptok.Drawing.Algebra.Vector2F,`1,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la partición en la que se encuentra la coordenada indicada. O <see cref="!:null"/>
            de no encontrarse dentro de ninguna partición.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.GetHitScanSegment(Kriptok.Common.Base.ILocalizable2D,System.Single,System.Single,System.Single)">
            <summary>
            Obtiene un segmento tridimensional desde un punto en una dirección, indicados por parámetro.
            El segmento termina cuando colisiona con una pared, piso o techo.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionedPseudo3DRegionBase`2.GetFloorHeight(Kriptok.Common.Base.ILocalizable2D)">
            <summary>
            Obtiene la altura del terreno para el objeto indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.IPseudo3DPartition`1.CheckAdjacentPartitions(Kriptok.Drawing.Algebra.Vector2F,`0@)">
            <summary>
            Indica si alguna de las particiones adyacentes contiene la coordenada indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.IPseudo3DPartition`1.GetCollisionVertex(Kriptok.Drawing.Algebra.Ray3D)">
            <summary>
            Obtiene el punto de colision de un rayo contra las paredes.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.IPseudo3DPartitionSide`2.PartitionContains(Kriptok.Drawing.Algebra.Vector2F,`0@)">
            <summary>
            Indica si la partición con la que conecta este "lado", contiene la coordenada indicada
            por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.IPseudo3DPartitionSide`2.IntersectionWithPlane(`1,System.Single)">
            <summary>
            Indica la coordenada X de la intersección entre el "lado" (transformado al espacio tridimencional),
            y el plano vertical Z = z.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionContextBase">
            <summary>
            Clase base para contextos de renderización por partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionContextBase.Bounds">
            <summary>
            Ventanas de renderización actual.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionContextBase.Renderizables">
            <summary>
            Lista de objetos a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Base.PartitionContextBase.RenderizablesLocation">
            <summary>
            Ubicación del array hasta donde se deben empezar a buscar vistas.
            
            Empieza en "-1" asumiendo que no hay objetos en la lista de renderizables.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Base.RenderizableHandler">
            <summary>
            Objeto utilizado para 
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Base.RenderizableHandler.View">
            <summary>
            Vista a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Base.RenderizableHandler.Z">
            <summary>
            Distancia a la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Base.RenderizableHandler.BoundsX">
            <summary>
            Límites horizontales de renderización de la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Base.RenderizableHandler.GetDrawOrder">
            <summary>
            Invierto la prioridad porque se ordenan al revés.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.PartitionSideIntersectionResultEnum">
            <summary>
            Estos son los posibles resultados de la intersección de un vector con un "lado"
            de una partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.PartitionSideIntersectionResultEnum.NotFound">
            <summary>
            No encontró colisión con un borde.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.PartitionSideIntersectionResultEnum.Founded">
            <summary>
            Indica si encontró una colisión.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.PartitionSideIntersectionResultEnum.KeepLooking">
            <summary>
            Indica que encontró una colisión, pero se debe seguir buscando en la siguiente partición.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionHorizontal">
            <summary>
            Partición de modos de terreno Pseudo3D con una superficie plana.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionHorizontal.surface">
            <summary>
            Superficie a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionHorizontal.PlaneZ">
            <summary>
            Altura del plano.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionHorizontal.TextureMappingScale">
            <summary>
            Escala de la textura a renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionHorizontal.GetFloorHeight(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la altura del "piso" para la coordenada indicada por parámetro.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionHorizontal.Normal">
            <summary>
            Normal calculada de la figura para renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionHorizontal.IntersectionToFloor(Kriptok.Drawing.Algebra.Ray3D,Kriptok.Drawing.Algebra.Vector3F@)">
            <summary>
            Intersecta el rayo indicado por parámetro con el plano inferior.
            </summary> 
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionHorizontal.IsGroundVisible(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext)">
            <summary>
            La superficie es visible siempre y cuando la cámara esté por encima de esta.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionHorizontal.UpdateYBuffer(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Exclude de la renderización toda la región de la pantalla bajo el segmento definido
            por los vértices indicados por parámetro.
            
            Además devuelve el valor máximo que podrá adoptar la coordenada Y desde ahora.
            </summary> 
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionHorizontal.IsHorizontalPartition(Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX)">
            <summary>
            Indica si la partición se puede crear como una partición horizontal.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSloped">
            <summary>
            Partición de modos de terreno Pseudo3D con una superficie inclinada.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSloped.surface">
            <summary>
            Vista principal que renderiza el "piso" de la partición.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSloped.GetFloorHeight(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la altura del "piso" para la coordenada indicada por parámetro.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSloped.Normal">
            <summary>
            Normal calculada de la figura para renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSloped.IntersectionToFloor(Kriptok.Drawing.Algebra.Ray3D,Kriptok.Drawing.Algebra.Vector3F@)">
            <summary>
            Intersecta el rayo indicado por parámetro con el plano inferior.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSloped.IsGroundVisible(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext)">
            <summary>
            Calculo la visibilidad de la región en base a la superficie triangular.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSloped.UpdateYBuffer(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Exclude de la renderización toda la región de la pantalla bajo el segmento definido
            por los vértices indicados por parámetro.
            
            Además devuelve el valor máximo que podrá adoptar la coordenada Y desde ahora.
            </summary> 
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideBase">
            <summary>
            Lado "base" para modos tipo terreno.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideBase.ContinueRendering(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext)">
            <summary>
            Indica si el algoritmo tiene que seguir renderizando (es decir, el lado da a una partición).
            
            Y además que no estoy volviendo para atrás en el árbol de renderizado.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideBase.RenderTo(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext,System.Single,System.Single,System.Int32,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Renderiza el lado según el contexto actual.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideBase.PartitionContains(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase@)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideBase.IntersectionWithPlane(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext,System.Single)">
            <summary>
            Obtiene la coordenada X de la interseccion entre este lado y el plano Z = z.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideBase.FindPartition(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase,System.Int32,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Busca la partición que contiene la coordenada indicada por parámetro, siguiendo la línea
            delimitada por el segmento que se indica por parámetro.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideBase.FindNextPartition(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Dado el segmento definido por el par de vértices indicados por parámetro, 
            este método permite continuar con la búsqueda de la siguiente partición
            en línea recta.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideBase.FindNextPartition(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase,System.Int32,Kriptok.Regions.Pseudo3D.FindPartitionContext)">
            <summary>
            Busca la partición que contiene la coordenada indicada por parámetro, 
            por proximidad.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideBase.ContinueRayIntersection(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Ray3D)">
            <summary>
            Indica si debe continuar por este lado la evaluación de intersección con un "rayo".
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideToHorizon">
            <summary>
            Es un tipo de lado que renderiza una textura horizontal hast el infinito.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideToHorizon.owner">
            <summary>
            Vista principal.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideToHorizon.infinitePlaneHeight">
            <summary>
            Altura del plano que debe renderizarse hasta el horizonte.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideToHorizon.inverseTextureScale">
            <summary>
            Valor inverso precalculado de cuánto se debe escalar la textura para renderizar.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideToHorizon.TextureScale">
            <summary>
            Indica cuánto se debe escalar la textura para renderizar.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideToHorizon.TextureLocation">
            <summary>
            Punto del entorno tridimensional donde se emplaza el punto (0, 0) de la textura.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWall">
            <summary>
            Un "lado" de un terreno que renderiza una "pared".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWall.wall">
            <summary>
            Pared vertical que divide las particiones.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWall.ContinueRayIntersection(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Ray3D)">
            <summary>
            
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideVoid">
            <summary>
            Lado que no da a ningún lado.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideVoid.multiplier">
            <summary>
            Para calcular la intersección de un segmento con "el infinito", no puedo usar
            el máximo valor de un float, porque si después se calcula alguna distancia,
            o algo así, puede generar errores, así que uso un valor más bajo, pero igualmente grande.
            
            Se puede ir ajustando (achicando) si empieza a dar problemas.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideVoid.ContinueRendering(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext)">
            <summary>
            Indica si el algoritmo tiene que seguir renderizando (es decir, el lado da a una partición).
            
            Y además que no estoy volviendo para atrás en el árbol de renderizado.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideVoid.ContinueRayIntersection(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Ray3D)">
            <summary>
            
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideVoid.IntersectionWithInfinity(Kriptok.Drawing.Algebra.Ray3D)">
            <summary>
            Calcula el vértice con el "fin del espacio" en la dirección del rayo.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideVoid.PartitionContains(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase@)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSidePortalWall">
            <summary>
            "Lado" de una partición que da a otra partición, pero tiene una pared vertical separatoria.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSidePortalWall.wall">
            <summary>
            Pared vertical que divide las particiones.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSidePortalWall.TextureId">
            <summary>
            Id de la textura actual.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSidePortalWall.Vertices">
            <summary>
            Obtiene los vértices tridimencionales de la "pared".
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.IM9SurfaceView">
            <summary>
            Interfaz para vista del "piso" de las particiones de M9.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.IM9SurfaceView.Render(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext,System.Int32,System.Int32)">
            <summary>
            Renderiza la vista entre las columnas indicada por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.IM9SlopedSurfaceView">
            <summary>
            Interfaz de una superficie "inclinada" piso de las particiones de M9.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.IM9SlopedSurfaceView.Render(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Renderiza la vista inclinada.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.IM9SlopedSurfaceView.IsVisible(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext)">
            <summary>
            Indica si la vista está visible.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.IM9HorizontalSurfaceView">
            <summary>
            Interfaz de una superficie "horizontal" piso de las particiones de M9.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.IM9HorizontalSurfaceView.Render(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Renderiza la vista horizontal.
            </summary> 
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.IM9HorizontalTextureComponent">
            <summary>
            Interfaz utilizada por los componentes visuales de terrenos particionados
            que renderizan una textura completamente horizontal.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.IM9HorizontalTextureComponent.TextureLocation">
            <summary>
            Obtiene o establece un objeto que manejará la ubicación 
            de renderización de la textura.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9HorizontalNoShadeView">
            <summary>
            Vista horizontal sin ningún tipo de sombreado.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9SlopedFlatShadingView">
            <summary>
            Implementación de partición inclinada para terrenos que utiliza sombreado plano.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9SlopedFlatShadingView.shadedTexture">
            <summary>
            Textura ya evaluada para el próximo frame.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9SlopedFlatShadingView.RenderVertically(Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9SlopedFlatShadingView.RenderVertically(Kriptok.Regions.Pseudo3D.BufferedPseudo3DRenderContext,Kriptok.Views.Shapes.Vertices.Vertex25Normal,Kriptok.Views.Shapes.Vertices.Vertex25Normal,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9SlopedFlatShadingView.RenderColumn(System.Int32,System.Int32,System.Int32,Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4,Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9SlopedFlatShadingViewBase">
            <summary>
            Implementación de partición inclinada para terrenos que utiliza sombreado plano.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9SlopedNoneShadingView">
            <summary>
            Implementación de partición inclinada para terrenos que no tiene sombreado.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9SlopedNoneShadingView.RenderColumn(System.Int32,System.Int32,System.Int32,Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4,Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9SlopedViewBase">
            <summary>
            Implementación genérica de partición inclinada para terrenos que utiliza sombreado degradado.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9SlopedViewBase.Kriptok#Regions#Pseudo3D#Partitioned#Terrain#Views#IM9SlopedSurfaceView#IsVisible(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9SlopedViewBase.Kriptok#Regions#Pseudo3D#Partitioned#Terrain#Views#IM9SlopedSurfaceView#Render(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9SlopedViewBase.Kriptok#Regions#Pseudo3D#Partitioned#Terrain#Views#IM9SurfaceView#Render(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9SlopedViewBase.CustomRenderBounds(System.Int32,System.Int32@,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9SlopedGaroudShadingView">
            <summary>
            Implementación de partición inclinada para terrenos que utiliza sombreado degradado.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Views.M9SlopedGaroudShadingView.RenderColumn(System.Int32,System.Int32,System.Int32,Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4,Kriptok.Regions.Pseudo3D.GaroudShading.GSPlotSlopedSurfaceViewBase.PlaneSample4)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext">
            <summary>
            Contexto de evaluación de colisiones para terrenos particionados.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext.region">
            <summary>
            Entorno principal donde se realiza la validación.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext.entity">
            <summary>
            Entidad cuya posición se desea validar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext.beforeMoving">
            <summary>
            Ubicación de la entidad antes de empezar a moverse.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext.currentPartition">
            <summary>
            Partición en la que se encuentra validando el algoritmo.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion,Kriptok.Entities.Terrain.ITerrainEntity,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext.FindObstacles(Kriptok.Drawing.Shapes.Circle)">
            <summary>
            Agrega las paredes y vértices con los que está colisionando la entidad en cuestión.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext.ValidateNewLocation(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            En principio no hay mucho para validar acá.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext.GetMaxSlopedAbleToClimb">
            <summary>
            Obtiene la pendiente que la entidad es capaz de escalar.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext.IsValidStepHeight(Kriptok.Drawing.Algebra.Segment2D,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase)">
            <summary>
            Indica si es válida la altura de la partición a la que estaría moviendo la entidad.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext.IsValidStepHeight(Kriptok.Drawing.Algebra.Segment2D)">
            <summary>
            Indica si es válida la altura de la partición a la que estaría moviendo la entidad.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext.GetSlopedPartitionSideSegment(Kriptok.Drawing.Algebra.Segment2D)">
            <summary>
            Obtiene el segmento "corrido" de un lado pendiene que no se puede escalar.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext.CanEntityMoveTo(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainLocationValidator">
            <summary>
            Validador de posición de entidades en entornos <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion">
            <summary>
            Interfaz que representa las implementaciones de <see cref="T:Kriptok.Mapping.Partitioned.Terrain.TerrainMapX"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion.GetLocationValidator(Kriptok.Entities.Terrain.ITerrainEntity)">
            <summary>
            Obtiene un validador de posición para la entidad indicada por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion.ValidatingLocation(Kriptok.Entities.Terrain.ITerrainEntity,System.Action)">
            <summary>
            Genera un contexto de validación de ubicación de una entidad.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IPseudo3DTerrainRegion.GetFloorNormal(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la normal del piso en la posición indicada por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext">
            <summary>
            Contexto de renderización de entornos de tipo terreno Pseudo 3D.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext.#ctor(System.Drawing.Graphics,Kriptok.Core.Camera,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion,Kriptok.Regions.Pseudo3D.YBuffer1,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext.ExcludeFromBottomSloped(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Excluye del Y-Buffer la sección bajo el segmento definido por los vértices indicados por parámetro.
            
            Para particiones inclinadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext.ExcludeFromTop(System.Int32,System.Int32)">
            <summary>
            Excluye del Y-Buffer todo lo que está por arriba del valor Y, de la columna X.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext.ExcludeFromBottom(System.Int32,System.Int32)">
            <summary>
            Excluye del Y-Buffer todo lo que está por debajo del valor Y, de la columna X.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext.BoundsF">
            <summary>
            Obtiene los límites de la pantalla en float.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext.ExcludeFromBottomSloped(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Excluye desde abajo el segmento representado por los dos vertices
            para particiones inclinadas.
            
            Además devuelve el valor máximo que podrá adoptar la coordenada Y desde ahora.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext.ExcludeFromBottomHorizontal(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Excluye desde abajo el segmento representado por los dos vertices
            para particiones completamente horizontales.
            
            Además devuelve el valor máximo que podrá adoptar la coordenada Y desde ahora.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext.ProjectEdge(Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Proyecta un segmento definido por dos vértices contra la pantalla. Y los recorta contra
            el plano Z = <see cref="F:Kriptok.Drawing.Algebra.Vector3F.InvalidZ"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IM9PartitionSideWallView.TextureId">
            <summary>
            Id de la textura asignada a la pared.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IM9PartitionSideWallView.GetVertices">
            <summary>
            Obtiene los dos vértices superiores de la pared.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IM9PartitionSideWallView.GetTopVertices">
            <summary>
            Obtiene los dos vértices superiores de la pared.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IM9PartitionSideWallView.ClipToRender(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext,Kriptok.Drawing.Bound)">
            <summary>
            Clipea la vista y la prepara para renderizar.
            </summary>   
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IM9PartitionSideWallView.ExcludeFromBottom(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext,Kriptok.Drawing.Bound)">
            <summary>
            Excluye el fondo de la pantalla para arriba lo que va a quedar ocluido por la pared.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IM9PartitionSideWallView.RenderClipped(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext)">
            <summary>
            Renderiza la pared en pantalla. Devuelve un valor booleando indicado si se dibujó o no.
            </summary>   
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IM9PartitionSideWallViewExtensions.GetTopVertices(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IM9PartitionSideWallView,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext,Kriptok.Drawing.Bound,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Obtiene los vérices verticales para renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IM9Surface">
            <summary>
            Superficie utilizada para calcular las normales de los vértices.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IM9Surface.GetNormal">
            <summary>
            Obtiene la normal de la superficie.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.IM9Surface.VertexMoved(System.Boolean)">
            <summary>
            Indica que uno de los vértices se movió, en caso de que sea necesario realizar
            cálculos asociados a la renderización.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase">
            <summary>
            Partición de modos de terreno Pseudo3D con una superficie inclinada.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.Id">
            <summary>
            Id de la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.Owner">
            <summary>
            Vista general del modo.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.partitionX">
            <summary>
            Tiene la metadata de la partición. Es el objeto en base al cuál se construyó.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.triangle">
            <summary>
            Triángulo que engloba la partición.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.Normal">
            <summary>
            Normal calculada de la figura para renderizar.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.TextureId">
            <summary>
            Obtiene el Id de la textura de la partición.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.IsGroundVisible(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext)">
            <summary>
            Indica si debe renderizar la vista inferior de la partición.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.FindAndRelate(Kriptok.Mapping.Partitioned.Terrain.TerrainPartitionX,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase[])">
            <summary>
            Relaciona una particion con las correspondientes a través de sus "lados".
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.GetFloorHeight(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la altura del "piso" para la coordenada indicada por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.Contains(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si la particion contiene el punto indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.GetArea2D">
            <summary>
            Obtiene el área bidimensional de la partición.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.Kriptok#Regions#Pseudo3D#Partitioned#Terrain#IM9Surface#GetNormal">
            <summary>
            Obtiene la normal de la superficie.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.GetCenter">
            <summary>
            Obtiene el punto central tridimensional de la partición.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.CheckAdjacentPartitions(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase@)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.FindCollidingObstacles(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext)">
            <summary>
            Algoritmo recursivo que se encarga de buscar las paredes "cercanas" para validar
            la ubicación de un objeto luego de moverse.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.FindCollidingObstacles(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.TerrainCollisionContext,System.Int32)">
            <summary>
            Detecta intersecciones recursivamente entre los vértices indicados por parámetro
            y las paredes de los mapas.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.FindPartition(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Busca la partición que contiene la coordenada indicada por parámetro, siguiendo la línea
            delimitada por el segmento que se indica por parámetro.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.FindNextPartition(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Busca la partición que contiene la coordenada indicada por parámetro, siguiendo la línea
            delimitada por el segmento que se indica por parámetro.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.FindPartition(Kriptok.Regions.Pseudo3D.FindPartitionContext)">
            <summary>
            Busca la partición que contiene la coordenada indicada por parámetro
            por proximidad.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.FindNextPartition(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase,Kriptok.Regions.Pseudo3D.FindPartitionContext)">
            <summary>
            Busca la partición que contiene la coordenada indicada por parámetro
            por proximidad.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.GetCollisionVertex(Kriptok.Drawing.Algebra.Ray3D)">
            <summary>
            Obtiene el punto de colisión entre el rayo y la primer pared/piso que encuentre.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.GetCollisionVertex(System.Int32,Kriptok.Drawing.Algebra.Ray3D)">
            <summary>
            Obtiene el punto de colisión entre el rayo y la primer pared/piso que encuentre.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.IntersectionToFloor(Kriptok.Drawing.Algebra.Ray3D,Kriptok.Drawing.Algebra.Vector3F@)">
            <summary>
            Intersecta el rayo indicado por parámetro con el plano inferior.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.UpdateYBuffer(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Exclude de la renderización toda la región de la pantalla bajo el segmento definido
            por los vértices indicados por parámetro.
            
            Además devuelve el valor máximo que podrá adoptar la coordenada Y desde ahora.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.GetVertices">
            <summary>
            Obtiene los vértices de la partición.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.VertexMoved(System.Boolean)">
            <summary>
            Recalcula valores necesarios para la renderización que dependen
            de la ubicación de los vértices, cuando un vértice se mueve.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.AdjacentPartitions">
            <summary>
            Particiones con las que se toca la partición.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase.Sides">
            <summary>
            Lados de la partición.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSidePortal">
            <summary>
            Un "lado" de terreno que da a otra partición sin renderizar nada.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSidePortal.PartitionTo">
            <summary>
            Partición con la que conecta el "lado".
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSidePortal.ContinueRendering(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionContext)">
            <summary>
            Indica si el algoritmo tiene que seguir renderizando (es decir, el lado da a una partición).
            
            Y además que no estoy volviendo para atrás en el árbol de renderizado.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSidePortal.PartitionContains(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase@)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSidePortal.Intersects(System.Int32,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Line2D@)">
            <summary>
            Encuentra la intersección entre este lado, y el segmento definido por los dos vértices
            indicados por parámetro.
            </summary>
            <returns>Devuelve <see cref="!:true"/>, si ha encontrado la intersección, y 
            <see cref="!:false"/> de lo contrario.</returns>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSidePortal.ContinueRayIntersection(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Ray3D)">
            <summary>
            Indica si debe continuar por este lado la evaluación de intersección con un "rayo".
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSidePortal.ContinueRayIntersection(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Indica si debe continuar por este lado la evaluación de intersección con un "rayo".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallFlatView.y0">
            <summary>
            Variables utilizadas para la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallFlatView.y0Copy">
            <summary>
            Variables utilizadas para la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallFlatView.yDiff">
            <summary>
            Variables utilizadas para la renderización.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallFlatView.TextureId">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallFlatView.ClipToRender(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext,Kriptok.Drawing.Bound)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallFlatView.ExcludeFromBottom(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext,Kriptok.Drawing.Bound)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallFlatView.RenderClipped(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext)">
            <inheritdoc/>   
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallFlatView.Kriptok#Regions#Pseudo3D#Partitioned#Terrain#IM9Surface#VertexMoved(System.Boolean)">
            <summary>
            Realmente acá no importa mucho que se mueva un vértice.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallFlatView.GetVertices">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallFlatView.GetTopVertices">
            <inheritdoc/>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallGaroudView.y0">
            <summary>
            Variables utilizadas para la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallGaroudView.y0Copy">
            <summary>
            Variables utilizadas para la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallGaroudView.yDiff">
            <summary>
            Variables utilizadas para la renderización.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallGaroudView.TextureId">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallGaroudView.ClipToRender(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext,Kriptok.Drawing.Bound)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallGaroudView.ExcludeFromBottom(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext,Kriptok.Drawing.Bound)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallGaroudView.RenderClipped(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionSideWallGaroudView.Kriptok#Regions#Pseudo3D#Partitioned#Terrain#IM9Surface#VertexMoved(System.Boolean)">
            <summary>
            Realmente acá no importa mucho que se mueva un vértice.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex">
            <summary>
            Vértice para terrenos Pseudo3D.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex.metadata">
            <summary>
            Metadata obtenida del vértice del editor de mapas.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex.#ctor(Kriptok.Drawing.Vertex2,Kriptok.Mapping.Partitioned.Terrain.TerrainVertexX)">
            <summary>
            Devuelve una nueva instancia de <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex,System.Single)">
            <summary>
            Constructor utilizado para poder reutilizar el pivot de uno de los vértices.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex.Normal">
            <summary>
            No permito modificar la normal por ahora.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex.GetNormal">
            <summary>
            Obtiene la normal asociada a este vértice.
            </summary>   
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex.surfaces">
            <summary>
            Utilizado para guardar referencia a las particiones afectadas
            por las modificaciones en los vértices.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex.InformMovement">
            <summary>
            Informa a las particiones relacionadas que se movió para que recalculen
            los valores necesarios de renderización.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex.X">
            <summary>
            Obtiene o establece la posición actual del vértice sobre el eje X.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex.Y">
            <summary>
            Obtiene o establece la posición actual del vértice sobre el eje Y.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex.GetMetadata(System.String)">
            <summary>
            Obtiene un metadato almacenado en el vértice por el editor de mapas.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion">
            <summary>
            Vista de "terreno" en Pseudo3D
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.vertices">
            <summary>
            Colección de vértices del terreno.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.partitions">
            <summary>
            Colección de particiones del terreno.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.YBuffer">
            <summary>
            Y-Buffer utilizado para la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.animatedTextures">
            <summary>
            Listado de texturas animadas que usa el mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.tileAnimation">
            <summary>
            Utilizado para animar los tiles animados.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.TileAnimatedSpeed">
            <summary>
            Obtiene o establece la velocidad de la animación de las texuras animadas.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.Partitions">
            <summary>
            Obtiene todas las particiones.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.Render(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRenderContext,Kriptok.Regions.Pseudo3D.Partitioned.Base.RenderizableHandler[])">
            <summary>
            Permite customizar la renderización del escenario de terreno.
            Recibe por parámetro sólo los objetos a renderizar que se encuentran frente a la pantalla.
            </summary>       
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.GetLocationValidator(Kriptok.Entities.Terrain.ITerrainEntity)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.CreateCollisionContextFor(Kriptok.Entities.Terrain.ITerrainEntity,Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9PartitionBase,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Crea un contexto de detección de colisiones para la entidad indicada por parámetro.
            </summary>
            <param name="entity">Entidad para la cual se evalúna las colisiones.</param>
            <param name="partition">Partición desde donde el algoritmo </param>
            <param name="beforeMoving">Ubicación inicial de la entidad antes de empezar la validación.</param>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.GetFloorNormal(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la normal del piso en la posición indicada por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.FindVertices(System.Func{Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex,System.Boolean})">
            <summary>
            Busca todos los vértices que cumplan con una condición.
            
            Esta función es LENTA. No utilizar en procesos que corran por frame.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.TriggerEvent(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.M9Builder">
            <summary>
            Clase que ayuda a construir vistas de tipo <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.M9Builder.Owner">
            <summary>
            Vista principal.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.M9Builder.texset">
            <summary>
            Juego de texturas utilizado en la vista.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.M9Builder.vertices">
            <summary>
            Vértices utilizados por la vista.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.M9Builder.usedTextures">
            <summary>
            Lista de texturas utilizadas por el mapa. Es un sub-conjunto de las texturas del
            texset que se utilizó para crear la vista.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.M9Builder.newVertices">
            <summary>
            Nuevos vértices generados durante la creación del mapa. No responden directamente a
            vértices definidos en el mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.M9Builder.YBuffer">
            <summary>
            Obtiene el buffer para vistas que lo requieran.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.M9Builder.GetTexture(System.Int32)">
            <summary>
            Obtiene la textura indicada por parámetro y la guarda como parte de un subconjunto de texturas utilizadas.
            </summary>            
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.M9Builder.GetVertex(System.Int32)">
            <summary>
            Obtiene un vértice por su id.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.M9Builder.GetVertex(Kriptok.Regions.Pseudo3D.Partitioned.Terrain.M9Vertex,System.Single)">
            <summary>
            Obtiene un vértice para ser utilizado en una "pared vertical".
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.M9Builder.GetVertexCollection">
            <summary>
            Obtiene una colección de vértices con las normales recalculadas para actualizar y
            renderizar la vista.
            </summary>            
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Terrain.Pseudo3DTerrainRegion.M9Builder.GetAnimatedTextures">
            <summary>
            Obtiene las texturas animadas utilizadas en el mapa.
            </summary>            
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion">
            <summary>
            Vista de interfaz tridimencional.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.graph">
            <summary>
            Grafo de particiones de la vista.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.yBuffer">
            <summary>
            Y-Buffer de la vista para renderizado.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.AnimatedTextures">
            <summary>
            Arreglo de texturas animadas para actualizar las imágenes.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.textureAnimation">
            <summary>
            Control de animación de tiles.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.eventListeners">
            <summary>
            Elementos interactivos del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.#ctor(System.Drawing.Rectangle,Kriptok.Mapping.ITexset{Kriptok.Views.Shapes.ISampleTexture},Kriptok.Mapping.Partitioned.Wld.WldMapX)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.AllSectors">
            <summary>
            Obtiene un arreglo de todos los sectores.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.Sector(System.Int32)">
            <summary>
            Obtiene el sector con el id indicado para modificación en el juego.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.Render(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext,Kriptok.Regions.Pseudo3D.Partitioned.Base.RenderizableHandler[])">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.FindPartition(Kriptok.Drawing.Algebra.Vector2F)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.FindPartition(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,Kriptok.Drawing.Algebra.Vector2F)">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.TileAnimatedSpeed">
            <summary>
            Obtiene o establece la velocidad de la animación de las texuras animadas.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.GetClosestCameraLocationToTarget(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,Kriptok.Drawing.Algebra.Vector2F,System.Single,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Método que busca el punto más cercano al "objetivo" que se encuentre dentro del mapa. 
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.GetLocationValidator(Kriptok.Entities.Wld.IWldEntity)">
            <summary>
            Obtiene un objeto que se utiliza para validar la ubicación de un 
            objeto en entornos particionados.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.ValidatingLocation(Kriptok.Entities.Wld.IWldEntity,System.Action)">
            <summary>
            Valida que el objeto pueda realizar el movimiento que intenta.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.FindPortals(System.Int32,System.Int32)">
            <summary>
            Busca todos los "lados" que conectan sectores.
            </summary>
            <param name="fromSector">Sector al que pertenecen los "lados" a obtener.</param>
            <param name="toSector">Sector con el que conectan las paredes.</param>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.AddEventListener(Kriptok.Entities.Wld.WldEventListener)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.TriggerEvent(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion.PartitionGraph">
            <summary>
            Obtiene grupos de particiones agrupados por conexiones, independientemente de si pertenecen o no al mismo sector.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Pseudo3DWldRegionExtensions">
            <summary>
            Funcionalidades extra de la interfaz <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Pseudo3DWldRegionExtensions.Sectors(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion,System.Action{Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector},System.Int32[])">
            <summary>
            Ejecuta una misma función sobre todos los sectores indicados por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Pseudo3DWldRegionExtensions.SectorsWhere(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion,System.Func{Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector,System.Boolean})">
            <summary>
            Devuelve una lista de sectores filtrados por la función indicada por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase">
            <summary>
            Lado de una partición que tiene un portal que conecta con otra partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.portal">
            <summary>
            Objeto utilizado para delagar ciertos comportamientos del portal.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.VP0">
            <summary>
            Vértices tridimensionales que conforman el portal.
            
            0----------1
            |          |
            |          |
            |          |
            2----------3
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.VP1">
            <summary>
            Vértices tridimensionales que conforman el portal.
            
            0----------1
            |          |
            |          |
            |          |
            2----------3
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.VP2">
            <summary>
            Vértices tridimensionales que conforman el portal.
            
            0----------1
            |          |
            |          |
            |          |
            2----------3
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.VP3">
            <summary>
            Vértices tridimensionales que conforman el portal.
            
            0----------1
            |          |
            |          |
            |          |
            2----------3
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.partitionTo">
            <summary>
            Partición a la cual da este lado.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.SectorTo">
            <summary>
            Sector al que conecta el portal.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.PartitionTo">
            <summary>
            Obtiene la partición a la cual da el portal.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.RenderRecursive(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext,Kriptok.Drawing.Bound2)">
            <summary>
            Renderiza el contenido del portal.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.RenderPortal(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext)">
            <summary>
            Renderiza el "lado" en la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.RenderSide(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext)">
            <summary>
            Renderiza el lado, si corresponde, y devuelve un valor indicado si renderizó o no.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.Intersects(System.Int32,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Line2D@)">
            <summary>
            Encuentra la intersección entre este lado, y el segmento definido por los dos vértices
            indicados por parámetro.
            </summary>
            <returns>Devuelve <see cref="!:true"/>, si ha encontrado la intersección, y 
            <see cref="!:false"/> de lo contrario.</returns>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.PartitionContains(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition@)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.SetPartitionTo(Kriptok.Regions.Partitioned.Wld.Vertices.WldVertexCollection,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition)">
            <summary>
            Asigna la partición a la cual da este lado.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.IntersectNextPartition(Kriptok.Entities.Wld.IWldEntity,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.BoundF@,Kriptok.Drawing.Algebra.Line2D@)">
            <summary>
            Dado el segmento definido por el par de vértices indicados por parámetro, y la intersección
            encontrada, este método permite continuar con la búsqueda de la intersección contra una pared,
            o bien con un obstáculo que no pueda ser sorteado.
            </summary>                
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.FindNextPartition(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Dado el segmento definido por el par de vértices indicados por parámetro, 
            este método permite continuar con la búsqueda de la siguiente partición
            en línea recta.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.FindNextPartition(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,System.Int32,Kriptok.Regions.Pseudo3D.FindPartitionContext)">
            <summary>
            Dado el segmento definido por el par de vértices indicados por parámetro, 
            este método permite continuar con la búsqueda de la siguiente partición por proximidad.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.AppendSideToContext(Kriptok.Regions.Partitioned.Wld.WldCollisionContext,Kriptok.Drawing.Algebra.Segment2D,System.Int32)">
            <summary>
            Indica si tiene que agregar la pared al contexto de colisión.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.RayIntersection(System.Int32,Kriptok.Drawing.Algebra.Ray3D,Kriptok.Drawing.Algebra.Vector3F@)">
            <summary>
            Intersecta el rayo indicado con el "lado", pero validando que el algoritmo
            no vuelva sobre sí mismo.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.ContinueRayIntersection(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Ray3D)">
            <summary>
            Indica si debe continuar por este lado la evaluación de intersección con un "rayo".
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalBase.ContinueRayIntersection(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Indica si debe continuar por este lado la evaluación de intersección con un "rayo".
            
            En principio, siempre continúa.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase">
            <summary>
            Representa cada lado de una partición.     
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.Owner">
            <summary>
            Partición a la cual pertenece el "lado".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.V0">
            <summary>
            Vértice tridimensional correspondiente al techo del portal.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.V1">
            <summary>
            Vértice tridimensional correspondiente al techo del portal.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.V2">
            <summary>
            Vértice tridimensional correspondiente al piso de la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.V3">
            <summary>
            Vértice tridimensional correspondiente al piso de la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.sector">
            <summary>
            Sector al que pertenece la partición propietaria de este "lado".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.handler">
            <summary>
            Objeto utilizado para delegar ciertos comportamientos comunes del panel.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.D0">
            <summary>
            VérticeS bidimensionales que describen el portal.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.D1">
            <summary>
            VérticeS bidimensionales que describen el portal.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.D2">
            <summary>
            VérticeS bidimensionales que describen el portal.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.D3">
            <summary>
            VérticeS bidimensionales que describen el portal.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,Kriptok.Drawing.Vertex2,Kriptok.Drawing.Vertex2,Kriptok.Regions.Partitioned.Wld.Vertices.WldTopVertex,Kriptok.Regions.Partitioned.Wld.Vertices.WldTopVertex,Kriptok.Regions.Partitioned.Wld.Vertices.WldBottomVertex,Kriptok.Regions.Partitioned.Wld.Vertices.WldBottomVertex)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.SetPartitionTo(Kriptok.Regions.Partitioned.Wld.Vertices.WldVertexCollection,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition)">
            <summary>
            Asigna la partición a la cual da este lado.
            
            Sólo requiere implementación en "lados portales".
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.GeneratePanels(Kriptok.Mapping.Partitioned.Wld.WldPartitionSideX,Kriptok.Mapping.ITexset{Kriptok.Views.Shapes.ISampleTexture})">
            <summary>
            Crea los paneles del lado.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.RenderFirst(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition)">
            <summary>
            Renderiza el "lado" en la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.RenderRecursive(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext)">
            <summary>
            Renderiza el "lado" en la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.Render(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext,Kriptok.Drawing.Bound)">
            <summary>
            Renderiza el "lado" en la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.RenderSide(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext,Kriptok.Drawing.Bound)">
            <summary>
            Renderiza el "lado" en la pantalla, cuando no da a ninguna partición.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.RenderFloorAndCeiling(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext,Kriptok.Drawing.Bound)">
            <summary>
            Renderiza el piso y el techo de la partición.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.PartitionContains(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition@)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.IntersectionWithPlane(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.Intersects(Kriptok.Entities.Wld.IWldEntity,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,System.Int32,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.BoundF@,Kriptok.Drawing.Algebra.Line2D@)">
            <summary>
            Indica si este lado intersecta con el segmento definido por los dos vectores indicados por parámetro.
            
            En el caso de intersectar, el punto de intersección es devuelto en la variable de salida.
            </summary>        
            <returns>Devuelve <see cref="!:true"/> si ha encontrado una intersección,
            o <see cref="!:false"/> en caso contrario.
            
            En caso de que la intersección sea con un lado que de a otra partición, el algoritmo llamará
            recursivamente a las siguientes particiones hasta encontrar una intersección definitiva (donde ya el
            segmento no intersecta con ningún "lado", o bien intersecta con una pared (lado que no a a otra partición).
            </returns>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.IntersectNextPartition(Kriptok.Entities.Wld.IWldEntity,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.BoundF@,Kriptok.Drawing.Algebra.Line2D@)">
            <summary>
            Dado el segmento definido por el par de vértices indicados por parámetro, y la intersección
            encontrada, este método permite continuar con la búsqueda de la intersección contra una pared,
            o bien con un obstáculo que no pueda ser sorteado.
            </summary>                
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.FindPartition(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,System.Int32,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Busca la partición que contiene la coordenada indicada por parámetro, siguiendo la línea
            delimitada por el segmento que se indica por parámetro.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.FindNextPartition(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Dado el segmento definido por el par de vértices indicados por parámetro, 
            este método permite continuar con la búsqueda de la siguiente partición
            en línea recta.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.FindNextPartition(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,System.Int32,Kriptok.Regions.Pseudo3D.FindPartitionContext)">
            <summary>
            Busca la partición que contiene la coordenada indicada por parámetro, 
            por proximidad.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldPartitionSideBase.ContinueRayIntersection(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Ray3D)">
            <summary>
            Indica si debe continuar por este lado la evaluación de intersección con un "rayo".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldVerticalPanelBase.Sector">
            <summary>
            Sector al que pertenece el panel.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldVerticalPanelBase.yBuffer">
            <summary>
            Buffer de la vista principal, utilizado para no redibujar líneas verticales
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldVerticalPanelBase.Kriptok#Regions#Pseudo3D#Partitioned#Wld#IWldVerticalPanel#Render(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext)">
            <summary>
            Renderiza la pared en pantalla. Devuelve un valor booleando indicado si se dibujó o no.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalWalls">
            <summary>
            Representa un lado de partición que puede tener un portal y paneles arriba o abajo.
                         
              T   -> 0--------1
                     |   TOP  |
              PT1 -> 0--------1
                     |        |
                     | PORTAL |
                     |        |
              PT2 -> 0--------1
                     | BOTTOM |
              B   -> 0--------1
            
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalWalls.sector">
            <summary>
            Sector al que pertenece la partición que tiene este "lado".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalWalls.sectorTo">
            <summary>
            Sector al cual comunica el portal.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalWalls.topPanel">
            <summary>
            Pared superior.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalWalls.bottomPanel">
            <summary>
            Pared inferior.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalWalls.IsPortalClosed">
            <summary>
            Indica si el portal hacia la siguiente partición está abierto.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalWalls.ClipPortalBounds(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext,Kriptok.Drawing.BoundF2@,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@,Kriptok.Drawing.Algebra.Vector2F@)">
            <summary>
            Recalcula los límites visibles del portal, utilizando los vértices
            bidimencionales para cortar contra los límites de la pantalla, de modo
            de saber si hay regiones del portal que quedan ocultas.
            
            Por ejemplo, si la parte superior de un portal cruza el borde inferior
            de la pantalla, el ancho del triángulo que no está visible, no debe
            ser tomado en cuenta como parte del portal.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalWalls.DefineIntersection">
            <summary>
            Define si la intersección encontrada con este lado es "definitiva", o bien debe 
            continuar evaluando intersecciones en las siguientes particiones.
            </summary>       
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalWalls.IntersectNextPartition(Kriptok.Entities.Wld.IWldEntity,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.BoundF@,Kriptok.Drawing.Algebra.Line2D@)">
            <summary>
            Dado el segmento definido por el par de vértices indicados por parámetro, y la intersección
            encontrada, este método permite continuar con la búsqueda de la intersección contra una pared,
            o bien con un obstáculo que no pueda ser sorteado.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalWalls.ValidatePartitionHeight(Kriptok.Entities.Wld.IWldEntity,Kriptok.Drawing.BoundF,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector)">
            <summary>
            Valida si la entidad puede "entrar" a la partición indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalWalls.AppendSideToContext(Kriptok.Regions.Partitioned.Wld.WldCollisionContext,Kriptok.Drawing.Algebra.Segment2D,System.Int32)">
            <summary>
            Indica si tiene que agregar la pared al contexto de colisión.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSidePortalWalls.ContinueRayIntersection(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Indica si debe continuar por este lado la evaluación de intersección con un "rayo".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSideWall.owner">
            <summary>
            Partición a la que partenece esta pared.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSideWall.fullPanel">
            <summary>
            La vista que se renderiza con este lado.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSideWall.RenderSide(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext,Kriptok.Drawing.Bound)">
            <summary>
            Renderiza el "lado" en la pantalla, cuando no da a ninguna partición.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSideWall.PartitionContains(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition@)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSideWall.Intersects(System.Int32,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Line2D@)">
            <summary>
            Encuentra la intersección entre este lado, y el segmento definido por los dos vértices
            indicados por parámetro.
            </summary>
            <returns>Devuelve <see cref="!:true"/>, si ha encontrado la intersección, y 
            <see cref="!:false"/> de lo contrario.</returns>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSideWall.IntersectNextPartition(Kriptok.Entities.Wld.IWldEntity,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.BoundF@,Kriptok.Drawing.Algebra.Line2D@)">
            <summary>
            Dado el segmento definido por el par de vértices indicados por parámetro, y la intersección
            encontrada, este método permite continuar con la búsqueda de la intersección contra una pared,
            o bien con un obstáculo que no pueda ser sorteado.
            </summary> 
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSideWall.FindNextPartition(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Dado el segmento definido por el par de vértices indicados por parámetro, 
            este método permite continuar con la búsqueda de la siguiente partición
            en línea recta.      
            </summary>
            <returns>Devuelve la partición a la que pertenece esta pared. Es el límite de la búsqueda.</returns>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSideWall.FindNextPartition(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,System.Int32,Kriptok.Regions.Pseudo3D.FindPartitionContext)">
            <summary>
            Dado el segmento definido por el par de vértices indicados por parámetro, 
            este método permite continuar con la búsqueda de la siguiente partición por proximidad.
            
            Como se trata de una pared, no tengo partición para continuar chequeando.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSideWall.AppendSideToContext(Kriptok.Regions.Partitioned.Wld.WldCollisionContext,Kriptok.Drawing.Algebra.Segment2D,System.Int32)">
            <summary>
            Indica si tiene que agregar la pared al contexto de colisión.
            
            Se agrega siempre porque no es un portal.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.Sides.WldSideWall.ContinueRayIntersection(Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Ray3D)">
            <summary>
            Indica si debe continuar por este lado la evaluación de intersección con un "rayo".
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldColorFilter.NoEffect">
            <summary>
            Siempre tiene un efecto, aunque la neblina no le afecte.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext">
            <summary>
            Contexto de renderización de entornos pseudo 3D tipo Doom.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext.defaultLightning">
            <summary>
            Copia de seguridad de la iluminación del ambiente, por si se modifica durante la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext.renderQueue">
            <summary>
            Partición a partir de la cual empieza la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext.floorShade">
            <summary>
            Incidencia de la luz sobre los "pisos".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext.ceilingShade">
            <summary>
            Incidencia de la luz sobre los "techos".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext.colorTransformation">
            <summary>
            Transformación de color (neblina).
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext.YBuffer">
            <summary>
            Y-Buffer asociado a la vista.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext.DisableFog">
            <summary>
            Desactiva momentáneamente el efecto de neblina.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext.SetSector(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector)">
            <summary>
            Establece el sector del cuál se deben tomar las propiedades para aplicar filtros
            de color.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext.NoFog">
            <summary>
            Indica si no debe aplicar filtros de color según neblina.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext.GetAmbientColorFilter">
            <summary>
            Obtiene el filtrode color que se está utilizando en este momento.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext.Render(Kriptok.Regions.Pseudo3D.Partitioned.Base.RenderizableHandler[])">
            <summary>
            Renderiza el entorno a partir de la partición actual.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext.ExcludeFromTop(System.Int32,System.Int32)">
            <summary>
            Excluye del Y-Buffer todo lo que está por arriba del valor Y, de la columna X.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext.ExcludeFromBottom(System.Int32,System.Int32)">
            <summary>
            Excluye del Y-Buffer todo lo que está por debajo del valor Y, de la columna X.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext">
            <summary>
            Contexto de renderiación de una partición de Modo 8.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext.yBuffer">
            <summary>
            Buffer que define desde/hasta se deben renderizar las columnas verticales.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext,Kriptok.Drawing.Bound2,Kriptok.Regions.Pseudo3D.Partitioned.Base.RenderizableHandler[],System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext"/>.
            </summary>
            <param name="context">Contexto de renderización actual.</param>
            <param name="bounds">Ventana del contexto padre.</param> 
            <param name="renderizables">Lista de vistas que va a dibujar el contexto padre.</param>        
            <param name="renderizablesLocation">Valor entero que indica en qué posición del array de vistas a renderizar estoy.</param>        
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext.Context">
            <summary>
            Contexto propietario del contexto actual, y de la vista en general.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext.Clone(Kriptok.Drawing.Bound2)">
            <summary>
            Genera un nuevo contexto restringido al tamaño de la ventana indicada
            por parámetro.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext.RegionHeight">
            <summary>
            Alto de la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext.GetMinBufferValueFromBottom(Kriptok.Drawing.Bound)">
            <summary>
            Obtiene el menor valor del buffer (o el más alto, si se piensa como altura de abajo
            para arriba), entre los límites indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext.GetMaxBufferValueFromTop(Kriptok.Drawing.Bound)">
            <summary>
            Obtiene el mayor valor del buffer (o el más bajo, si se piensa como altura de arriba
            para abajo), entre los límites indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext.TryFill(Kriptok.Regions.Pseudo3D.Brushes.Base.IPseudo3DUInt32Brush,System.Int32,System.Int32,System.Int32)">
            <summary>
            Intenta renderizar una columna vertical utilizando la brocha indicada, pero
            limitando los límites de renderización a los comprendidos en el Y-Buffer.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext.IsWindowOpen(Kriptok.Drawing.BoundF2,Kriptok.Drawing.Bound2@)">
            <summary>
            Evalúa si la "ventana" indicada por parámetro al intersectarse con
            el área del contexto de renderización, queda "abierta", es decir, si hay
            algo para renderizar.
            
            El parámetro de salida es el área intersectada de las regiones.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldCamFinder">
            <summary>
            Esta clase se utiliza para tratar a la cámara como una entidad cuando
            se calcula la nueva posición de la cámara cuando esta se encuentra fuera del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldCamFinder.locationZ">
            <summary>
            Ubicación vertical de la cámara en el espacio.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldCamFinder.GetInstance(System.Single)">
            <summary>
            Obtiene una instancia genérica de esta clase.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldGraph">
            <summary>
            Grafo de sectores/particiones/lados de Mode 8.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldGraph.vertices">
            <summary>
            Colección con todos los vértices del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldGraph.graph">
            <summary>
            Grafo de particiones y conexiones para propagación de sonido y demás.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldGraph.Sectors">
            <summary>
            Sectores del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldGraph.sectorsById">
            <summary>
            Sectores del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldGraph.Partitions">
            <summary>
            Lista de particiones a dibujar. Es un array para poder se recorrido rápidamente.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldGraph.Vertices">
            <summary>
            Vértices de la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldGraph.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion,Kriptok.Mapping.Partitioned.Wld.WldMapX,Kriptok.Mapping.ITexset{Kriptok.Views.Shapes.ISampleTexture})">
            <summary>
            Devuelve una nueva instancia de <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldGraph"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldGraph.Update(Kriptok.Regions.Context.Base.IRenderBufferContext)">
            <summary>
            Aplica las transformaciones sobre los vértices tridimensionales
            para que puedan ser proyectados a la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldGraph.FindPartition(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la partición en la que se encuentra la coordenada indicada. O <see cref="!:null"/>
            de no encontrarse dentro de ninguna partición.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldGraph.FindPartition(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la partición en la que se encuentra la coordenada indicada,
            pero permite que se le especifique una "partición de partida" y una "coordenada de partida",
            para acelerar la búsqueda.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldGraph.Sector(System.Int32)">
            <summary>
            Obtiene el sector con el id indicado para modificación en el juego.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldGraph.GetPartitionGroups">
            <summary>
            Obtiene los grupos de particiones y sus correspondientes conexiones.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition">
            <summary>
            Representa un sector de un plano de Mode8.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.Id">
            <summary>          
            Los Ids de las particiones empiezan en cero para que sean fácilmente mapeables a un array y se reenumeran para no dejar lugares en blanco.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.Sector">
            <summary>
            Sector al que pertenece la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.V0">
            <summary>
            Vértices bidimensionales que compone la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.V1">
            <summary>
            Vértices bidimensionales que compone la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.V2">
            <summary>
            Vértices bidimensionales que compone la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.Side01">
            <summary>
            Lados de la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.Side12">
            <summary>
            Lados de la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.Side20">
            <summary>
            Lados de la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.VB0">
            <summary>
            Vértices tridimensionales correspondiente al piso de la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.VB1">
            <summary>
            Vértices tridimensionales correspondiente al piso de la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.VB2">
            <summary>
            Vértices tridimensionales correspondiente al piso de la partición.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.container">
            <summary>
            Contendor triangular para calcular si la partición contiene vértices.
            
            No debe ser nunca "readonly" ya que eventualmente se van a poder mover los vértices,
            y al ser un struct, no se podría modificar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.adjacentPartitions">
            <summary>
            Lista de particiones con las que está en contacto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.PostProcessing(Kriptok.Mapping.Partitioned.Wld.WldPartitionX,Kriptok.Mapping.ITexset{Kriptok.Views.Shapes.ISampleTexture},System.Collections.Generic.IDictionary{Kriptok.Drawing.Vertex2,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition[]})">
            <summary>
            Ejecuta código después de construir el árbol de particiones.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.Contains(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si la partición contiene el punto indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.GetFloorHeight(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la altura del "piso" para la coordenada indicada por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.Get2DBounds">
            <summary>
            Obtiene los límites en el plano 2D de la partición.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.FloorHeight">
            <summary>
            Altura del piso del sector al que pertenece la partición.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.CeilingHeight">
            <summary>
            Altura del techo del sector al que pertenece la partición.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.IsInvalid">
            <summary>
            Indica si la partición está detrás de la camara.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.RenderFirst(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRenderContext,Kriptok.Regions.Pseudo3D.Partitioned.Base.RenderizableHandler[],Kriptok.Drawing.Bound2)">
            <summary>
            Renderiza la partición y las particiones subsiguientes recorriendo en forma de árbol.
            </summary>          
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.Render(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartitionContext,System.Action)">
            <summary>
            Renderiza la partición.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.CheckAdjacentPartitions(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition@)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.IntersectNextPartition(Kriptok.Entities.Wld.IWldEntity,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.BoundF@,Kriptok.Drawing.Algebra.Line2D@)">
            <summary>
            Detecta intersecciones recursivamente entre los vértices indicados por parámetro
            y las paredes de los mapas.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.ClampZBounds(Kriptok.Drawing.BoundF)">
            <summary>
            Actualiza los límites verticales de movimiento.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.FindPartition(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Busca la partición que contiene la coordenada indicada por parámetro, siguiendo la línea
            delimitada por el segmento que se indica por parámetro.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.FindNextPartition(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Busca la partición que contiene la coordenada indicada por parámetro, siguiendo la línea
            delimitada por el segmento que se indica por parámetro.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.FindPartition(Kriptok.Regions.Pseudo3D.FindPartitionContext)">
            <summary>
            Busca la partición que contiene la coordenada indicada por parámetro
            por proximidad.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.FindNextPartition(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition,Kriptok.Regions.Pseudo3D.FindPartitionContext)">
            <summary>
            Busca la partición que contiene la coordenada indicada por parámetro
            por proximidad.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.FindNearWalls(Kriptok.Regions.Partitioned.Wld.WldCollisionContext)">
            <summary>
            Algoritmo recursivo que se encarga de buscar las paredes "cercanas" para validar
            la ubicación de un objeto luego de moverse.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.FindNearWalls(Kriptok.Regions.Partitioned.Wld.WldCollisionContext,System.Int32)">
            <summary>
            Detecta intersecciones recursivamente entre los vértices indicados por parámetro
            y las paredes de los mapas.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.Intersects(Kriptok.Drawing.Shapes.Circle)">
            <summary>
            Indica si la partición se intersecta con el círculo 
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.GetCollisionVertex(Kriptok.Drawing.Algebra.Ray3D)">
            <summary>
            Obtiene el punto de colisión entre el rayo y la primer pared/piso que encuentre.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.GetCollisionVertex(System.Int32,Kriptok.Drawing.Algebra.Ray3D)">
            <summary>
            Obtiene el punto de colisión entre el rayo y la primer pared/piso que encuentre.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.FindSidesToSector(System.Int32)">
            <summary>
            Obtiene todos los "lados" que conectan con el sector indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.GetFloorPolygonView">
            <summary>
            Obtiene un polígono tridimencional construido con los vértices del piso de esta partición.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.GetCeilingPolygonView">
            <summary>
            Obtiene un polígono tridimencional construido con los vértices del techo de esta partición.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.GetSidesToOtherSectors">
            <summary>
            Obtiene los lados de la partición que dan a otro sector.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition.GetSidesToOtherPartitions">
            <summary>
            Obtiene los lados de la partición que dan a otro sector.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector">
            <summary>
            Sector comprendido de múltiples particiones del mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.MaxHeight">
            <summary>
            Máxima altura del techo que pueden tener los sectores.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.MinHeight">
            <summary>
            Máxima altura del piso que pueden tener los sectores.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.MaxScale">
            <summary>
            Máximo escala de renderización de las texturas.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.MinScale">
            <summary>
            Mínima escala de renderización de las texturas.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.partitions">
            <summary>
            Lista de particiones que componen el sector.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.Owner">
            <summary>
            Objeto central propietario de todas las vistas.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.Id">
            <summary>
            Identificador numérico del sector.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.DisableLightning">
            <summary>
            Indica si al renderizar este sector no debe tomarse en cuenta la
            incidencia de la luz.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.FogDisabled">
            <summary>
            Indica si al renderizar este sector no debe tomarse en cuenta la neblina.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.Color">
            <summary>
            Indica si se debe aplicar un filtro de color al sector.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.Floor">
            <summary>
            "Piso" del sector.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.Ceiling">
            <summary>
            "Techo" del sector.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.KeyIdentifier">
            <summary>
            Clave identificatoria del sector, leída de la configuración.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.BreakPartitionGroupGraph">
            <summary>
            Indica si al construir el árbol de particiones interconectadas, este sector debe romper la recursividad y separar áreas.
            El ejemplo más intuitivo de uso sería si se trata de un sector/puerta que debe conectar/desconectar regiones del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.FloorHeight">
            <summary>
            Establece la altura del plano del piso del sector.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.CeilingHeight">
            <summary>
            Actualiza la altura del plano del techo del sector.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.InvalidHeights">
            <summary>
            Indica si el sector está completamente cerrado.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.AddPartition(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition)">
            <summary>
            Agrega una partición al sector.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.BottomTextureLocation">
            <summary>
            Punto central de renderización de la textura del piso.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.TopTextureLocation">
            <summary>
            Punto central de renderización de la textura del techo.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.Vertices2D">
            <summary>
            Obtiene los vértices superiores de todas las particiones que componen 
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.FindSidesToSector(System.Int32)">
            <summary>
            Obtiene todos los "lados" que conectan con el sector indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.GetFloorTriangles">
            <summary>
            Obtiene una lista de polígonos tridimencionales correspondientes 
            con los pisos de las particiones del sector.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.GetCeilingTriangles">
            <summary>
            Obtiene una lista de polígonos tridimencionales correspondientes 
            con los techos de las particiones del sector.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.GetSidesToOtherSectors">
            <summary>
            Obtiene una lista de los lados que dan hacia otros sectores.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.GetPartitions">
            <summary>
            Obtiene todas las particiones del sector.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.ContainsPartitionId(System.Int32)">
            <summary>
            Indica si el sector tiene la partición indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector.GetPartitionIds">
            <summary>
            Obtiene una lista de los Ids de las particiones que componen el sector.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSectorPlane.Height">
            <summary>
            Altura del plano.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSectorPlane.TextureId">
            <summary>
            Id de la textura del plano.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSectorPlane.TextureLocation">
            <summary>
            Traslación de la textura.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSectorPlane.TextureScale">
            <summary>
            Escalamiento de la textura.
            
            La escala no se puede cambiar durante el juego porque siempre toma como centro
            la coordenada (0, 0), no se puede "centrar" en el medio del sector que está afectando.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSectorPlane.#ctor(Kriptok.Mapping.Partitioned.Wld.WldSurfaceX)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSectorPlaneTextured"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSectorPlaneTextured.texture">
            <summary>
            Textura para renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSectorPlaneTextured.#ctor(Kriptok.Mapping.Partitioned.Wld.WldSurfaceX,Kriptok.Views.Shapes.ISampleTexture)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSectorPlaneTextured"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph">
            <summary>
            Contiene la información de un grafo de grupos de particiones y sus conexiones.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Nodes">
            <summary>
            Lista de grupos de particiones.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Edges">
            <summary>
            Lista de conexiones (bidireccionales) entre grupos.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.GetAllPartitionIds">
            <summary>
            Devuelve una lista de todos los ids de las particiones.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.#ctor(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition[])">
            <summary>
            Realiza un agrupamiento de las particiones que están conectadas, para dividir el mapa en sub-secciones,
            pero sólo entre las particiones de los sectores indicados por parámetro.
            
            Esto puede ser utilizado para definir qué sectores están separados por puertas.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.GetConnectedNodeIds(System.Int32)">
            <summary>
            Obtiene los Ids de los nodos conectados al nodo indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.GetConnectedNodes(System.Int32)">
            <summary>
            Obtiene los Ids de los nodos conectados al nodo indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.GetNodesArray">
            <summary>
            Crea un mapa (basado en posiciones del array) entre los Ids de las particiones y el resultado de la función indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Connection.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Node">
            <summary>
            Representa un grupo de sectores del mapa WLD.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Node.Id">
            <summary>
            El Id del grupo es el identificador de la primera partición.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Node.GetPartitionIds">
            <summary>
            Obtiene los Ids de las particiones agrupadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Node.Contains(System.Int32)">
            <summary>
            Indica si este grupo contiene la particion indicada por parámetro.
            </summary>            
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Node.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Node.GetMaxPartitionId">
            <summary>
            Obtiene el máximo Id de las particiones.
            </summary>            
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Node.Tag">
            <summary>
            Referencia a un objeto que puede ser utilizado libremente por el juego que implemente el mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Edge">
            <summary>
            Conexiones entre grupos de particiones.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Edge.Node1Id">
            <summary>
            Id de uno de los nodos que conecta la arista.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Edge.Node2Id">
            <summary>
            Id de uno de los nodos que conecta la arista.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Edge.NodeIds">
            <summary>
            Obtiene los dos ids de los nodos que conecta esta arista.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Edge.Contains(System.Int32)">
            <summary>
            Indica si la arista conecta el nodo indicado por parámetro.
            </summary>            
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Partitioned.WldPartitionGroupGraph.Edge.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DSurfaceRegion`1.GetTerrainHeight(Kriptok.Drawing.Algebra.Vector2F)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DSurfaceRegionY0`1.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DSurfaceRegionY0`1.Pseudo3DSurfaceY0Row.GetLocation2D">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DSurfaceRegionY0`1.Pseudo3DSurfaceY0Row.GetLocationZ">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DSurfaceRegionY0`1.Pseudo3DSurfaceY0Row.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.Pseudo3DSurfaceRegionY0`1.Pseudo3DSurfaceY0Row.GetDrawOrder">
            <inheritdoc/>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceBrush.halfWidthFovRelativeHeight">
            <summary>
            Valor para optimización de cálculos.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceBrush.#ctor(Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceContext,Kriptok.Mapping.VoxelSpace.VoxelTerrain,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="terrain"></param>
            <param name="scale"></param>
            <param name="cameraAngleSin"></param>
            <param name="calculatedYShearY"></param>
            <param name="terrainHeight">Obtiene la altura relativa en la que debe inferirse el mapa
            al momento de renderizar.
            
            En principio es siempre 0, pero si se aplicara curvatura,
            habría que recalcular este valor para tomarla en cuenta
            y que no se generen "huecos" a la distancia.</param>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceBrush.GetDecrement">
            <summary>
            Obtiene el decremento a aplicar a la brocha durante la renderización.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceContext.tiltAngleSin">
            <summary>
            Seno precalculado del ángulo de inclinación de la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceContext.fastShearingMatrix">
            <summary>
            Matriz rápida.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceContext.cameraZ">
            <summary>
            Dato utilizado para cálculos.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceContext.RegionWidth">
            <summary>
            Ancho de la región.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceContext.YBuffer">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceContext.HorizonY">
            <summary>
            Altura del horizonte. Toma en cuenta curvatura.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceContext.OffsetY">
            <summary>
            Obtiene el valor correspondiente al elemento de la matriz que indica
            cuánto es el máximo que se desplaza verticalmente la pantalla 
            dado el ángulo de Shearing.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceContext.CreateBrush(Kriptok.Mapping.VoxelSpace.VoxelTerrain,System.Single)">
            <summary>
            Crea una brocha de voxels para los parámetros indicados.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceContext.ProjectColumn(System.Single,System.Single)">
            <summary>
            Calcula sólo la proyección de la coordenada Y del punto.        
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceContext.Shear(Kriptok.Drawing.BoundF2)">
            <summary>
            Aplica la transformación 2D del contexto al bounding-box de la entidad.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceContext.ApplyShear">
            <summary>
            Aplica la transformación de shearing al objeto graphics.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceContext.GetTerrainHeight">
            <summary>
            Esta fórmula es una improvisación. Parece resolver el problema de que el terreno
            desaparezca cuando se baja mucho el Y-Shearing.
            </summary>            
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceShearingBackground">
            <summary>
            Fondo scrolleable que contempla el shearing del modo, así como
            un horizonte mucho mas bajo para contemplar la curvatura.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceCurvedRegion">
            <summary>
            Plano básico de un terreno Voxel.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceCurvedRegion.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera,System.Single)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceCurvedRegion.CurvedVoxelSpaceContext.curvatureMultiplier">
            <summary>
            Utilizado para reducir la cantida de chequeos necesarios 
            a la hora de proyectar vértices.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceCurvedRegion.CurvedVoxelSpaceContext.horizonY">
            <summary>
            Altura del horizonte considerando la curvatura.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceCurvedRegion.CurvedVoxelSpaceContext.GetTerrainHeight">
            <summary>
            Esta fórmula es una improvisación. Parece resolver el problema de que el terreno
            desaparezca cuando se baja mucho el Y-Shearing.
            </summary>            
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceCurvedRegion.CurvedVoxelSpaceContext.GetCurveHorizonY">
            <summary>
            Obtiene la altura del horizonte sobre el eje Y de la pantalla.
            
            Nota importante: 
                Se asume que la altura del terreno en los puntos de mínima altura
                se encuentra en el plano Z = 0 (o Y = 0, en el entorno 3D).
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceCurvedRegion.CurvedVoxelSpaceContext.HorizonY">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion">
            <summary>
            Plano básico de un terreno Voxel.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.YBuffer">
            <summary>
            Buffer de columnas para la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.startY">
            <summary>
            Fila Y desde la que se empieza a renderizar.
            Por lo general con un valor MUY por encima del límite vertical de la pantalla.        
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.voxelTerrain">
            <summary>
            Terreno principal.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.HalfRegionWidth">
            <summary>
            Media pantalla verticalmente, precalculada para optimizar cálculos.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.tiltAngle">
            <summary>
            Ángulo de rotación de la cámara sobre el eje de profundidad.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.tiltAngleSin">
            <summary>
            Seno el ángulo de ladeo de la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.regionWidth">
            <summary>
            Dimensiones de la región de renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.regionHeight">
            <summary>
            Dimensiones de la región de renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.maxHeight">
            <summary>
            Máxima altura del terreno.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.inverseTextureScale">
            <summary>
            Inversa de la escala a aplicar a la textura.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.#ctor(System.Drawing.Rectangle,Kriptok.Mapping.VoxelSpace.VoxelTerrain)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.CreateYBuffer(System.Drawing.Size)">
            <summary>
            Crea el Y-Buffer a utilizar.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.TextureScale">
            <summary>
            Escala a aplicar a la brocha de renderización del terreno.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.TiltAngle">
            <summary>
            Rotación de la cámara sobre el eje X. Sólo acepta valores entre:
            <see cref="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.minTilt"/> y <see cref="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.maxTilt"/>.        
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.NewRenderContext(System.Drawing.Graphics,Kriptok.Core.Camera,System.Single)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.SampleHeight(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la altura del terreno en las coordenadas indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRegion.GetBoundsF">
            <inheritdoc/>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRenderizableArray.context">
            <summary>
            Contexto de renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRenderizableArray.renderizables">
            <summary>
            Lista de objetos a renderizar este frame.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRenderizableArray.filteredRenderizables">
            <summary>
            Lista de renderizables filtrados a renderizar al final.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRenderizableArray.NextRenderizableDistance">
            <summary>
            Es la distancia hasta el próximo renderizable.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRenderizableArray.nextRenderizable">
            <summary>
            Lista de objetos a renderizar este frame.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRenderizableArray.nextRenderizablePosition">
            <summary>
            Posición del próximo renderizable a evaluar en el array <see cref="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRenderizableArray.renderizables"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRenderizableArray.SetRenderDistance(System.Single)">
            <summary>
            Establece la distancia de renderización.
            </summary>
            <param name="nextDistance">La distancia a la cual se va a renderizar
            esta pasada. Pero antes de renderizar.</param>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRenderizableArray.AddCurrentRenderizable">
            <summary>
            Chequea si tiene que agregar el renderizable que está actualmente
            cargado en el buffer para renderizar, y lo agrega.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VBRenderizable.x0">
            <summary>
            Coordenada X donde empieza el buffer.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VBRenderizable.y1">
            <summary>
            Máximo valor Y calculado para el bounding-box del renderizable.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.VoxelSpace.VBRenderizable.bufferValues">
            <summary>
            Estado del buffer actual.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRenderizable.GetDrawOrder">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.VoxelSpace.VoxelSpaceRenderizable.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <summary>
            La distancia a la cámara sobre el eje de profundidad.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Pseudo3D.PlotTexturedHorizontalTriView">
            <summary>
            Esta clase algún día se podría definir como abstracta y eliminar el <see cref="!:PlotTexturedHorizontalTriView.Render(Graphics, RegionBase)"/>
            ya que no aporta nada más que como test.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.PlotTexturedHorizontalTriView.swapped">
            <summary>
            No exactamente la funcionalidad del swappeo de caras, pero bastante parecido.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.PlotTexturedHorizontalTriView.inverseTextureScale">
            <summary>
            Inversa de la escala para aplicar a la textura.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Pseudo3D.PlotTexturedHorizontalTriView.texture">
            <summary>
            Textura a utilizar para rellenar el polígono.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.PlotTexturedHorizontalTriView.TextureScale">
            <summary>
            Escala para aplicar a la textura.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Pseudo3D.PlotTexturedHorizontalTriView.IsInvalid">
            <summary>
            Indica si la es o no "inválida", es decir, si está completamente detrás
            de la cámara.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Pseudo3D.PlotTexturedHorizontalTriView.ScaleZ">
            <summary>
            Se utiliza para ahorrar algunos cálculos, indicando si debe o no escalara verticalmente
            los vértices.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Scroll.Axonometric.IBufferedAxonometricRegion">
            <summary>
            Interfaz para vistas axonométricas con back-buffer.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.IBufferedAxonometricRegion.RasterColumn(System.UInt32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Renderiza una línea vertical de un color sólido en las coordenadas indicadas.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Scroll.Axonometric.AxonometricBufferedRegion">
            <summary>
            Interfaz axonométrica con back-buffer.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricBufferedRegion.#ctor(System.Drawing.Rectangle)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.Axonometric.AxonometricBufferedRegion"/>.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.AxonometricBufferedRegion.Scale">
            <summary>
            Escala a aplicar antes de rotar el plano 2D.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.AxonometricBufferedRegion.ReScale">
            <summary>
            Escala a aplicar después de rotar el plano 2D.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricBufferedRegion.GetReScale">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricBufferedRegion.GetScale">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricBufferedRegion.RasterColumn(System.UInt32,System.Int32,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricBufferedRegion.RasterColumn(System.UInt32,System.Int32,System.UInt32*)">
            <summary>
            Rasteriza una columna de pixels según los parámetros indicados.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricBufferedRegion.Plot(System.UInt32*,System.UInt32)">
            <summary>
            Pone el pixel indicado del color indicado, pero realiza las validaciones
            necesarias para saber que todo está funcionando perfectamente.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricRegionBase">
            <summary>
            Clase base para modos de scroll que no necesariamente usen layers para renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricRegionBase.#ctor(System.Drawing.Rectangle)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricRegionBase"/>.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricRegionBase.CameraHeight">
            <summary>
            Altura de la cámara en el eje Z.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricRegionBase.Rotation">
            <summary>
            Ángulo de la cámara (en radianes).
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricRegionBase.NewRenderContext(Kriptok.Drawing.Algebra.Vector2F,System.Drawing.Graphics)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricRegionBase.GetGdipRotationAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            </summary>      
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricRegionBase.GetDirectionAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo en que el objeto está "mirando" o "apuntando" en ambientes bidimensinoales.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricRegionBase.GetCameraHeight">
            <summary>
            Obtiene la "altura" de la cámara en el entorno axonométrico.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricRegionBase.RotationWithMouseHorizontally(System.Int32)">
            <summary>
            Obtiene un valor para rotar la cámara horizontalmente. Y luego la vuelve a centrar
            utilizando el valor indicado por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Scroll.Axonometric.Base.IAxonometricScroll">
            <summary>
            Representa un modo 
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.Base.IAxonometricScroll.GetCameraHeight">
            <summary>
            Obtiene la "altura" de la cámara en el entorno axonométrico.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricShapeViewBase.GetPriority(Kriptok.Regions.Context.Base.IRenderBufferContext)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricShapeViewBase.IsVisible">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricShapeViewBase.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricShapeViewBase.GetDrawOrder">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricShapeViewBase.GetLocation2D">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.Base.AxonometricShapeViewBase.GetLocationZ">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Scroll.Axonometric.AxonometricRegionLayered">
            <summary>
            Modo de scroll con perspectiva y transformaciones axonometricas.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricRegionLayered.#ctor(System.Drawing.Rectangle,Kriptok.Regions.Scroll.Base.ScrollLayerBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.Axonometric.AxonometricRegionLayered"/>.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.AxonometricRegionLayered.Rotation">
            <summary>
            Ángulo de rotación de la cámara sobre el eje Z.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.AxonometricRegionLayered.CameraHeight">
            <summary>
            Altura de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricRegionLayered.NewRenderContext(System.Drawing.Graphics,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricRegionLayered.GetGdipRotationAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            </summary>  
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricRegionLayered.GetDirectionAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo en que el objeto está "mirando" o "apuntando" en ambientes bidimensinoales.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricRegionLayered.GetCameraHeight">
            <summary>
            Obtiene la "altura" de la cámara en el entorno axonométrico.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Scroll.Axonometric.AxonometricRegionTiled">
            <summary>
            Modo de renderización axonométrica basado en un mapa de tiles, pero que no se puede rotar ni transformar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricRegionTiled.GetCameraHeight">
            <summary>
            Obtiene la "altura" de la cámara en el entorno axonométrico.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricRegionTiled.NewRenderContext(System.Drawing.Graphics,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricRegionTiled.GetGdipRotationAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricRegionTiled.GetDirectionAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo en que el objeto está "mirando" o "apuntando" en ambientes bidimensinoales.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.AxonometricMapGridGenerator.views">
            <summary>
            Colección donde se almacenan las vistas genreadas durante la creción del mapa.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Scroll.Axonometric.AxonometricMapGridGenerator.Views">
            <summary>
            Vistas generadas.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Scroll.Axonometric.AxonometricMapHorizontalView">
            <summary>
            Cuadrilátero horizontal para modos axonométricas.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.AxonometricMapHorizontalView.owner">
            <summary>
            Vista principal a la que pertenece.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.AxonometricMapSpriteView.AxonometricSpriteViewOwner.GetLocationZ">
            <inheritdoc/>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.AxonometricMapVerticalView.owner">
            <summary>
            Vista principal a la que pertenece.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRenderizableArray.context">
            <summary>
            Contexto de renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRenderizableArray.renderizables">
            <summary>
            Lista de objetos a renderizar este frame.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRenderizableArray.filteredRenderizables">
            <summary>
            Lista de renderizables filtrados a renderizar al final.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRenderizableArray.NextRenderizableDistance">
            <summary>
            Es la distancia hasta el próximo renderizable.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRenderizableArray.nextRenderizable">
            <summary>
            Lista de objetos a renderizar este frame.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRenderizableArray.nextRenderizablePosition">
            <summary>
            Posición del próximo renderizable a evaluar en el array <see cref="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRenderizableArray.renderizables"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRenderizableArray.SetRenderDistance(System.Single)">
            <summary>
            Establece la distancia de renderización.
            </summary>
            <param name="nextDistance">La distancia a la cual se va a renderizar
            esta pasada. Pero antes de renderizar.</param>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRenderizableArray.AddCurrentRenderizable">
            <summary>
            Chequea si tiene que agregar el renderizable que está actualmente
            cargado en el buffer para renderizar, y lo agrega.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric">
            <summary>
            Plano básico de un terreno Voxel.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric.YBuffer">
            <summary>
            Buffer de columnas para la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric.voxelTerrain">
            <summary>
            Terreno principal.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric.HalfRegionWidth">
            <summary>
            Media pantalla verticalmente, precalculada para optimizar cálculos.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric.tiltAngle">
            <summary>
            Ángulo de rotación de la cámara sobre el eje de profundidad.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric.tiltAngleSin">
            <summary>
            Seno el ángulo de ladeo de la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric.regionWidth">
            <summary>
            Dimensiones de la región a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric.regionHeight">
            <summary>
            Dimensiones de la región a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric.maxHeight">
            <summary>
            Máxima altura del terreno.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric.#ctor(System.Drawing.Rectangle,Kriptok.Mapping.VoxelSpace.VoxelTerrain)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric.CreateYBuffer(System.Drawing.Size)">
            <summary>
            Crea el Y-Buffer a utilizar.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric.TiltAngle">
            <summary>
            Rotación de la cámara sobre el eje X. Sólo acepta valores entre:
            <see cref="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric.minTilt"/> y <see cref="F:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric.maxTilt"/>.        
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric.SampleHeight(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la altura del terreno en las coordenadas indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.Axonometric.VoxelSpace.VoxelSpaceRegionAxonometric.GetBoundsF">
            <inheritdoc/>
        </member>
        <member name="F:Kriptok.Regions.Scroll.TransformedScrollScanlineBrush`1.x">
            <summary>
            Coordenada de la pantalla que se está leyendo.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.TransformedScrollScanlineBrush`1.Sample">
            <inheritdoc/>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Base.LayeredScrollRegionBase.MainLayer">
            <summary>
            Capa principal del modo Scroll, es necesario ya que muchos cálculos para las demás capas pueden
            depender de los cálculos de esta.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Base.LayeredScrollRegionBase.subLayers">
            <summary>
            Capas a recalcular (todas menos <see cref="F:Kriptok.Regions.Scroll.Base.LayeredScrollRegionBase.MainLayer"/>).
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Base.LayeredScrollRegionBase.allLayers">
            <summary>
            Capas que conforman el modo scroll.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.LayeredScrollRegionBase.GetReScale">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.LayeredScrollRegionBase.GetScale">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.LayeredScrollRegionBase.NewRenderContext(Kriptok.Drawing.Algebra.Vector2F,System.Drawing.Graphics)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.LayeredScrollRegionBase.NewRenderContext(System.Drawing.Graphics,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.LayeredScrollRegionBase.Render(Kriptok.Regions.Context.Base.ScrollRenderContextBase,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Renderiza todas las vistas de la región.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.LayeredScrollRegionBase.AddLayer``1(``0)">
            <summary>
            Agrega otra capa a la última capa agregada del modo scroll.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.LayeredScrollRegionBase.SortLayers">
            <summary>
            Ordena las capas según su prioridad.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Scroll.Base.IScrollTarget">
            <summary>
            Los objetos que implementan esta interfaz pueden ser utilizados para ubicar un plano de scroll.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Scroll.Base.ScrollRegionBase">
            <summary>
            Región scrolleable bidimencional.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Base.ScrollRegionBase.target">
            <summary>
            Objeto en el que se enfoca el plano de scroll.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.ScrollRegionBase.Render(Kriptok.Regions.Context.Base.ScrollRenderContextBase,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Renderiza todas las vistas de la región.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.ScrollRegionBase.NewRenderContext(Kriptok.Drawing.Algebra.Vector2F,System.Drawing.Graphics)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.ScrollRegionBase.SetTarget(Kriptok.Regions.Scroll.Base.IScrollTarget)">
            <summary>
            Permite establecer el proceso "cámara" o foco del plano de Scroll.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.ScrollRegionBase.SetTarget(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Permite establecer el proceso "cámara" o foco del plano de Scroll.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.ScrollRegionBase.Round(System.Single)">
            <summary>
            Esta funcionalidad es compartida en varios lados, por eso se aísla. No cambiar NUNCA.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.ScrollRegionBase.Round2(System.Single,System.Single)">
            <summary>
            Esta funcionalidad es compartida en varios lados, por eso se aísla. No cambiar NUNCA.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.ScrollRegionBase.GetGdipRotationAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            
            Rotación sobre el ángulo Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.ScrollRegionBase.GetDirectionAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo en que el objeto está "mirando" o "apuntando" en ambientes bidimensinoales.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Scroll.Base.GdipScrollLayerBase.Antialias">
            <summary>
            Esta propiedad le indica a la vista de Scroll que debe utilizar un objeto
            de tipo TextureBrush para dibujar el fondo. Esto genera un "smoothing" en la imagen,
            similar al que se puede ver cuando se utiliza un scroll infinito en alguna de las 
            direcciones.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.GdipScrollLayerBase.#ctor(Kriptok.Common.Resource,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.Base.GdipScrollLayerBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.GdipScrollLayerBase.#ctor(Kriptok.Drawing.FastBitmap,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.Base.GdipScrollLayerBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.GdipScrollLayerBase.#ctor(System.Drawing.Bitmap,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.Base.GdipScrollLayerBase"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Base.ScrollLayerBase.Owner">
            <summary>
            Modo de renderización al cual pertenece esta capa.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Base.ScrollLayerBase.Location">
            <summary>
            Modificadores de ubicación de renderizado.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Base.ScrollLayerBase.Scale">
            <summary>
            Dimensionamiento del plano de scroll.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Base.ScrollLayerBase.ReScale">
            <summary>
            Redimensionamiento del plano de scroll.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Base.ScrollLayerBase.infinite">
            <summary>
            Indica si el plano es infinito en alguno de sus ejes o en los dos.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Base.ScrollLayerBase.infiniteMultipliers">
            <summary>
            Valores por los cuales multiplicar el offset de las coordenadas 
            dependiendo de si debe scrollear horizontal o verticalmente.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Scroll.Base.ScrollLayerBase.Priority">
            <summary>
            Prioridad con la cual se debe dibujar.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Scroll.Base.ScrollLayerBase.Size">
            <summary>
            Obtiene el tamaño de la imagen o mapa utilizada para renderizar esta capa.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Base.ScrollLayerBase.Dispose">
            <summary>
            Limpia los recursos de la vista.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Scroll.Scroll3DRegion">
            <summary>
            Controlador principal que se encarga de manejar los planos de scroll cuando se encuentra en modo Scroll 3D.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Scroll3DRegion.InnerProjectionModifier">
            <summary>
            Inversa del modificador de la proyección.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.Scroll3DRegion.Rotation">
            <summary>
            Ángulo de rotación de la cámara.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Scroll.Scroll3DRegion.ProjectionModifier">
            <summary>
            Mutiplicador para modifijar la proyección 3D.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.Scroll3DRegion.NewRenderContext(System.Drawing.Graphics,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Scroll.TileScrollFixedRegion">
            <summary>
            Modo de Scroll que no puede ser rotado.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.TileScrollFixedRegion.NewRenderContext(System.Drawing.Graphics,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.TileScrollFixedRegion.FixedScrollContext.outOfScreenChecker">
            <summary>
            Utilizado para evaluar si un objeto está fuera de la pantalla.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Scroll.ScrollTarget">
            <summary>
            Objetivo por defecto para planos de scroll.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.ScrollTarget.#ctor(Kriptok.Entities.Base.EntityBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.ScrollTarget"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.ScrollTarget.GetLocation2D">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.GdipBrushScanlineScrollLayer.OnRendering(Kriptok.Regions.Context.Base.IRenderContext)">
            <summary>
            Permite ejecutar código antes de renderizar el siguiente frame.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Scroll.TiledScrollLayer">
            <summary>
            Esta vista es como una scroll view simple, pero optimizada. Por tanto,
            no permite transformaciones.
            
            Esta clase hay que mantenerla interna, ya que de lo contrario tal vez podría
            darse el caso de que se utilice en un modo de scroll que acepte rotaciones.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.TiledScrollLayer.tileCanvas">
            <summary>
            Lienzo donde se renderizarán los tiles.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.TiledScrollLayer.OnScanLine(System.Int32)">
            <summary>
            Se sellan todos los métodos que pudieran modificar el renderizado.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Scroll.TiledScrollLayer.TileAnimatedSpeed">
            <summary>
            Velocidad a la cual se deben actualizar los tiles animados del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.TiledScrollLayer.BlitTile(Kriptok.Mapping.Tiles.Base.ITile,System.Int32,System.Int32)">
            <summary>
            Dibuja un tile en el buffer de la vista.
            
            Definido a este nivel, ya que es el que tiene acceso al backBuffer.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.BufferedScrollLayerBase.#ctor(System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.BufferedScrollLayerBase"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Scroll.BufferedScrollLayerBase.RegionWidth">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Regions.Scroll.BufferedScrollLayerBase.RegionHeight">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.BufferedScrollLayerBase.GetScan0">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.BufferedScrollLayerBase.OnRendering">
            <summary>
            Se ejecuta este evento al momento de renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.BufferedScrollLayerBase.OnScanLine(System.Int32)">
            <summary>
            Permite ejecutar código por cada línea de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.BufferedScrollLayerBase.ClearBuffer">
            <summary>
            Limpia el buffer
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.BufferedScrollLayerBase.GetTileCanvas">
            <summary>        
            Obtiene un lienzo para renderizar tiles.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.BufferedScrollTransformedLayerBase.#ctor(System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.TransformedScrollLayer"/>.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Scroll.BufferedScrollTransformedLayerBase.MinusHalfRegionSize">
            <summary>
            Translación a aplicar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.BufferedScrollTransformedLayerBase.SampleFor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Permite modificar la coordenada de la cual se va a tomar el color para renderizar el pixel.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Scroll.TileScrollRegionBase">
            <summary>
            Representa un modo scroll construido en base a un mapa de tiles, que no acepta
            transformaciones de ningún tipo, pero renderiza mucho más rápido.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.TileScrollRegionBase.CreateMapGrid">
            <summary>
            Crea una grilla de durezas con la información del mapa base.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Scroll.TileScrollRegionBase.GetMapFullSize">
            <summary>
            Obtiene el tamaño total del mapa. Es decir, cantidad de tiles x tamaño de tile.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.Scroll.TileScrollRegionBase.TileAnimatedSpeed">
            <summary>
            Velocidad a la cual se deben actualizar los tiles animados del mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Scroll.RpgTiledScrollRegion">
            <summary>
            Modo específico para renderizar mapas de tiles con elementos que pueden renderizarse 
            sobre las entidades del juego, dependiendo de la "altura".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.RpgTiledScrollRegion.mapTileCountX">
            <summary>
            Ancho del mapa (en tiles.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.RpgTiledScrollRegion.layerRow">
            <summary>
            Representa una línea de tiles en una capa "superior", utilizada para tiles que se ven
            por encima de los objetos.
            
            Es necesario que sea una imagen aparte para que al dibujar la fila completa de tiles
            se aplique la transaparencia correspondiente.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Scroll.RpgTiledScrollRegion.TileRow">
            <summary>
            Representa cada línea de tiles a renderizar en capas superiores.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.RpgTiledScrollRegion.TileRow.GetLocation2D">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.RpgTiledScrollRegion.TileRow.GetLocationZ">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.RpgTiledScrollRegion.TileRow.GetDrawOrder">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Scroll.ScrollRegion">
            <summary>
            Controlador principal que se encarga de manejar los planos de scroll cuando se encuentra en modo Scroll.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.ScrollRegion.Rotation">
            <summary>
            Obtiene o establece la rotación del plano de scroll.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.ScrollRegion.NewRenderContext(System.Drawing.Graphics,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Genera un nuevo contexto de renderización para la región.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.GdipBrushScrollLayer.textureBrush">
            <summary>
            Utilizado para el scroll infinito.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.GdipBrushScrollLayer.#ctor(Kriptok.Common.Resource,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.GdipBrushScrollLayer"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.GdipBrushScrollLayer.#ctor(Kriptok.Drawing.FastBitmap,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.GdipBrushScrollLayer"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.GdipBrushScrollLayer.#ctor(System.Reflection.Assembly,System.String,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.GdipBrushScrollLayer"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.TransformedScrollLayer.#ctor(System.Drawing.Rectangle,Kriptok.Drawing.FastBitmap,Kriptok.Drawing.Vector2{System.Boolean})">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.TransformedScrollLayer"/>.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Scroll.TransformedTiledScrollLayer">
            <summary>
            Capa de tiles que puede deformarse con transformaciones affine, o customizadas.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Scroll.TransformedTiledScrollLayer.TileAnimatedSpeed">
            <summary>
            Velocidad a la cual se deben actualizar los tiles animados del mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.TransformedTiledScrollLayer.SampleColor(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Scroll.TransformedTiledScrollLayer.OnRendering">
            <inheritdoc/>
        </member>
        <member name="F:Kriptok.Regions.Scroll.GdipImageScrollLayer.bitmap">
            <summary>
            Utilizado cuando debe dibujar un bitmap.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.GdipImageScrollLayer.width">
            <summary>
            Ancho de la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Scroll.GdipImageScrollLayer.height">
            <summary>
            Alto de la imagen.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.GdipImageScrollLayer.#ctor(Kriptok.Common.Resource,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.GdipImageScrollLayer"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.GdipImageScrollLayer.#ctor(System.Reflection.Assembly,System.String,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.GdipImageScrollLayer"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Scroll.GdipImageScrollLayer.#ctor(System.Drawing.Bitmap,System.Boolean,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Scroll.GdipImageScrollLayer"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Screen.SubScreenRegionBase">
            <summary>
            Región de la "pantalla completa".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Screen.SubScreenRegionBase.priority">
            <summary>
            Prioridad de la región en la pantalla. Esta propiedad indica el orden en que las distintas
            regiones deben ser renderizadas en pantalla.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Screen.SubScreenRegionBase.Priority">
            <summary>
            Prioridad de la región en la pantalla. Esta propiedad indica el orden en que las distintas
            regiones deben ser renderizadas en pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Screen.SubScreenRegionBase.Dispose">
            <summary>
            Limpia la pantalla y libera los recursos utilizados por la región.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Screen.FullScreenRegion">
            <summary>
            Región de la "pantalla completa".
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Screen.SubScreenRegion">
            <summary>
            Representa una sub-sección de la pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Screen.SubScreenRegion.background">
            <summary>
            Imagen utilizada para renderizar un fondo estático en la región.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Screen.SubScreenRegion.blitter">
            <summary>
            Objeto que se encarga de enviar los bits del background a la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Screen.SubScreenRegion.RenderBackground(System.Drawing.Graphics)">
            <summary>
            Renderiza el modo actual de la región, y los objetos allí registrados.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.SubScreenRegion.SetBackground(System.Action{Kriptok.Regions.Screen.ScreenRegionBackground})">
            <summary>
            Inicializa el background.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Screen.SubScreenRegion.SetBackground(Kriptok.Common.Resource)">
            <summary>
            Limpia el fondo, y establece una imagen de fondo.
            Si la imagen no tiene el mismo tamaño que la pantalla, no se escala.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.SubScreenRegion.SetBackground(System.Reflection.Assembly,System.String)">
            <summary>
            Limpia el fondo, y establece una imagen de fondo.
            Si la imagen no tiene el mismo tamaño que la pantalla, no se escala.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.SubScreenRegion.ClearBackground">
            <summary>
            Detiene la renderización del background y lo libera de memoria.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Screen.SubScreenRegion.GetGdipRotationAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            
            Rotación sobre el ángulo Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.SubScreenRegion.GetDirectionAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo en que el objeto está "mirando" o "apuntando" en ambientes bidimensinoales.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.SubScreenRegion.OutOfRegion(Kriptok.Drawing.Bound2)">
            <summary>
            Este método sólo puede ser utilizado por
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Screen.ScreenRegionBackground">
            <summary>
            Representa un modo simple de "pantalla".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Screen.ScreenRegionBackground.regionBackground">
            <summary>
            Imagen generada para blittear en la pantalla como "fondo" de la región.        
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Screen.ScreenRegionBackground.#ctor(Kriptok.Drawing.DirectBitmap)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Screen.ScreenRegionBackground"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.ScreenRegionBackground.Blit(System.Reflection.Assembly,System.String,System.Int32,System.Int32)">
            <summary>
            Copia los bits de una imagen sobre la imagen generada.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.ScreenRegionBackground.Blit(Kriptok.Drawing.FastBitmap,System.Int32,System.Int32)">
            <summary>
            Copia los bits de una imagen sobre la imagen generada.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Screen.ScreenRegionBackground.BlitCentered(System.Reflection.Assembly,System.String)">
            <summary>
            Copia los bits de una imagen sobre el fondo, pero centrándola.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.ScreenRegionBackground.BlitCentered(Kriptok.Common.Resource)">
            <summary>
            Copia los bits de una imagen sobre el fondo, pero centrándola.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.ScreenRegionBackground.Draw(System.Reflection.Assembly,System.String,System.Int32,System.Int32)">
            <summary>
            Dibuja el mapa de bits en la posición indicada, contemplando
            la transparencia de la imagen.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.ScreenRegionBackground.Draw(System.Reflection.Assembly,System.String,System.Int32,System.Int32,Kriptok.Drawing.ColorTransform)">
            <summary>
            Dibuja el mapa de bits en la posición indicada, contemplando la configuración
            de color y la transparencia de la imagen.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.ScreenRegionBackground.FillStretched(System.Reflection.Assembly,System.String)">
            <summary>
            Dibuga el mapa de bits indicado estirándolo o contrayéndolo para que llene toda la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.ScreenRegionBackground.Plot(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Establece el color de un pixel del fondo.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.ScreenRegionBackground.UsingGraphics(System.Action{System.Drawing.Graphics})">
            <summary>
            Permite realizaroperaciones de GDI+ sobre el fondo.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.ScreenRegionBackground.Sample(System.Int32,System.Int32)">
            <summary>
            Devuelve el color que se encuentra en el pixel de las coordenadas indicadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.ScreenRegionBackground.BlitRect(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Dibuja un rectángulo sobre el fondo.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Screen.ScreenRegionBackground.Clear">
            <summary>
            Limpia el fondo.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Base.Camera3DBase">
            <summary>
            Una cámara base para interfaces tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.Camera3DBase.GetDistance">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Regions.Base.Camera3DBase.Distance">
            <summary>
            Distancia de la cámara al objetivo.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.IRegion3D.SetFog(System.UInt32,System.UInt32,System.Drawing.Color)">
            <summary>
            Establece una neblina que afecta los objetos a la distancia en la región.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Base.ICamera3D">
            <summary>
            Interfaz básica para cámaras 3D.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.ICamera3D.GetDistance">
            <summary>
            Obtiene la distancia que debe mantener la cámara hasta el objetivo.
            </summary>                
        </member>
        <member name="P:Kriptok.Regions.Base.ICamera3D.FieldOfView">
            <summary>
            Modificador del campo de visión.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Base.Region3DBase">
            <summary>
            Clase base para interfaces tridimensionales.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Base.Region3DBase.camera">
            <summary>
            Propiedades de la cámara a utilizar en la renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Base.Region3DBase.SpriteSizeModifier">
            <summary>
            Indica una constante numérica por la cual todos los tamaños de los sprites de Mode7 deben
            multiplicarse.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.Region3DBase.SetSpriteScaleModifier(System.Single)">
            <summary>
            Establece el multiplicador de escala para figuras bidimencionales en espacios tridimencionales.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Base.Region3DBase.Background">
            <summary>     
            Vista de fondo a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Base.Region3DBase.fog">
            <summary>
            Efecto de neblina a aplicar al renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Base.Region3DBase.fullFogValue">
            <summary>
            Valor de color que adopta la neblina cuando se aplica al 100%.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Base.Region3DBase.fullFogColor">
            <summary>
            Color que adopta la neblina cuando se aplica al 100%.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.Region3DBase.SetBackground(Kriptok.Regions.SkyboxBackground)">
            <summary>
            Establece el fondo para dibujar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.Region3DBase.SetBackground(Kriptok.Views.Shapes.Base.ShapeViewBase)">
            <summary>
            Establece el fondo para dibujar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.Region3DBase.RenderBackground(Kriptok.Regions.Context.Base.Render3DContextBase)">
            <summary>
            Renderiza el fondo de la vista.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Base.Region3DBase.BackgroundOrFullFog(Kriptok.Regions.Context.Base.Render3DContextBase)">
            <summary>
            Si tiene asignado un <see cref="F:Kriptok.Regions.Base.Region3DBase.Background"/>, lo renderiza, de lo contrario,
            de tener asignado un efecto de "neblina" en la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.Region3DBase.RenderBackgroundIfNotNull(Kriptok.Regions.Context.Base.Render3DContextBase)">
            <summary>
            Limpia la pantalla, o dibuja la vista en <see cref="F:Kriptok.Regions.Base.Region3DBase.Background"/> si correspondiese.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.Region3DBase.Dispose">
            <summary>
            Libera los recursos de la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.Region3DBase.GetFogFilter">
            <summary>
            Obtiene el filtro de "neblina" que se esté utilizando en ese momento.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Base.Region3DBase.SetFog(System.UInt32,System.UInt32,System.Drawing.Color)">
            <summary>
            Establece una neblina que afecta los objetos a la distancia en la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.Region3DBase.SetFog(Kriptok.Regions.Ambient.BlackFogEffect)">
            <summary>
            Establece un filtro de colores para sombreado y neblina de los objetos renderizados en la región.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Base.Region3DBase.SetDepthCamera(Kriptok.Regions.Base.ICamera3D)">
            <summary>
            Permite establecer las propiedades de la cámara a utilizar durante la renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Base.Region3DBase.GetGdipRotationAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Rotación sobre el ángulo X.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Base.Region3DBase.GetDirectionAngle2D(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Obtiene el ángulo en que el objeto está "mirando" o "apuntando" en ambientes bidimensinoales.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Base.Region3DBase.RotationWithMouseHorizontally(System.Int32)">
            <summary>
            Obtiene un valor para rotar la cámara horizontalmente. Y luego la vuelve a centrar
            utilizando el valor indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Base.Region3DBase.RotationWithMouseVertically(System.Int32)">
            <summary>
            Obtiene un valor para rotar la cámara verticalmente. Y luego la vuelve a centrar
            utilizando el valor indicado por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Base.IScanlineBrush">
            <summary>
            Representa una brocha que renderiza línea por línea.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.IScanlineBrush.ResetY(System.Int32)">
            <summary>
            Indica que se va a renderizar en la línea Y.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.IScanlineBrush.IncY">
            <summary>
            Incrementa la línea en la que se está renderizando.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.IScanlineBrush.FillHorizontal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Renderiza una línea horizontal entre los límites indicados por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Base.IScanlineBrush.FillVertical(System.Int32,System.Int32,System.Int32)">
            <summary>
            Renderiza una línea vertical entre los límites indicados por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Base.IScanColumnBrush`1">
            <summary>
            Es una interfaz que agrega comportamiento de pintado pixel por pixel a brochas.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Base.IScanColumnBrush`1.Sample">
            <summary>
            Toma el color que se encuentra en el cursor en este momento.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Base.IScanColumnBrush`1.ResetX(System.Int32)">
            <summary>
            Pone el cursor en la columna X.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.IScanColumnBrush`1.IncX">
            <summary>
            Incrementa la columna de renderización.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Base.IScanlineBrushExtensions">
            <summary>
            Funcionalidades a realizar con la brocha.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Base.IScanlineBrushExtensions.RasterRect(Kriptok.Regions.Base.IScanlineBrush,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Renderiza un rectángulo según los parámetros indicados.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.IBuffered">
            <summary>
            Interfaz para entornos buffereados.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.IBuffered.GetScan0">
            <summary>
            Obtiene un puntero al primer pixel del buffer.
            </summary>        
        </member>
        <member name="P:Kriptok.Regions.IBuffered.RegionWidth">
            <summary>
            Ancho del buffer.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.IBuffered.RegionHeight">
            <summary>
            Alto del buffer.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.IBufferedExtensions.Plotter.Sample">
            <summary>
            Obtiene el color que hay actualmente en la posición en la que se encuentra el <see cref="T:Kriptok.Regions.IBufferedExtensions.Plotter"/>.
            </summary>            
        </member>
        <member name="T:Kriptok.Regions.Ambient.Masks.GreenFilterColorMask">
            <summary>
            Aplica una máscara que acentúa el color verde.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.GreenFilterColorMask.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.Masks.RedFilterColorMask"/>.
            </summary>   
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.GreenFilterColorMask.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.Masks.RedFilterColorMask"/>.
            </summary>        
            <param name="intensity">Valor entre 0 y 1 que indica la intensidad de la máscara.</param>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.GreenFilterColorMask.Transform(System.UInt32,System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Ambient.Masks.BlueFilterColorMask">
            <summary>
            Aplica una máscara que acentúa el color azul.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.BlueFilterColorMask.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.Masks.BlueFilterColorMask"/>.
            </summary>   
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.BlueFilterColorMask.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.Masks.BlueFilterColorMask"/>.
            </summary>        
            <param name="intensity">Valor entre 0 y 1 que indica la intensidad de la máscara.</param>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.BlueFilterColorMask.Transform(System.UInt32,System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Ambient.Masks.RedFilterColorMask">
            <summary>
            Aplica una máscara que acentúa el color rojo.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.RedFilterColorMask.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.Masks.RedFilterColorMask"/>.
            </summary>   
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.RedFilterColorMask.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.Masks.RedFilterColorMask"/>.
            </summary>        
            <param name="intensity">Valor entre 0 y 1 que indica la intensidad de la máscara.</param>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.RedFilterColorMask.Transform(System.UInt32,System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Ambient.Masks.IntensityMaskBase">
            <summary>
            Aplica una máscara dependiendo de una intensidad determinada.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.IntensityMaskBase.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.Masks.IntensityMaskBase"/>.
            </summary>                
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.IntensityMaskBase.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.Masks.IntensityMaskBase"/>.
            </summary>        
            <param name="intensity">Valor entre 0 y 1 que indica la intensidad de la máscara.</param>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.IntensityMaskBase.GetIntensity(System.Single)">
            <summary>
            Permite customizar el cálculo de intensidad.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.IntensityMaskBase.Transform(System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>              
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.IntensityMaskBase.Transform(System.UInt32,System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Ambient.Masks.DarkColorMask">
            <summary>
            Aplica una máscara que oscurece todos los colores.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.DarkColorMask.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.Masks.DarkColorMask"/>.
            </summary>   
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.DarkColorMask.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.Masks.DarkColorMask"/>.
            </summary>        
            <param name="intensity">Valor entre 0 y 1 que indica la intensidad de la máscara.</param>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.DarkColorMask.Transform(System.UInt32,System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Ambient.Masks.ColorMask">
            <summary>
            Aplica una máscara al color indicado.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Ambient.Masks.ColorMask.Orange">
            <summary>
            Mascara que aplica una paleta anaranjada.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Ambient.Masks.ColorMask.mask">
            <summary>
            Mascara a aplicar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.ColorMask.#ctor(System.UInt32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.Masks.ColorMask"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.ColorMask.Transform(System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Ambient.Masks.BrightColorMask">
            <summary>
            Aplica una máscara que aclara todos los colores.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.BrightColorMask.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.Masks.BrightColorMask"/>.
            </summary>            
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.BrightColorMask.#ctor(System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.Masks.BrightColorMask"/>.
            </summary>        
            <param name="intensity">Valor entre 0 y 1 que indica la intensidad de la máscara.</param>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.BrightColorMask.Transform(System.UInt32,System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>                      
        </member>
        <member name="T:Kriptok.Regions.Ambient.Masks.LightColorMask">
            <summary>
            Aplica una máscara que aclara u oscurece el color, dependiendo
            de un parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Ambient.Masks.OrangeColorMask">
            <summary>
            Aplica una máscara anaranjada al color indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Masks.OrangeColorMask.Transform(System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>              
        </member>
        <member name="T:Kriptok.Regions.Ambient.Base.IFlatColorTransformation">
            <summary>
            Este es un modificador que indica que una transformación de color puede
            por algún motivo, completamente anular el color de origen, y en ese caso,
            aplicar un color por default.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Base.IFlatColorTransformation.FlatColorEffect(System.UInt32@)">
            <summary>
            Este método indica si, dada la aplicación del filtro, dado cualquier color, el resultado
            será el del color del efecto aplicado en su máxima expresión.
            
            Devuelve el color resultante de aplicar totalmente el efecto, para poder dibujar lo que
            corresponta con un color sólido, y no necesariamente transformarlo.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Ambient.Base.IFlatColorTransformation.NoEffect">
            <summary>
            Indica si debe 
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Ambient.Base.IFlatColorTransformation.GetFullEffectColor">
            <summary>
            Obtiene directamente el color del efecto aplicado al 100%.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Ambient.Base.IFlatColorTransformationExtensions">
            <summary>
            Extensiones de la interfaz <see cref="T:Kriptok.Regions.Ambient.Base.IFlatColorTransformation"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Ambient.Base.IDistanceColorTransformation">
            <summary>
            Representa una transformación de color que depende de la distancia
            a la cual se está renderizando.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Base.IDistanceColorTransformation.Transform(System.UInt32,System.Single)">
            <summary>
            Obtiene el color transformado según la distancia a la cual se encuentra.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Base.IDistanceColorTransformation.GetFullEffectDistance">
            <summary>
            Obtiene la distancia a partir de la cual la transformación renderiza
            un polígono completamente opacado por el efecto.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Ambient.Base.IFogTransformation">
            <summary>
            Aplica una transformación de color según la distancia a la cual se está renderizando.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Base.IFogTransformation.SetDistance(System.Single)">
            <summary>
            Establece la distancia de renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Base.IFogTransformation.GetFogColorEffect">
            <summary>
            Obtiene el valor actual de la incicencia de la neblina para
            objetos tridimensionales texturados.        
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Ambient.Base.IColorTransformation">
            <summary>
            Aplica una transformación a un color.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Base.IColorTransformation.Transform(System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Filters.FogColorFilter.SetDistance(System.Single)">
            <summary>
            Establece la distancia de renderización (utilizado normalmente para 
            efectos de neblina).
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Filters.FogColorFilter.Transform(System.UInt32)">
            <summary>
            Aplica la transformación al color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Filters.FogColorFilter.GetFogColorEffect">
            <summary>
            Obtiene el valor actual de la incicencia de la neblina para
            objetos tridimensionales texturados.        
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Filters.FogColorFilter.GetFullEffectColor">
            <summary>
            Obtiene directamente el color del efecto aplicado al 100%.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Ambient.Filters.FogColorFilter.GetFullEffectDistance">
            <summary>
            Obtiene directamente el color del efecto aplicado al 100%.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Ambient.ColorFogEffect">
            <summary>
            Permite establecer un efecto de neblina de color para figuras que se renderizan lejos 
            de la cámara en un entorno tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Ambient.ColorFogEffect.color">
            <summary>
            Color de la niebla.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Ambient.ColorFogEffect.currentMask">
            <summary>
            Máscara de luminiscencia de la neblina de color.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Ambient.ColorFogEffect.allMasks">
            <summary>
            Guarda todas las máscaras de colores, para no tener que recalcularlas.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.ColorFogEffect.#ctor(System.Single,System.Single,System.UInt32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.ColorFogEffect"/>.
            </summary>
            <param name="fromDistance">Distancia a partir de la cual se debe empezar a aplicar la neblina.</param>
            <param name="toDistance">Distancia hasta la cual debe aplicarse la neblina. Más allá de esta distancia, 
            se aplicará sólo el color de la neblina correspondiente.</param>
            <param name="color">Color de la niebla.</param>
        </member>
        <member name="M:Kriptok.Regions.Ambient.ColorFogEffect.ScaleColor(System.UInt32,System.UInt32)">
            <summary>
            Obtiene el color transformado.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.ColorFogEffect.GetFogValue(System.Single)">
            <summary>
            Devuelve el valor de neblina a aplicar según la distancia indicada.
            </summary>    
        </member>
        <member name="M:Kriptok.Regions.Ambient.ColorFogEffect.GetFullEffectColor">
            <summary>
            Obtiene el color que se debe mostrar cuando la neblina está aplicada al 100%,
            en este caso particular, el color negro.
            </summary>      
        </member>
        <member name="T:Kriptok.Regions.Ambient.WhiteFogEffect">
            <summary>
            Permite establecer un efecto de neblina blanca para figuras que se renderizan lejos 
            de la cámara en un entorno tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.WhiteFogEffect.#ctor(System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.WhiteFogEffect"/>.
            </summary>
            <param name="fromDistance">Distancia a partir de la cual se debe empezar a aplicar la neblina.</param>
            <param name="toDistance">Distancia hasta la cual debe aplicarse la neblina. Más allá de esta distancia, 
            se aplicará sólo el color de la neblina correspondiente.</param>
        </member>
        <member name="M:Kriptok.Regions.Ambient.WhiteFogEffect.ScaleColor(System.UInt32,System.UInt32)">
            <summary>
            Obtiene el color transformado.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.WhiteFogEffect.GetFullEffectColor">
            <summary>
            Obtiene el color que se debe mostrar cuando la neblina está aplicada al 100%,
            en este caso particular, el color negro.
            </summary>      
        </member>
        <member name="T:Kriptok.Regions.Ambient.BlackFogEffect">
            <summary>
            Permite establecer un efecto de neblina negra para figuras que se renderizan lejos 
            de la cámara en un entorno tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Ambient.BlackFogEffect.fromDistance">
            <summary>
            Distancia a partir de la cual se debe empezar a aplicar la neblina.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Ambient.BlackFogEffect.toDistance">
            <summary>
            Distancia hasta la cual debe aplicarse la neblina. Más allá de esta distancia, se aplicará
            sólo el color de la neblina correspondiente.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Ambient.BlackFogEffect.inverseDistance">
            <summary>
            Valor inverso de la distancia para algunos cálculos.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.BlackFogEffect.#ctor(System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Ambient.BlackFogEffect"/>.
            </summary>
            <param name="fromDistance">Distancia a partir de la cual se debe empezar a aplicar la neblina.</param>
            <param name="toDistance">Distancia hasta la cual debe aplicarse la neblina. Más allá de esta distancia, 
            se aplicará sólo el color de la neblina correspondiente.</param>
        </member>
        <member name="M:Kriptok.Regions.Ambient.BlackFogEffect.Transform(System.UInt32,System.Single)">
            <summary>
            Obtiene el color transformado según la distancia a la cual se encuentra.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.BlackFogEffect.ScaleColor(System.UInt32,System.UInt32)">
            <summary>
            Obtiene el color transformado.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.BlackFogEffect.GetFogValue(System.Single)">
            <summary>
            Devuelve el valor de neblina a aplicar según la distancia indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Ambient.BlackFogEffect.GetFullEffectColor">
            <summary>
            Obtiene el color que se debe mostrar cuando la neblina está aplicada al 100%,
            en este caso particular, el color negro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Ambient.BlackFogEffect.CreateFogEffect(System.UInt32,System.UInt32,System.Drawing.Color)">
            <summary>
            Crea un objeto de efecto de niebla para una región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.BlackFogEffect.GetFullEffectDistance">
            <summary>
            Obtiene la distancia a partir de la cual la transformación renderiza
            un polígono completamente opacado por el efecto.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Ambient.Lightning">
            <summary>
            Información de iluminación de la región/contexto de renderización.
            </summary>    
        </member>
        <member name="F:Kriptok.Regions.Ambient.Lightning.Default">
            <summary>
            Efecto de iluminación por defecto. Tiene una luz ambiental de
            50% y la iluminación llega directamente desde el eje Z.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Lightning.GetDefaultLightning">
            <summary>
            Crea el efecto de luz por defecto.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Ambient.Lightning.AmbientLightMin">
            <summary>
            Mínima incidencia de la luz sobre una figura.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Ambient.Lightning.AmbientLightMultiplier">
            <summary>
            Multiplicadr de incidencia de la luz.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Ambient.Lightning.InnerLightSource">
            <summary>
            Indica desde dónde viene el foco de luz de ambiente para los espacios 3D/Mode7.
            
            Es internal por cuestiones de optimización.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Lightning.Set(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Permite especificar el origen de la luz de ambiente para los espacios 3D/Mode7.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Lightning.SetLightSource(System.Single,System.Single,System.Single)">
            <summary>
            Permite especificar el origen de la luz de ambiente para los espacios 3D/Mode7.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Lightning.SetAmbientLight(System.Single)">
            <summary>
            Establece el valor de la luz ambiental a aplicar.
            </summary>        
            <param name="value">Recive un valor entre 0 y 1. Valores mayores o menores serán ignorados.</param>
        </member>
        <member name="P:Kriptok.Regions.Ambient.Lightning.LightSource">
            <summary>
            Devuelve un vector indicando la dirección desde la que se percive la luz ambiental.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Ambient.Lightning.DisableShading">
            <summary>
            Indica o establece si está activada o no la iluminación en la región.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Ambient.Lightning.GetLightIncidence(System.Single)">
            <summary>
            Obtiene el efecto de la luz sobre la figura.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Ambient.Lightning.GetLightIncidenceClamped(System.Single)">
            <summary>
            Obtiene el efecto de la luz sobre la figura.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Ambient.Lightning.ClampToUInt32(System.Single)">
            <summary>
            Clampea el valor entre 0..1, y luego lo transforma a <see cref="T:System.UInt32"/>.
            
            Es para cuando la similaridad no fue calculada por el método <see cref="M:Kriptok.Regions.Ambient.Lightning.GetLightIncidenceClamped(System.Single)"/>,
            porque sale de una interpolación.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Ambient.Lightning.Clamp(System.Single)">
            <summary>
            Clampea el valor de la iluminación al intervalo 0..1.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Ambient.Lightning.UpdateLightSource(Kriptok.Drawing.Algebra.Matrix3x4F)">
            <summary>
            Actualiza el foco de la luz ambiental.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.BufferedBlitterBase">
            <summary>
            Transfiere los bits de color desde un "backbuffer" a la pantalla.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.SkyboxBackground">
            <summary>
            Esta clase sirve para convertir vistas comunes en "skyboxes", u otras
            vistas que pudieran utilizarse para renderizar fondos.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.SkyboxBackground.lastCameraLocation">
            <summary>
            Última ubicación de la cámara al momento de renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.SkyboxBackground.shape">
            <summary>
            Figura que voy a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.SkyboxBackground.vertices">
            <summary>
            Vértices de la vista que se transformarán, ya que la vista en sí no tiene un "Owner".
            </summary>
        </member>
        <member name="M:Kriptok.Regions.SkyboxBackground.RenderOn(Kriptok.Regions.Context.Base.Render3DContextBase)">
            <summary>
            Renderiza el fondo poligonal en el contexto indicado por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Partitioned.IPartitionedPseudo3DRegion">
            <summary>
            Interfaz para unificar entornos particionados.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.IPartitionedPseudo3DRegion.GetFloorHeight(Kriptok.Common.Base.ILocalizable2D)">
            <summary>
            Obtiene la altura del piso para las coordenadas indicadas por parámetro.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Partitioned.IPartitionedPseudo3DRegion.TileAnimatedSpeed">
            <summary>
            Obtiene o establece la velocidad de la animación de las texuras animadas.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.IPartitionedPseudo3DRegion.GetHitScanSegment(Kriptok.Common.Base.ILocalizable2D,System.Single,System.Single,System.Single)">
            <summary>
            Obtiene un segmento tridimensional desde un punto en una dirección, indicados por parámetro.
            El segmento termina cuando colisiona con una pared, piso o techo.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Partitioned.IPartitionedPseudo3DRegion.AssignPartitionTo(Kriptok.Entities.Base.EntityBase,Kriptok.Entities.Base.EntityBase)">
            <summary>
            Relaciona una entidad a la misma partición donde se encuentra otra.
            
            Este método es necesario para los casos en que hay espacios no euclídeos, y se superponen particiones en el plano bidimensional.
            
            En esos casos, tal vez no se pueda determinar la partición exacta donde debe registrarse inicialmente el objeto, por 
            lo que con este método se puede asignar directamente a la misma partición donde hay otro objeto.
            </summary>
            <param name="child">Entidad a asignar en una partición particular.</param>
            <param name="parent">Objeto que se encuentra en la partición a la que quiero asigar la entidad.</param>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.IPartitionedPseudo3DRegion.TriggerEvent(System.Int32,System.Object)">
            <summary>
            Envía una señal de que se está intentando disparar un evento en el mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase">
            <summary>
            Este es el contexto utilizado para la detección de colisiones con paredes de una entidad
            en un entorno particionado.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.MinRadius">
            <summary>
            Mínimo radio que se puede utilizar para validar colisiones.
            
            Es 2, para que después cuando se divida por (r - RadiusModifier), siempre quede al menos 1f.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.RadiusModifier">
            <summary>
            Valor que se utiliza para modificar el radio de los objetos con los que se 
            calcula la longitud de los "pasos".
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.DetectedCollisionEnum">
            <summary>
            Tipos de colisión con paredes encontradas.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.DetectedCollisionEnum.V0">
            <summary>
            Colisiona con el primer vértice.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.DetectedCollisionEnum.V1">
            <summary>
            Colisiona con el segundo vértice.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.DetectedCollisionEnum.Segment">
            <summary>
            Colisiona con el segmento.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.circle">
            <summary>
            Círculo que representa la entidad en el plano 2D.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.movementDirection">
            <summary>
            Dirección de movimiento del objeto inicialmente.
            Utilizado para validar que no detecte colisiones con paredes "desde atrás".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.partitionIds">
            <summary>
            IDs de las particiones que ya fui recorriendo.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.segments">
            <summary>
            Segmentos encontrados por el contexto.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.vertices">
            <summary>
            Vértices o esquinas encontradas por el contexto.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.afterMoving">
            <summary>
            Ubicación del círculo a dónde debería moverse si no hubiera ningún tipo de colisión.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.Clear">
            <summary>
            Limpia el contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.ResolveLocation">
            <summary>
            Resuelve la ubicación final de la entidad en cuestión en base a las colisiones encontradas.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.FindObstacles(Kriptok.Drawing.Shapes.Circle)">
            <summary>
            Agrega las paredes y vértices con los que está colisionando la entidad en cuestión.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.ValidateNewLocation(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Valida que la nueva ubicación del objeto también sea válida.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.ContinueCheckingFoward(System.Int32,System.Int32)">
            <summary>
            Indica si debe "continuar" chequeando las siguiente partición a la que
            apunta un "lado".
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.UpdateLocation(Kriptok.Drawing.Shapes.Circle)">
            <summary>
            Luego de resolver la posición de la entidad, actualiza a la misma según corresponda.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.CalculateSteps(System.Single,System.Single)">
            <summary>
            Calcula la cantidad de "pasos" que debe dar la entidad para trasladarse una determinada distancia
            en base a su radio.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.CollisionToSegment(Kriptok.Drawing.Algebra.Segment2D)">
            <summary>
            Busca la intersección entre un círculo y un segmento.
            
            Si hay intersección, indica el punto más cercano como parámetro de salida.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.GetHeightDifferenceValidationVertex(Kriptok.Drawing.Algebra.Segment2D)">
            <summary>
            Obtiene la intersección entre un segmento y la recta perpendicular que pasa
            por el centro del círculo. Este vértice se usa para validar la diferencia
            de altura de una partición a otra.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionedCollisionContextBase.GetHeightDifferenceValidationVertex2(Kriptok.Drawing.Algebra.Segment2D)">
            <summary>
            Obtiene la intersección entre un segmento y la recta perpendicular que pasa
            por el centro del círculo. Este vértice se usa para validar la diferencia
            de altura de una partición a otra.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Partitioned.PartitionSideBase`1">
            <summary>
            Representa una partición 
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.PartitionSideBase`1.v0">
            <summary>
            Vértices que definen el "lado" en el espacio 2D.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.PartitionSideBase`1.v1">
            <summary>
            Vértices que definen el "lado" en el espacio 2D.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionSideBase`1.#ctor(Kriptok.Drawing.Vertex2,Kriptok.Drawing.Vertex2)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Partitioned.PartitionSideBase`1"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionSideBase`1.Intersection(Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Devuelve la recta que representa el "lado" con el que intersecta el segmento
            representado por los dos vectores indicados por parámetro.
            
            Si se intersectan, devuelve la línea indicando como punto de referenci
            el punto de intersección.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionSideBase`1.FindCollidingObstacles(`0,System.Int32)">
            <summary>
            Agrega este "lado" al contexto de detección de colisiones, si corresponde.
            </summary>
            <param name="context">Contexto de validación de colisiones.</param>     
            <param name="currentPartitionId">Id de la partición inicial donde se encuentra actualmente.</param>
            <param name="fromPartitionId">Id de la partición inicial donde empezó el algoritmo.</param>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionSideBase`1.GetSegment2D">
            <summary>
            Obtiene el segmento con el que colisionaría una entidad que intente atravesar este lado.
            Usualmente coincidirá con la ubicación física del lado.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionSideBase`1.GetPlane3D">
            <summary>
            Obtiene el plano representado por el "lado".
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionSideBase`1.AppendSideToContext(`0,Kriptok.Drawing.Algebra.Segment2D,System.Int32)">
            <summary>
            Indica si tiene que agregar la pared al contexto de colisión.
            
            También realiza los llamados recursivos.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionSideBase`1.Intersects(System.Int32,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Line2D@)">
            <summary>
            Encuentra la intersección entre este lado, y el segmento definido por los dos vértices
            indicados por parámetro.
            </summary>
            <returns>Devuelve <see cref="!:true"/> si ha encontrado la intersección, y 
            <see cref="!:false"/> de lo contrario.</returns>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionSideBase`1.Resolve``1(Kriptok.Regions.Pseudo3D.Partitioned.PartitionSideIntersectionResultEnum,Kriptok.Drawing.Algebra.Vector2F,System.Func{``0})">
            <summary>
            Resuelve el comportamiento de una intersección según el resultado de la intersección.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionSideBase`1.DefineIntersection">
            <summary>
            Define si la intersección encontrada con este lado es "definitiva", o bien debe 
            continuar evaluando intersecciones en las siguientes particiones.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Partitioned.PartitionSideBase`1.RayIntersection(System.Int32,Kriptok.Drawing.Algebra.Ray3D,Kriptok.Drawing.Algebra.Vector3F@)">
            <summary>
            Obtiene la intersección tridimensional (si la hubiera) del "rayo" con el "lado".        
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Partitioned.Wld.WldCollisionContext">
            <summary>
            Contexto de detección de colisiones para escenarios WLD.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.Wld.WldCollisionContext.region">
            <summary>
            Mapa principal utilizado para detectar colisiones.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.Wld.WldCollisionContext.entity">
            <summary>
            Referencia a la entidad que evalúa colisiones.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.Wld.WldCollisionContext.beforeMoving">
            <summary>
            Ubicación de la entidad "antes de moverse".
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.Wld.WldCollisionContext.currentPartition">
            <summary>
            Partición en la que se encuentra actualmente el algoritmo de búsqueda.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.Wld.WldCollisionContext.partitions">
            <summary>
            Lista de particiones con las que la entidad está en contacto.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Partitioned.Wld.WldCollisionContext.zBound">
            <summary>
            Límites verticales del espacio que puede ocupar la entidad. 
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.Wld.WldCollisionContext.Clear">
            <summary>
            Limpia el contexto.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.Wld.WldCollisionContext.FindObstacles(Kriptok.Drawing.Shapes.Circle)">
            <summary>
            Busco obstáculos en el mapa particionado.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Partitioned.Wld.WldCollisionContext.ValidateNewLocation(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Valida que la nueva ubicación del objeto también sea válida.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.Wld.WldCollisionContext.UpdateLocation(Kriptok.Drawing.Shapes.Circle)">
            <summary>
            Actualizo la posición final de la entidad.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Partitioned.Wld.WldCollisionContext.ClampVertical(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldPartition)">
            <summary>
            Limita verticalmente el espacio por el que puede pasar la entidad.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Partitioned.Wld.WldCollisionContext.ValidateHeight(Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector)">
            <summary>
            Valida si la entidad se puede mover a la partición indicada por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Partitioned.Wld.WldLocationValidation">
            <summary>
            Validador de posición de entidades en entornos <see cref="T:Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldRegion"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Partitioned.Wld.Vertices.WldVertexBase">
            <summary>
            Estos vértices son los que utilizan las particiones para saber dónde renderizarse. Dependen
            directamente del sector al que pertenecen. Se agrupan de a 3 por piso + 3 por techo en cada partición.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.Wld.Vertices.WldVertexPortalBottom.#ctor(Kriptok.Regions.Partitioned.Wld.Vertices.WldVertexBase,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector)">
            <summary>
            Estos son los vértices utilizados para determinar el tamaño de las paredes basándose en
            los sectores de los cuales parten y hacia los cuales van.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Partitioned.Wld.Vertices.WldVertexPortalTop.#ctor(Kriptok.Regions.Partitioned.Wld.Vertices.WldVertexBase,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector,Kriptok.Regions.Pseudo3D.Partitioned.Wld.WldSector)">
            <summary>
            Estos son los vértices utilizados para determinar el tamaño de las paredes basándose en
            los sectores de los cuales parten y hacia los cuales van.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Partitioned.IPartition">
            <summary>
            Interfaz de una region triangular en las que se divide un mapa.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Partitioned.IPartition.GetFloorHeight(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la altura del "piso" para la coordenada indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Partitioned.IPartition.Contains(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Indica si la particion contiene el punto indicado por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Surfaces.DecoratedScrollableTiledViewBase`2">
            <summary>
            Representa una clase particular de terreno que además tiene una capa de objetos.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.DecoratedScrollableTiledViewBase`2.NewDecoration(Kriptok.Common.Initializer)">
            <summary>
            Inicializa un nuevo ítem para representar una decoración en el mapa.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Surfaces.ITileOwnerSurfaceView">
            <summary>
            Interfaz necesaria para mapas de tiles con altura.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ITileOwnerSurfaceView.GetTileTexture(System.Int32,System.Int32)">
            <summary>
            Obtiene la textura para el tile que se encuentra en las coordenadas indicadas por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Surfaces.ScrollableTexturedViewBase`1">
            <summary>
            Esta vista es base para terrenos infinitos que no se cargan al mismo tiempo,
            sino que utilizan un proceso "cámara" para saber cuándo se debe renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.ScrollableTexturedViewBase`1.applyTextureIncrement">
            <summary>
            Indica si tiene que aplicar incremento de textura.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.ScrollableTexturedViewBase`1.Texture">
            <summary>
            Textura para dibujar las caras.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.ScrollableTexturedViewBase`1.textureWidth">
            <summary>
            Ancho de la textura, guardado para hacer cálculos rápidos.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.ScrollableTexturedViewBase`1.textureHeight">
            <summary>
            Alto de la textura, guardado para hacer cálculos rápidos.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.ScrollableTiledViewBase`1.tiles">
            <summary>
            Array con todos los tiles del mapa. Desde acá se samplean las texturas para renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.ScrollableTiledViewBase`1.animatedTiles">
            <summary>
            Array sólo con los tiles animados (sin repetidos).
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableTiledViewBase`1.UpdateTile(`0,System.Int32,System.Int32)">
            <summary>
            Actualiza un tile en base a las coordenadas del tile representado.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableTiledViewBase`1.NewFace(Kriptok.Common.Initializer,Kriptok.Regions.Surfaces.Shapes.SurfaceVertex,Kriptok.Regions.Surfaces.Shapes.SurfaceVertex,Kriptok.Regions.Surfaces.Shapes.SurfaceVertex,Kriptok.Regions.Surfaces.Shapes.SurfaceVertex)">
            <inheritdoc/> 
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableTiledViewBase`1.NewTile(Kriptok.Common.Initializer,Kriptok.Regions.Surfaces.Shapes.SurfaceVertex,Kriptok.Regions.Surfaces.Shapes.SurfaceVertex,Kriptok.Regions.Surfaces.Shapes.SurfaceVertex,Kriptok.Regions.Surfaces.Shapes.SurfaceVertex)">
            <summary>
            Devuelve un nuevo tile delimitado por los vértices indicados por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Surfaces.ScrollableTiledViewBase`1.TileGetter">
            <summary>
            Objeto utilizado para obtener los tiles del mapa.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Surfaces.ScrollableTiledViewBase`1.TileGetter.TileGetterPow2">
            <summary>
            Versión optimizada para mapas con tamaño potencia de 2.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Surfaces.ScrollableInitializer">
            <summary>
            Clase para inicializar vistas poligonales scrolleables.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Surfaces.ScrollableInitializer.PointSquareLength">
            <summary>
            Cantidad de vértices de la malla a construir.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Surfaces.ScrollableInitializer.HorizontalScale">
            <summary>
            Distancia en unidades que debe separar los vértices.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Surfaces.ScrollableInitializer.VerticalScale">
            <summary>
            Multiplicador vertical para definir la altura de los vértices.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Surfaces.ScrollableInitializer.SquareShape">
            <summary>
            Indica si debe generar el terreno de forma rectangular.
            
            Por defecto, es circular.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Surfaces.ScrollableViewBase">
            <summary>
            Clase base para terrenos que scrollean sobre una grilla alrededor de un punto.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.ScrollableViewBase.horizontalScale">
            <summary>
            Tamaño de las celdas.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.ScrollableViewBase.horizontalScaleF">
            <summary>
            Tamaño de las celdas.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.ScrollableViewBase.VerticalScale">
            <summary>
            Multiplicador de altura del terreno.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableViewBase.AddTo(Kriptok.Regions.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable},Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Agrega todas las sub-vistas de la vista principal al contexto de renderización.
            </summary>
            <param name="context">Contexto de renderización.</param>
            <param name="renderizables">Lista de objetos a renderizar. Agregar a
            esta lista lo que se desee renderizar.</param>
            <param name="location">La ubicación bidimensional del objetivo de la cámara.</param>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableViewBase.GetAllViews">
            <summary>
            Obtiene todas las sub-vistas generadas para esta vista.
            
            Permite personalizar el comportamiento y el orden de renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableViewBase.GetTerrainHeight(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Obtiene la altura del terreno en el punto indicado.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Surfaces.ScrollableViewBase`1.horizontalScale">
            <summary>
            Tamaño de las celdas.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.ScrollableViewBase`1.horizontalScaleF">
            <summary>
            Tamaño de las celdas.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.ScrollableViewBase`1.inverseHorizontalScale">
            <summary>
            Inversa de <see cref="F:Kriptok.Regions.Surfaces.ScrollableViewBase`1.horizontalScaleF"/>. 
            Utilizado para optimizar cálculos.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.ScrollableViewBase`1.Swapped">
            <summary>
            Indica si la vista ha sido swappeada por completo. Por ejemplo, para utilizar un plano
            como cielo poligonal.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableViewBase`1.#ctor(Kriptok.Regions.Surfaces.ScrollableInitializer)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Surfaces.ScrollableViewBase"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableViewBase`1.GetAllViews">
            <summary>
            Obtiene todas las sub-vistas generadas para esta vista.
            
            Permite personalizar el comportamiento y el orden de renderización.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.ScrollableViewBase`1.RefreshOnEachFrame">
            <summary>
            Indica si debe actualizar los puntos CADA fotograma, o sólo cuando la cámara se mueva.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableViewBase`1.UpdateViews(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Permite customizar los límites de renderización del terreno.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableViewBase`1.UpdateViews(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Permite customizar los límites de renderización del terreno.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableViewBase`1.AddTo(Kriptok.Regions.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable},Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Agrega todas las sub-vistas de la vista principal al contexto de renderización.
            </summary>
            <param name="context">Contexto de renderización.</param>
            <param name="renderizables">Lista de objetos a renderizar. Agregar a
            esta lista lo que se desee renderizar.</param>
            <param name="location">La ubicación bidimensional del objetivo de la cámara.</param>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableViewBase`1.OnFrame(Kriptok.Regions.Context.Base.IRenderBufferContext)">
            <summary>
            Permite realizar acciones particulares antes de renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableViewBase`1.UpdateVertices(Kriptok.Regions.Context.Base.IRenderBufferContext,Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Actualiza todos los vértices de las vistas, en base 
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableViewBase`1.AddVertex``1(``0)">
            <summary>
            Agrega un vértice a la lista 
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableViewBase`1.UpdateView(`0,System.Int32,System.Int32)">
            <summary>
            Actualiza las "sub-vistas" a las coordenadas indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableViewBase`1.GetTerrainHeight(Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Calcula la altura de un vértice en el mapa de terreno.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableViewBase`1.HasToFlip(System.Int32,System.Int32)">
            <summary>
            Indica si al renderizar el tile que se encuentra en las coordenadas indicadas por parámetro,
            se deben invertir los vértices horizontalmente.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableFlatLiquidView.AddTo(Kriptok.Regions.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable},Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Agrega todas las sub-vistas de la vista principal al contexto de renderización.
            </summary>
            <param name="context">Contexto de renderización.</param>
            <param name="renderizables">Lista de objetos a renderizar. Agregar a
            esta lista lo que se desee renderizar.</param>
            <param name="location">La ubicación bidimensional del objetivo de la cámara.</param>
        </member>
        <member name="T:Kriptok.Regions.Surfaces.ScrollableWireframeInitializer">
            <summary>
            Inicializador de terreno.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Surfaces.ScrollableWireframeInitializer.TerrainData">
            <summary>
            Información de terreno.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Surfaces.ScrollableWireframeInitializer.InfiniteScroll">
            <summary>
            Indica si se va a renderizar infinitamente.
            </summary>
        </member>
        <member name="P:Kriptok.Regions.Surfaces.ScrollableWireframeInitializer.Stroke">
            <summary>
            Trazo a utilizar.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Surfaces.ScrollableWireframeTerrainView">
            <summary>
            Terreno que renderiza una superficie con caras delineadas por trazos.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableWireframeTerrainView.#ctor(Kriptok.Regions.Surfaces.ScrollableWireframeInitializer)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Surfaces.ScrollableWireframeTerrainView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Surfaces.ScrollableTexturedLiquidView.AddTo(Kriptok.Regions.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable},Kriptok.Drawing.Algebra.Vector2F)">
            <summary>
            Agrega todas las sub-vistas de la vista principal al contexto de renderización.
            </summary>
            <param name="context">Contexto de renderización.</param>
            <param name="renderizables">Lista de objetos a renderizar. Agregar a
            esta lista lo que se desee renderizar.</param>
            <param name="location">La ubicación bidimensional del objetivo de la cámara.</param>
        </member>
        <member name="P:Kriptok.Regions.Surfaces.TexturedScrollableViewArgs.TextureIncrement">
            <summary>
            Incremento de la textura sobre los polígonos.
            Si es cero, se calcula automáticamente.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Surfaces.ScrollableTiledView">
            <summary>
            Implementación rápida y básica de la clase <see cref="T:Kriptok.Regions.Surfaces.ScrollableTiledViewBase`1"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Regions.Surfaces.Shapes.DecoratedTileViewBase`2">
            <summary>
            Representa un tile normal con una vista en el medio.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecoratedTileViewBase`2.#ctor(Kriptok.Regions.Surfaces.ITileOwnerSurfaceView,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Surfaces.Shapes.DecoratedTileViewBase`2"/>.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Surfaces.Shapes.DecoratedTileViewBase`2.Decoration">
            <summary>
            Referencia a la decoración que está sobre el tile.
            
            Por ahora no tiene una utilidad definida.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecoratedTileViewBase`2.AppendTo(Kriptok.Regions.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Surfaces.Shapes.DecorationVertex">
            <summary>
            Vértice utilizado para calcular la ubicación de vértices utilizados por los tiles decorados.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationVertex.#ctor(Kriptok.Regions.Surfaces.ScrollableViewBase,Kriptok.Regions.Surfaces.Shapes.SurfaceVertex,Kriptok.Regions.Surfaces.Shapes.SurfaceVertex,Kriptok.Regions.Surfaces.Shapes.SurfaceVertex)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Surfaces.Shapes.DecorationVertex"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationVertex.GetLocation">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationVertex.GetLocationZ">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2">
            <summary>
            Representa una decoración en el mapa de tiles.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.viewBuffer">
            <summary>
            Lista de vistas visibles cargadas la última vez.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.currentX">
            <summary>
            Coordenadas actuales de la vista en el mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.currentY">
            <summary>
            Coordenadas actuales de la vista en el mapa.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.hasView">
            <summary>
            Indica si tiene que renderizar una vista el próximo frame.
            
            Independientemente de si la vista está "visible" o no.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2"/>.
            </summary>        
        </member>
        <member name="F:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.Vertex">
            <summary>
            Vértice sobre el cual se renderiza la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.GetLocation2D">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.GetDrawOrder">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.UpdateTo(System.Int32,System.Int32)">
            <summary>
            Actualiza la vista a las coordenadas indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.HasView(System.Int32,System.Int32)">
            <summary>
            Dado que la visibilidad de este tipo de vistas no es fácil de evaluar, se debe
            implementar este método que básicamente indique si el tile tiene información
            para mostrar.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.GetLocation">
            <summary>
            Obtiene la ubicación actual de la decoración del tile.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.RenderOn(Kriptok.Regions.Context.Base.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.GetCurrentView(Kriptok.Regions.Context.Base.IRenderContext,System.Int32,System.Int32)">
            <summary>
            Obtiene la vista a renderizar con todas sus propiedades.
            </summary>        
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.GetRenderLocation">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.GetLocationZ">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.GetRotationAngle3D(Kriptok.Regions.Context.Base.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.GetRotation3DX">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.GetRotation3DY">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.GetRotation3DZ">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.GetRotationAngle2D">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.DecorationViewBase`2.AppendTo(System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Agrega el decorado a las vistas para renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.Surfaces.Shapes.SurfaceTileView">
            <summary>
            Tile base para terrenos poligonales basados en casilleros.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Surfaces.Shapes.SurfaceTileView.Visible">
            <summary>
            Esta propiedad empieza en <see cref="!:false"/>, para que sólo se marque como "visible"
            cuando se vaya a renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Surfaces.Shapes.SurfaceTileView.AppendTo(Kriptok.Regions.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <inheritdoc/>
        </member>
        <member name="F:Kriptok.Regions.Axonometric.VoxelSpace.VBRenderizable.x0">
            <summary>
            Coordenada X donde empieza el buffer.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Axonometric.VoxelSpace.VBRenderizable.y1">
            <summary>
            Máximo valor Y calculado para el bounding-box del renderizable.
            </summary>
        </member>
        <member name="F:Kriptok.Regions.Axonometric.VoxelSpace.VBRenderizable.bufferValues">
            <summary>
            Estado del buffer actual.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.Axonometric.VoxelSpace.VoxelSpaceRenderizable.GetDrawOrder">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Regions.Axonometric.VoxelSpace.VoxelSpaceRenderizable.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <summary>
            La distancia a la cámara sobre el eje de profundidad.
            </summary>        
        </member>
        <member name="T:Kriptok.Regions.VoxelSpace.VoxelYBuffer1">
            <summary>
            Y-Buffer preprado especialmente para entornos de Voxel Terrain.
            </summary>
        </member>
        <member name="M:Kriptok.Regions.VoxelSpace.VoxelYBuffer1.#ctor(System.Drawing.Size)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Regions.VoxelSpace.VoxelYBuffer1"/>.
            </summary>        
        </member>
        <member name="T:Kriptok.Testing.Scenes.AxonometricTestSceneBase">
            <summary>
            Escena para prueba de entornos Axonometricos.
            </summary>
        </member>
        <member name="M:Kriptok.Testing.Scenes.AxonometricTestSceneBase.Run(Kriptok.Scenes.SceneHandler)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Testing.Scenes.AxonometricTestSceneBase.Run(Kriptok.Scenes.SceneHandler,Kriptok.Regions.Scroll.Axonometric.AxonometricRegionLayered)">
            <summary>
            Método a implementar.
            </summary>        
        </member>
        <member name="T:Kriptok.Testing.Scenes.Full3DTestSceneBase">
            <summary>
            Escena tridimensional para probar modelos 3D.
            </summary>
        </member>
        <member name="M:Kriptok.Testing.Scenes.Full3DTestSceneBase.Run(Kriptok.Scenes.SceneHandler)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Testing.Scenes.Full3DTestSceneBase.Run(Kriptok.Scenes.SceneHandler,Kriptok.Regions.Full3D.Full3DRegion)">
            <summary>
            Método a implementar.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Base.IRenderBound">
            <summary>
            Interfaz para vistas cuya renderización puede ser encapslada en un rectángulo de la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IRenderBound.GetLastRenderBoundingBox">
            <summary>
            Obtiene la última caja de renderización calculada para esta figura.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Base.GdipViewBase">
            <summary>
            Clase base para vistas que se renderizan en 2 dimensiones. Primitivas, imágenes, texto, etc.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.Flip">
            <summary>
            Indica si se debe invertir horizontal y/o verticalmente.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.Scale">
            <summary>
            Escalado de la figura.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.ScaleX">
            <summary>
            Escalado de la figura en X.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.ScaleY">
            <summary>
            Escalado de la figura en Y.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.ReScale">
            <summary>
            Re escalado de la figura.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.ReScaleX">
            <summary>
            Re escalado de la figura en X.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.ReScaleY">
            <summary>
            Re escalado de la figura en Y.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase.Center">
            <summary>
            Punto central de rotación o escalamiento de la vista en coordenadas unitarias.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.GdipViewBase.Render(Kriptok.Regions.Context.Base.IRenderContext,Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Renderiza la figura en pantalla, pero permite customizar el comportamiento.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.GdipViewBase.Calculate2DBounds(Kriptok.Regions.Context.Base.IProjector,Kriptok.Drawing.Algebra.Vector2F,System.Single,Kriptok.Drawing.Algebra.Vector2F,System.Drawing.SizeF,Kriptok.Views.Gdip.FlipEnum,Kriptok.Drawing.Algebra.Vector2F,Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Obtiene los límites horizontales de renderización de una figura bidimensional
            para un entorno tridimencional.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Base.GdipViewBase`1">
            <summary>
            Clase base para vistas que se renderizan en 2 dimensiones. Primitivas, imágenes, texto, etc.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase`1.Center">
            <summary>
            Cuandos establece el "centro" a través de esta propiedad, se lo aplica a todas las imágenes.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.GdipViewBase`1.Render(Kriptok.Regions.Context.Base.IRenderContext,Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Renderiza la figura en pantalla, pero permite customizar el comportamiento.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Base.GdipViewBase`1.Kriptok#Views#Base#IRectangleRenderizable#SizeF">
            <summary>
            Obtiene el rectángulo correspondiente a la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.GdipViewBase`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Base.GdipViewBase`1.Kriptok#Views#Base#ICollisionableRenderizable#GetAutoHitbox">
            <summary>
            Obtiene la <see cref="T:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase"/> automática para este tipo de vista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.GdipViewBase`1.RecalculateRenderBoundingBox(Kriptok.Regions.Context.Base.IRenderContext)">
            <summary>
            Recalcula los límites de renderización.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Base.IDirectionalView">
            <summary>
            Representa una vista que utiliza la propiedad <see cref="!:EntityBase.XGraph"/>
            para representar distintas vistas.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.IDirectionalView.XGraph">
            <summary>
            Esta propiedad permite forzar la dirección de la vista direccional.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Base.IIndexedView">
            <summary>
            Representa una vista indexada.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.IIndexedView.Graph">
            <summary>
            Obtiene o establece el índice en la vista.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Base.IIndexedView.Next">
            <summary>
            Avanza hacia el sigueinte sprite, si corresponde.
            </summary>        
            <returns>Devuelve <see cref="!:true"/> si pudo cambiar de sprite, y 
            <see cref="!:false"/> si ya estaba en el último.</returns>
        </member>
        <member name="M:Kriptok.Views.Base.IIndexedView.Next(System.Int32)">
            <summary>
            Avanza hacia el sigueinte sprite, si corresponde.
            </summary>        
            <returns>Devuelve <see cref="!:true"/> si pudo cambiar de sprite, y 
            <see cref="!:false"/> si ya estaba en el último.</returns>
        </member>
        <member name="M:Kriptok.Views.Base.IIndexedViewExtensions.Rotate(Kriptok.Views.Base.IIndexedView)">
            <summary>
            Avanza al siguiente sprite, pero si es el último vuelve al primero.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Base.IHasRenderPriority">
            <summary>
            Interfaz a implementar por objetos que tengan prioridad de renderizado.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IHasRenderPriority.GetDrawOrder">
            <summary>
            Obtiene un valor de prioridad para renderización de vistas que se encuentran
            en las mismar coordenadas de profundidad.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Base.IHasPriority">
            <summary>
            Indica que las clases que tienen esta interfaz pueden ser priorizadas.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IHasPriority.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <summary>
            Obtiene la prioridad de renderización de la vista.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Base.IPriorizable">
            <summary>
            Indica que las clases que tienen esta interfaz pueden ser priorizadas.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Base.IRectangleRenderizable">
            <summary>
            Representa una vista con la que se pueden calcular colisiones en 2D.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IRectangleRenderizable.GetMatrix(System.Boolean,Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Obtiene la matrix para el cálculo de colisiones en 2D.
            </summary>        
            <param name="checkFlip">Este parámetro indica si se debe chequear la propiedad "Flip" para el objeto.
            La razón de esto es que cuando se flipea, se producen algunos problemas, y errores de redondeo.
            Para el cálculo de interesecciones en la collisión, es imperceptible, pero cuando se trabaja
            con <see cref="!:MapRegion"/> el flip sólo trae problemas y nunca encontré la forma de resolverlo.
            Por lo tanto, directamente se lo ignora para esos casos.</param>        
        </member>
        <member name="P:Kriptok.Views.Base.IRectangleRenderizable.SizeF">
            <summary>
            Obtiene el rectángulo correspondiente a la vista.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Base.IRectangleRenderizable.Flip">
            <summary>
            Indica si se debe invertir horizontal y/o verticalmente.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Base.ICollisionableRenderizable">
            <summary>
            Indica que el objeto tiene posibilidad de colisionar con otros objetos del mismo tipo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.ICollisionableRenderizable.GetAutoHitbox">
            <summary>
            Obtiene la <see cref="T:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase"/> automática para este tipo de vista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.ICollisionableRenderizable.GetCollisionRectangle">
            <summary>
            Obtiene el rectángulo de colisión correspondiente a la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IRectangleRenderizableExtensions.GetBounds(Kriptok.Views.Base.IRectangleRenderizable,System.Drawing.Drawing2D.Matrix)">
            <summary>
            Este método recibe la matriz porque esta puede estar precalculada.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Base.IRectangleRenderizableExtensions.GetBounds(Kriptok.Views.Base.IRectangleRenderizable,Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <summary>
            Este método recibe la matriz porque esta puede estar precalculada.
            </summary>        
        </member>
        <member name="F:Kriptok.Views.Base.RenderizableViewBase.LastRenderBoundingBoxCalculated">
            <summary>
            Límites bidimencionales de la figura al momento de ser renderizado.
            
            Se utiliza principalmente para calcular la visibilidad en entornos tridimencionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.RenderizableViewBase.IsVisible">
            <summary>
            Permite customizar el comportamiento de visibilidad de la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.RenderizableViewBase.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Base.RenderizableViewBase.Kriptok#Views#Base#IRenderizable#ClosestPriority(Kriptok.Regions.Context.Base.IProjector)">
            <summary>
            Llama internamente a <see cref="M:Kriptok.Views.Base.RenderizableViewBase.GetPriority(Kriptok.Regions.Context.Base.IProjector)"/> para que
            si en una clase derivada se modifique overrideando a <see cref="M:Kriptok.Views.Base.RenderizableViewBase.GetPriority(Kriptok.Regions.Context.Base.IProjector)"/>,
            también se utilice ese resultado en esta función.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Base.RenderizableViewBase.GetLastRenderBoundingBox">
            <summary>
            Obtiene la última caja de renderización calculada para esta figura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.RenderizableViewBase.RecalculateRenderBoundingBox(Kriptok.Regions.Context.Base.IRenderContext)">
            <summary>
            Calcula los límites de la pantalla que ocuparía la partícula al renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Base.IRenderizable">
            <summary>
            Representa una vista a renderizar en la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IRenderizable.RenderOn(Kriptok.Regions.Context.Base.IRenderContext)">
            <summary>
            Renderiza la vista en el objeto Graphics indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Base.IRenderizable.ClosestPriority(Kriptok.Regions.Context.Base.IProjector)">
            <summary>
            Obtiene la "mínima distancia a la cámara" de la figura, para entornos tridimencionales.
            </summary>        
        </member>
        <member name="F:Kriptok.Views.Base.GdipPrimitiveBase.Rectangle">
            <summary>
            Rectángulo utilizado para la renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.GdipPrimitiveBase.#ctor(System.Single,System.Single,System.Drawing.Color)">
            <summary>
            Crea una vista primitiva de un color sólido y la línea del mismo color.
            </summary>
            <param name="width">Ancho del rectángulo.</param>
            <param name="height">Alto del rectángulo.</param>
            <param name="color">Color del relleno y de la línea.</param>
        </member>
        <member name="M:Kriptok.Views.Base.GdipPrimitiveBase.#ctor(System.Single,System.Single,System.Drawing.Color,System.Drawing.Color,Kriptok.Views.GradientDirectionEnum)">
            <summary>
            Crea una vista primitiva de un color sólido y la línea del mismo color.
            </summary>
            <param name="width">Ancho del rectángulo.</param>
            <param name="height">Alto del rectángulo.</param>
        </member>
        <member name="M:Kriptok.Views.Base.GdipPrimitiveBase.#ctor(System.Single,System.Single,System.Nullable{System.Drawing.Color},System.Drawing.Color,System.Single)">
            <summary>
            Crea una vista primitiva de un color sólido y línea de distintos colores.
            </summary>
            <param name="width">Ancho del rectángulo.</param>
            <param name="height">Alto del rectángulo.</param>
            <param name="fillColor">Color del relleno.</param>
            <param name="lineColor">Color de la línea.</param>
        </member>
        <member name="T:Kriptok.Views.Base.IView">
            <summary>
            Interfaz principal que deben cumplir las clases que representen a los objetos del juego de
            una forma gráfica.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IView.SetOwner(Kriptok.Views.Base.IViewOwner)">
            <summary>
            Establece el objeto del cuál la vista debe tomar las propiedades para renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Base.IView.UpdateToRender(Kriptok.Regions.Context.Base.IRenderBufferContext)">
            <summary>
            Actualiza la vista para que se pueda renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IView.AddViews(Kriptok.Regions.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Agrega al "buffer de vistas" las subvistas que debe renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Base.IViewOwner">
            <summary>
            Interfaz a implemenar por objetos a los que se puede relacionar una vista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.IViewOwner.GetRotationAngle3D(Kriptok.Regions.Context.Base.IRenderContext)">
            <summary>
            Obtiene el ángulo de rotación tridimencional para vistas 2D.
            
            En escencia, el ángulo sobre el eje vertical para vistas 3D.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Base.ViewBase">
            <summary>
            Clase base para la construcción de nuevas vistas.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Base.ViewBase.localizable">
            <summary>
            Objeto utilizado para daterminar la posición donde se debe renderizar la vista.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Base.ViewBase.Owner">
            <summary>
            Objeto que utiliza la vista en cuestión.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Base.ViewBase.CalculatedLocation">
            <summary>
            Ubicación final donde se debe renderizar la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.ViewBase.SetOwner(Kriptok.Views.Base.IViewOwner)">
            <summary>
            Establece el objeto del cuál la vista debe tomar las propiedades para renderizar.
            </summary>
            <param name="entity">Entidad al cual se le está asignando la vista.</param>
        </member>
        <member name="M:Kriptok.Views.Base.ViewBase.UpdateToRender(Kriptok.Regions.Context.Base.IRenderBufferContext)">
            <summary>
            Actualiza la vista para que se pueda renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.ViewBase.GetLocation2D">
            <summary>
            Obtiene la ubicación donde se encuentra la vista a renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.ViewBase.GetRotationAngle2D">
            <summary>
            Obtiene el ángulo de rotación para vistas bidimensionales.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Base.ViewBase.Assembly">
            <summary>
            Ensamblado en el que se encuentra declarada la vista. Se utiliza para cargar registros.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.ViewBase.AddViews(Kriptok.Regions.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Agrega al "buffer de vistas" las subvistas que debe renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Base.ViewBase.GetRenderLocation">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Base.ViewBase.GetLocationZ">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Base.ViewBase.GetDrawOrder">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Base.ViewBase.GetAngleFromCamera(Kriptok.Regions.Context.Base.IRenderContext)">
            <summary>
            Obtiene el ángulo desde el cuál se está mirando la vista para entornos tridimensionales.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Gdip.Base.CustomGdipViewBase">
            <summary>
            Clase base para figuras custom renderizadas con GDI+.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.Base.CustomGdipViewBase.#ctor(System.Drawing.SizeF)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Gdip.Base.CustomGdipViewBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.Base.CustomGdipViewBase.#ctor(System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Gdip.Base.CustomGdipViewBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.Base.CustomGdipViewBase.Render(System.Drawing.Graphics)">
            <summary>
            Implementa la renderización de la figura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.Base.CustomGdipViewBase.Render(Kriptok.Regions.Context.Base.IRenderContext,Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Gdip.Base.CustomGdipViewBase.CustomGdipRenderizable">
            <summary>
            Renderizable interno customizado.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.Base.CustomGdipViewBase.CustomGdipRenderizable.DrawRecalculated(Kriptok.Regions.Context.Base.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Gdip.Base.CustomGdipViewBase.CustomGdipRenderizable.GetRectangle">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Gdip.Base.CustomGdipViewBase.CustomGdipRenderizable.GetSize">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Gdip.Base.GdipCenteredBase">
            <summary>
            Clase base intermedia entre <see cref="T:Kriptok.Views.Gdip.Base.GdipRenderizableBase"/> y sus derivadas,
            pero que agrega la propiedad <see cref="F:Kriptok.Views.Gdip.Base.GdipCenteredBase.center"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.Base.GdipCenteredBase.center">
            <summary>
            Punto central del objeto sobre el que se debe rotar y escalar.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Gdip.Base.IGdipView">
            <summary>
            Representa una vista estándar que se renderiza con GDI+.
            Y cumple con todas las propiedades estándar de una vista de estas características.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.Base.IGdipView.GetRectangle">
            <summary>
            Obtiene el rectángulo de renderización de la vista.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Gdip.Base.IScalableView2D">
            <summary>
            Indica que la vista puede redimensionarse al menos en dos dimensiones.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Gdip.Base.GdipRenderizableBase">
            <summary>
            Clase base para vistas que se renderizan en 2 dimensiones. Primitivas, imágenes, texto, etc.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.Base.GdipRenderizableBase.Flip">
            <summary>
            Indica si se debe invertir horizontal y/o verticalmente.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.Base.GdipRenderizableBase.Scale">
            <summary>
            Escalado de la figura.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.Base.GdipRenderizableBase.ReScale">
            <summary>
            Escalado de la figura.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Gdip.Base.GdipRenderizableBase.Center">
            <summary>
            Centro de la figura donde debe dibujarse la vista (en el caso de que la vista sea
            bidimensional).
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.Base.GdipRenderizableBase.SetProperties(Kriptok.Views.Base.GdipViewBase)">
            <summary>
            Este método copia las propiedades de una vista a otra,
            para renderizar todo junto con las mismas propiedades.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Gdip.Base.GdipRenderizableBase.GetHitbox(Kriptok.Entities.Base.EntityBase,Kriptok.Views.Base.ICollisionableRenderizable)">
            <summary>
            Obtiene la <see cref="T:Kriptok.Entities.Collisions.Coll2D.Hitbox2DBase"/> automática para este tipo de vista.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Gdip.GdipPath">
            <summary>
            Representa una vista con un polígono a definir.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipPath.#ctor(System.Drawing.Drawing2D.GraphicsPath,Kriptok.Views.FillConfig,Kriptok.Views.Shapes.IStroke)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Gdip.GdipPolygon"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipPath.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Gdip.GdipPolygon"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipPath.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Drawing.Color)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Gdip.GdipPolygon"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipPath.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,Kriptok.Views.FillConfig,Kriptok.Views.Shapes.IStroke)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Gdip.GdipPolygon"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Gdip.GdipSpriteListBase">
            <summary>
            Esta clase representa una colección de mapas de bits.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipSpriteListBase.#ctor">
            <summary>
            Constructor necesario para realizar la clonación.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipSpriteListBase.Add(System.Int32,Kriptok.Views.Sprites.Sprite)">
            <summary>
            Agrega un sprite a la vista indexada.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GradientEllipseParticle.rectangle">
            <summary>
            Rectángulo utilizado para la renderización.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Gdip.GdipText">
            <summary>
            Esta vista es utilizada para representar un texto en pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipText.size">
            <summary>
            Tamaño del texto a renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipText.textGraphicPath">
            <summary>
            Esta propiedad se utiliza cuando se tiene una fuente con borde, en lugar de escribir directamente en
            el Graphics, se utiliza un GraphicsPath.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipText.Message">
            <summary>
            Mensaje a mostrar.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Gdip.GdipPolygon">
            <summary>
            Representa una vista con un polígono a definir.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipPolygon.FillMode">
            <summary>
            Indica cómo se debe rellenar el polígono. Para más información ver <see cref="F:Kriptok.Views.Gdip.GdipPolygon.FillMode"/>.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipPolygon.Rounded">
            <summary>
            Indica si debe renderizar el polígono de forma "redondeada".
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipPolygon.#ctor(System.Drawing.PointF[],Kriptok.Views.FillConfig,Kriptok.Views.Shapes.IStroke)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Gdip.GdipPolygon"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipPolygon.#ctor(System.Drawing.PointF[],System.Drawing.Color)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Gdip.GdipPolygon"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipPolygon.#ctor(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Color)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Gdip.GdipPolygon"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipPolygon.#ctor(System.Drawing.PointF[],System.Drawing.RectangleF,Kriptok.Views.FillConfig,Kriptok.Views.Shapes.IStroke)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Gdip.GdipPolygon"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipPolygon.Split">
            <summary>
            Subdivide el polígono en varias vistas, cada una con una sola arista 
            de las que componen el polígono.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipPolygon.GetHitbox(Kriptok.Entities.Base.EntityBase,Kriptok.Views.Base.ICollisionableRenderizable)">
            <summary>
            
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Gdip.FlipEnum">
            <summary>
            Para figuras bidimensionales (Ver <see cref="!:GdipRenderizableBase"/>), indica si se la debe
            invertir horizontal y/o verticalmente.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.FlipEnum.None">
            <summary>
            No se invierte la figura de ninguna manera.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.FlipEnum.FlipX">
            <summary>
            La figura se invierte horizontalmente.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.FlipEnum.FlipY">
            <summary>
            La figura se invierte verticalmente.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.FlipEnum.FlipXY">
            <summary>
            La figura se invierte vertical y horizontalmente.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.FlipEnumExtensions.GetAngleMultiplier(Kriptok.Views.Gdip.FlipEnum)">
            <summary>
            Obtiene el multiplicador para la rotación de sprites.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Gdip.FlipEnumExtensions.GetTranslationMultiplierX(Kriptok.Views.Gdip.FlipEnum,System.Single)">
            <summary>
            Obtiene el multiplicador para aplicar a la coordenada X cuando se están calculando
            los límites horizontales para renderizar en un entorno Pseudo3D.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Gdip.FlipEnumExtensions.GetTranslationMultiplierY(Kriptok.Views.Gdip.FlipEnum,System.Single)">
            <summary>
            Obtiene el multiplicador para aplicar a la coordenada X cuando se están calculando
            los límites horizontales para renderizar en un entorno Pseudo3D.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Gdip.GdipIndexedSprite">
            <summary>
            Esta clase representa un Bitmap subdividido en partes iguales, indexados de izquierda a derecha
            y de arriba hacia abajo (sentido de lectura occidental).
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipIndexedSprite.index">
            <summary>
            Índice de imagen actual.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipIndexedSprite.images">
            <summary>
            Listado de imágenes indexadas.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.ClearCache">
            <summary>
            Limpia la cache de vistas indexadas.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.#ctor">
            <summary>
            Constructor necesario para realizar la clonación.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.Next">
            <summary>
            Avanza hacia el sigueinte sprite, si corresponde.
            </summary>        
            <returns>Devuelve <see cref="!:true"/> si pudo cambiar de sprite, y 
            <see cref="!:false"/> si ya estaba en el último.</returns>    
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.Next(System.Int32)">
            <summary>
            Avanza hacia el sigueinte sprite, si corresponde.
            </summary>        
            <returns>Devuelve <see cref="!:true"/> si pudo cambiar de sprite, y 
            <see cref="!:false"/> si ya estaba en el último.</returns>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.SetCenter(System.Int32,System.Drawing.PointF)">
            <summary>
            Establece el punto central de la imagen indicada por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.SetSprite(System.Int32,Kriptok.Views.Sprites.Sprite)">
            <summary>
            Establece o reemplaza un sprite en la vista indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.Add(Kriptok.Views.Sprites.Sprite)">
            <summary>
            Agrega un sprite a la lista.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.Add(Kriptok.Common.Resource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Agrega sprites a la lista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.GetSprite">
            <summary>
            Devuelve el sprite seleccionado actualmente.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipIndexedSprite.GenerateSpriteHitboxes">
            <summary>
            Genera la caja de colisión para el/los sprite/s.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Gdip.GdipSprite">
            <summary>
            Esta clase renderiza un sprite en pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Gdip.GdipSprite.Sprite">
            <summary>
            Objeto que contiene la imagen y la metadata 
            </summary>
        </member>
        <member name="P:Kriptok.Views.Gdip.GdipSprite.Size">
            <summary>
            Obtiene el tamaño de la imagen.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipSprite.DrawSpriteOn(System.Drawing.Graphics)">
            <summary>
            Este método se llama cuando hay que aplicar alguna transformación de color
            a la renderización de una imagen.
            </summary>   
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipSprite.DrawSwappedSpriteOn(System.Drawing.Graphics)">
            <summary>
            Este método se llama cuando hay que aplicar alguna transformación de color
            a la renderización de una imagen.
            </summary>   
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipSprite.GetCollisionSecondCheck">
            <summary>
            Obtiene un objeto que se encargará de realizar el segundo chequeo durante la evaluación
            de colisiones.
            
            Dependiendo de si la imagen ocupa o no todos los pixels.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Gdip.GdipSprite.GenerateSpriteHitboxes">
            <summary>
            Genera la caja de colisión para el/los sprite/s.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Primitives.PathView.#ctor(System.Drawing.Drawing2D.GraphicsPath,Kriptok.Views.FillConfig,Kriptok.Views.Shapes.IStroke)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Primitives.PathView"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Primitives.PathView.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Primitives.PathView"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Primitives.PathView.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,Kriptok.Views.FillConfig,Kriptok.Views.Shapes.IStroke)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Primitives.PathView"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Primitives.PolygonView.#ctor(System.Drawing.PointF[],Kriptok.Views.FillConfig,Kriptok.Views.Shapes.IStroke)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Primitives.PolygonView"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Primitives.PolygonView.#ctor(System.Drawing.PointF[],System.Drawing.Color)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Primitives.PolygonView"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Primitives.PolygonView.#ctor(System.Drawing.PointF[],System.Drawing.RectangleF,Kriptok.Views.FillConfig,Kriptok.Views.Shapes.IStroke)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Primitives.PolygonView"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Primitives.PolygonView.#ctor(Kriptok.Views.Gdip.GdipPolygon)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Primitives.PolygonView"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Primitives.PolygonView.Rounded">
            <summary>
            Indica si debe renderizar el polígono de forma "redondeada".
            </summary>
        </member>
        <member name="M:Kriptok.Views.Primitives.PolygonView.Split">
            <summary>
            Subdivide el polígono en varias vistas, cada una con una sola arista 
            de las que componen el polígono.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.GdipShapeCollection">
            <summary>
            Colección de figuras que componen las formas.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.GdipShapeCollection.shapes">
            <summary>
            Lista de figuras (incluye las partículas).
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.GdipShapeCollection.particles">
            <summary>
            Lista de partículas.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollection.#ctor">
            <summary>
            Para que no se puedan crear instancias de esta clase.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollection.Add``1(``0)">
            <summary>
            Agrega una figura a la colección.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollection.GetVisible(Kriptok.Regions.Context.Base.IRenderContext)">
            <summary>
            Obtiene un listado de las figuras visibles ya procesadas para renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollection.MergeVertices">
            <summary>
            Este método reagrupa los vértices que una o más figuras pueden compartir, para
            que no sea necesario transformar varios vértices que se encuentran en la}
            misma posición.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollection.Add(Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,System.Drawing.Color,System.Single)">
            <summary>
            Agrega a la figura, una línea que conecte dos vértices, en base a los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollection.Add(Kriptok.Views.Shapes.IStroke,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Agrega a la figura, una línea que conecte dos vértices, en base a los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollection.Add(Kriptok.Views.Shapes.IGdipTexture,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Agrega dos "tris" texturado basado en los cuatro puntos indicados.
            
            Se puede invertir la dirección de los triángulos, si se desea, indicándolo por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollection.SwapAllFaces">
            <summary>
            Invierte la normal de todas las caras de la figura tridimensional.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollection.RemoveShapesWhen(System.Func{Kriptok.Views.Shapes.Base.IShape,System.Boolean})">
            <summary>
            Este método permite remover caras de la figura tridimensional que cumplan con una determinada
            condición.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollection.ToArray">
            <summary>
            Obtiene todas las formas que componen la figura tridimensional.
            </summary>       
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollection.Dispose">
            <summary>
            Libera los recursos que se pudieran estar consumiendo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollection.ExtendBoundsToIncludeParticles2D(Kriptok.Regions.Context.Base.IRenderContext2D,Kriptok.Drawing.BoundF2)">
            <summary>
            Extiende los límites recibidos por parámetro para incluir los límites bidimencionales 
            de las partículas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollection.ExtendBoundsToIncludeParticles3D(Kriptok.Regions.Context.Base.IRenderContext3D,Kriptok.Drawing.BoundF2)">
            <summary>
            Extiende los límites recibidos por parámetro para incluir los límites bidimencionales 
            de las partículas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollection.GetParticleVertices">
            <summary>
            Obtiene un listado de todos los vértices que son utilizados por 
            partículas, para poder incluirlos al momento de calcular los límites
            de la figura tridimencional.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollection.ReplaceVertex(Kriptok.Views.Shapes.Vertices.Vertex3,Kriptok.Views.Shapes.Vertices.CalculatedVertex)">
            <summary>
            Reemplaza un vértice por un vértice calculado en todas las figuras donde se utilice.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.GdipShapeCollectionInitializer">
            <summary>
            Colección de figuras que componen las formas.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollectionInitializer.#ctor(Kriptok.Views.Shapes.Base.GdipShapeCollectionInitializer)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Base.GdipShapeCollectionInitializer"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollectionInitializer.Add(Kriptok.Views.Shapes.IStroke,System.Int32,System.Int32)">
            <summary>
            Agrega a la figura, una línea que conecte dos vértices, en base a los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollectionInitializer.GetVertices">
            <summary>
            Obtiene todos los vértices cargados hasta el momento.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipShapeCollectionInitializer.ReplaceVertex(Kriptok.Views.Shapes.Vertices.Vertex3,Kriptok.Views.Shapes.Vertices.CalculatedVertex)">
            <summary>
            Reemplaza un vértice por un vértice calculado en todas las figuras donde se utilice.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.Face3DBase">
            <summary>
            Cara genérica tridimensional de tres vértices.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.Face3DBase.isValid">
            <summary>
            Indica si la vista está completamente delante de la cámara para el siguiente frame.
            
            Esto obviamente sólo tiene sentido en interfaces tridimensionales.
            
            Si la cara es válida, los vértices los vértices <see cref="F:Kriptok.Views.Shapes.Base.Face3DBase.P0"/>, <see cref="F:Kriptok.Views.Shapes.Base.Face3DBase.P1"/> y <see cref="F:Kriptok.Views.Shapes.Base.Face3DBase.P2"/>
            tienen las coordenadas bidimensionales de la pantalla calculadas.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.IsVisible3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <summary>
            Método para filtrar la visibilidad de las vistas en entornos tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.BackFaceCull3D">
            <summary>
            Indica si la cara debe ser excluída de la renderización por "darle la espalda a la cámara".
            
            Este algoritmo sólo tiene sentido en tres dimensiones.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.IsVisible2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <summary>
            Método para filtrar la visibilidad de las vistas en entornos bidimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.BackFaceCulling2D">
            <summary>
            Indica si la cara debe ser excluída de la renderización por "darle la espalda a la cámara".
            
            Este algoritmo sólo tiene sentido en dos dimensiones dimensiones.
            
            Y re quiere que se pre-calculen los vétices <see cref="F:Kriptok.Views.Shapes.Base.Face3DBase.P0"/>, <see cref="F:Kriptok.Views.Shapes.Base.Face3DBase.P1"/> y <see cref="F:Kriptok.Views.Shapes.Base.Face3DBase.P2"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.IsInBounds(Kriptok.Regions.Context.Base.IRenderContext)">
            <summary>
            Este método chequea si los vértices de la figura están dentro de los límites de definidos de la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.Swap">
            <summary>
            Invierte la normal de la cara, para que sae visible desde el otro lado.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.GetVertex(System.Int32)">
            <summary>
            Obtiene el vértice indicado por su índice.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.IsInvalid">
            <summary>
            Se mantiene virtual para que los "quads" puedan agregar el V3.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.IsValid">
            <summary>
            Se mantiene virtual para que los "quads" puedan agregar el V3.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Base.Face3DBase.Vertices">
            <summary>
            Obtiene los vértices que componen la figura tridimensional.        
            Se mantiene virtual para que se pueda sobreescribir en los "quads".
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.GetTriangles2D(Kriptok.Regions.Context.Base.IProjector,Kriptok.Drawing.BoundF2,Kriptok.Drawing.Triangle3D)">
            <summary>
            Este método obtiene los triángulos bidimensinales que se deben renderizar
            en base a un triángulo tridimensional, ya clippeados contra el plano Z, y los
            bordes de la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.GetLocation2D">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Face3DBase.GetLocationZ">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.IRenderBranch">
            <summary>
            Esta interfaz indica que la vista en cuestión puede renderizarse en entornos bidimensionales y tridimencionales.    
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.IVisible">
            <summary>
            Interfaz que permite a una figura saber si es visible según una proyección determinada, o
            si está dentro de los límites de la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.IVisible.IsVisible2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <summary>
            Indica si la vista es visible en pantalla (o por lo menos a primera vista).
            
            Este método asume que los puntods son válidos (es decir, en un entorno tridimensional, están
            delante de la cámara.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.IVisible.IsVisible3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <summary>
            Indica si la vista es visible en pantalla (o por lo menos a primera vista).
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.IParticle">
            <summary>
            Representa un tipo de figura bidimensional para agregar a formas tridimencionales.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.ParticleBase">
            <summary>
            Clase base para partículas de figuras más complejas.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.ParticleBase.vertex">
            <summary>
            Vértice sobre el cual debe renderizar la partícula.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.ParticleBase.LastRenderBoundingBoxCalculated">
            <summary>
            Límites bidimencionales de la figura al momento de ser renderizado.
            
            Se utiliza principalmente para calcular la visibilidad en entornos tridimencionales.
                    
            Las partículas funcionan diferente a las otras vistas en este aspecto.
            En las demás figuras, se calcula en el <see cref="!:IVisible.IsVisible3D(IRenderContext3D, BoundF2)"/>,
            y luego se reutiliza.
            
            En las partículas, se calcula cuando se está analizando la visibilidad de la figura, y luego
            se vuelve a utilizar cuando se evalúa la visibilidad de la partícula.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.ParticleBase.LastCalculatedIsInFrontOfTheCamera">
            <summary>
            Última evaluación de la función <see cref="M:Kriptok.Views.Shapes.Base.ParticleBase.RecalculateBoundingBox(Kriptok.Regions.Context.Base.IProjector)"/>.
            
            Los límites y la posición con respecto a la cámara se calculan mientras se 
            está evaluando la visibilidad de la figura contenedora, y luego se reutilizan 
            al evaluar la visibilidad de la partícula en sí.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.#ctor(Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Base.ParticleBase"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.Base.ParticleBase.Vertices">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.Shapes.Base.ParticleBase.ScaleX">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.Shapes.Base.ParticleBase.ScaleY">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.GetLocation2D">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.GetLocationZ">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.IsVisible2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.IsVisible3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <summary>
            Notar que en esta implementación, no se calcula nada relacionado a la visibilidad,
            sólo se utilizan valores precalculados como <see cref="F:Kriptok.Views.Shapes.Base.ParticleBase.LastCalculatedIsInFrontOfTheCamera"/>
            y <see cref="F:Kriptok.Views.Shapes.Base.ParticleBase.LastRenderBoundingBoxCalculated"/> para resolver.
            
            Estos valores se precalculan antes en <see cref="M:Kriptok.Views.Shapes.Base.ParticleBase.IsNotBehindTheCamera(Kriptok.Regions.Context.Base.IRenderContext3D,Kriptok.Drawing.BoundF2@)"/>
            y <see cref="M:Kriptok.Views.Shapes.Base.ParticleBase.RecalculateBoundingBox(Kriptok.Regions.Context.Base.IProjector)"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.GetVertex(System.Int32)">
            <summary>
            Obtiene el vértice indicado por su índice.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.Project(Kriptok.Regions.Context.Base.IRenderContext)">
            <summary>
            Proyecta el vector calculado contra la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.Render2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.Render3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.RecalculateRenderBoundingBox(Kriptok.Regions.Context.Base.IProjector,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Calcula los límites de la pantalla que ocuparía la partícula al renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.IsNotBehindTheCamera(Kriptok.Regions.Context.Base.IRenderContext3D,Kriptok.Drawing.BoundF2@)">
            <summary>
            Indica si la partícula está visible (delante de la cámara), además recalcula la 
            caja de renderización.
            
            Guarda un valor que indica si está delante de la cámara o no, para que no tenga
            que volver a calcularse en <see cref="!:IsVisible3D(IRenderContext3D, BoundF2)"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.RecalculateBoundingBox(Kriptok.Regions.Context.Base.IProjector)">
            <summary>
            Recalcula la caja de renderización, y la almacena para posterior uso.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ParticleBase.GetRenderDistanceToCamera">
            <summary>
            Obtiene la distancia de la partícula a la cámara al momento de renderizar.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Particle`1.#ctor(`0,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Devuelve una nuva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Base.Particle`1"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.Base.Particle`1.Center">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.Shapes.Base.Particle`1.ScaleX">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.Shapes.Base.Particle`1.ScaleY">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.Shapes.Base.Particle`1.Flip">
            <inheritdoc/>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.Particle`1.Angle">
            <summary>
            Angulo de rotación de la figura bidimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Particle`1.Render2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.Particle`1.Render3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.PolygonFaceBase">
            <summary>
            Esta clase representa un polígono que se renderiza en tres dimensiones. Puede ser utilizado
            como las tapas de un <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> tridimensional, por ejemplo, como en la
            <see cref="T:Kriptok.Views.Shapes.FlatPathView"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.PolygonFaceBase.Dispose">
            <summary>
            Libera el graphicspath utilizado.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.QuadFace3D">
            <summary>
            Representa una cara de cuatro lados.    
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.QuadFace3D.GetPriority">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.QuadFace3D.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.Shapes.Base.QuadFace3D.Vertices">
            <summary>
            Obtiene los vértices que componen la figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.QuadFace3D.GetVertex(System.Int32)">
            <summary>
            Obtiene el vértice indicado por su índice.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.QuadFace3D.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipFace3DBase.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipFace3DBase.Render2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <summary>
            Renderiza la vista para entornos bidimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipFace3DBase.Render3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <summary>
            Renderiza la vista para entornos tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.GdipFace3DBase.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.FastShapeViewBase">
            <summary>
            Representa la clase base para figuras geométricas.
            
            Contiene todos los cálculos necesarios para ubicar puntos tridimensionales.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.FastShapeViewBase.rotable">
            <summary>
            Rotaciones a aplicar a la figura.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.FastShapeViewBase.Scale">
            <summary>
            Aplica transformaciones de escalamiento antes de rotar la figura.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.FastShapeViewBase.ReScale">
            <summary>
            Aplica transformaciones de escalamiento después de rotar la figura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.FastShapeViewBase.Translate2D(Kriptok.Regions.Context.Base.ITranslatableRenderContext)">
            <summary>
            Traslada el espacio de gráficos bidireccionales para que se pueda renderizar utilizando cualquier perspectiva,
            pero que siempre quede como si se renderizara en el centro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.FastShapeViewBase.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.FastShapeViewBase.RenderOn(Kriptok.Regions.Context.Base.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.FastShapeViewBase.ApplyRotations(Kriptok.Drawing.Algebra.Matrix3x4F,Kriptok.Common.Base.IRotable3D)">
            <summary>
            Permite customizar el orden en que se aplican las transformaciones de rotación.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.FastShapeViewBase.GetLastRenderBoundingBox">
            <summary>
            Obtiene la última caja de renderización calculada para esta figura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.FastShapeViewBase.ClosestPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ISwappable.Swap">
            <summary>
            Invierte la normal del polígono.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.IFace">
            <summary>
            Interfaz que representa una cara de una figura poligonal.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.IShape">
            <summary>
            Indica que se trata de una figura geométrica, es decir, que tiene vértices.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Base.IShape.Vertices">
            <summary>
            Obtiene los vértices que componen la figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.IShape.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.IShape.GetVertex(System.Int32)">
            <summary>
            Obtiene el vértice indicado por su índice.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.IShape.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.IShapeExtensions">
            <summary>
            Funcionalidades extra para figuras.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.IShapeExtensions.AllVertices(Kriptok.Views.Shapes.Base.IShape,System.Func{Kriptok.Views.Shapes.Vertices.Vertex3,System.Boolean})">
            <summary>
            Evalúa una condición todos los vértices de la figura, e indica si todos cumplen con la condición.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.VertexBase">
            <summary>
            Clase base para vértices de espacio tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.VertexBase.Transformed">
            <summary>
            Este es el punto transformado después de aplicar las transformaciones.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Base.VertexBase.IsInvalid">
            <summary>
            Indica si el vértice transformado quedó detrás de la cámara en interfaces 3D.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.VertexBase.CalculateBounds(Kriptok.Views.Shapes.Base.VertexBase[])">
            <summary>
            Obtiene los puntos máximos y mínimos de entre todos los vértices de la figura.
            </summary>
            <param name="vertices">Arreglo con todos los vértices de la figura.</param>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.VertexBase.GetLocation">
            <summary>
            Obtiene la ubicación no proyectada ni transformada del vértice.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.VertexBase.GetLocationZ">
            <summary>
            Obtiene la coordenada Z del vértice.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.VertexBase.SortClockwiseZX(System.Collections.Generic.IEnumerable{Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Ordena los vectoras en el sentido de las agujas del reloj.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.VertexBase.IncludeTransformedInVolume(Kriptok.Drawing.Shapes.Volume)">
            <summary>
            Utilizado para calcular los límites tridimencionales de las figuras jerárquicas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.VertexBase.IncludeLocationInVolume(Kriptok.Drawing.Shapes.Volume,Kriptok.Drawing.Algebra.Matrix3x4F)">
            <summary>
            Utilizado para calcular los límites tridimencionales de las figuras jerárquicas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.VertexBase.GetMinDistanceToCamera(Kriptok.Regions.Context.Base.IProjector)">
            <summary>
            Obtiene la mínima distancia del vértice hasta la cámara (para interfaces 3D).
            O bien, visto de otra forma, el vértice con mayor/menor prioridad, según corresponda.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Base.ShapeViewBase">
            <summary>
            Esta clase representa una figura tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.ShapeViewBase.vertices">
            <summary>
            Listado con todos los vértices de la figura que hay que transformar.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.ShapeViewBase.vertexCollection">
            <summary>
            Colección de vértices, utilizada para aplicar transformaciones masivas a los vértices.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Base.ShapeViewBase.LastRenderBoundingBoxCalculated">
            <summary>
            Límites bidimencionales de la figura al momento de ser renderizado.
            
            Se utiliza principalmente para calcular la visibilidad en entornos tridimencionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.#ctor(Kriptok.Views.Shapes.Base.VertexBase[])">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Base.ShapeViewBase"/>.
            </summary>
            <param name="vertices">Arreglo con todos los vértices de la figura.</param>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Base.ShapeViewBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.CreateBoundVertices(Kriptok.Views.Shapes.Base.VertexBase[])">
            <summary>
            Crea 8 vértices alrededor de la figura para determinar los límites de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.CreateBoundVertices(Kriptok.Drawing.Bound{Kriptok.Drawing.Algebra.Vector3F})">
            <summary>
            Obtiene una lista de vértices que se utilizarán para definir los límites
            de renderización de la figura. En este caso, es sólo un volumen tridimensional
            alrededor de todos los demás.
            
            Pero, de haber partículas, también deberían incluirse obligatoriamente esos 
            vértices, ya que también son utilizados para definir los límites de renderización.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.Clone">
            <summary>
            Devuelve un clon de la figura, clonando también todos los vértices.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Devuelve un clon de la figura, clonando también todos los vértices.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.TranslateTo000(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Translada todos los vértices equitativamente alrededor del origen de coordenadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.AddViews(System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable},Kriptok.Regions.Context.Base.IRenderBufferContext)">
            <summary>
            Invierto los parámetros para diferenciarla del otro método <see cref="M:Kriptok.Views.Shapes.Base.ShapeViewBase.AddViews(System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable},Kriptok.Regions.Context.Base.IRenderBufferContext)"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.IsVisible(Kriptok.Regions.Context.Base.IRenderBufferContext,Kriptok.Common.Box{Kriptok.Drawing.Algebra.Matrix3x4F})">
            <summary>
            Resuelve si la figura en su totalidad está visible en pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.IsBehindTheCamera">
            <summary>
            Para entornos tridimencionales, indica si la figura está completamente detrás de la cámara.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.SetVertices(Kriptok.Views.Shapes.Base.VertexBase[])">
            <summary>
            Guarda los vértices de la figura.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.CreateNewVertexCollection(Kriptok.Views.Shapes.Base.VertexBase[])">
            <summary>
            Inicializa la colección de vértices de la figura.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.TransformVertices(System.Func{Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F})">
            <summary>
            Nota:
            
            Ejecutar este método sólo después de haber terminado la inicialización de la figura.
            De lo contrario, puede que no encuentre todos los vértices agregados.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.GetVertices">
            <summary>
            Obtiene los vértices de la figura.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.IsVisible2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.RecalculateRenderBoundingBox2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <summary>
            Recalcula los límites de la figura para renderizar en 2D.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.IsVisible3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.RecalculateRenderBoundingBox3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <summary>
            Recalcula los límites de la figura para renderizar en 3D.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.GetLastRenderBoundingBox">
            <summary>
            Obtiene la última caja de renderización calculada para esta figura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Base.ShapeViewBase.ClosestPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Shapes.RenderizableGdipShapeViewBase">
            <summary>
            Figura tridimensional compuesta de figuras renderizaqdas con GDI+.
            
            Es una imlementación intermedia para otras figuras.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.RenderizableGdipShapeViewBase.Render3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Shapes.GdipShapeViewBase">
            <summary>
            Figura tridimensional compuesta de figuras renderizaqdas con GDI+.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.GdipShapeViewBase.shapes">
            <summary>
            Colección de figuras a renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.#ctor(Kriptok.Views.Shapes.Base.VertexBase[])">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.#ctor(Kriptok.Views.Shapes.Base.VertexBase[],System.Action{Kriptok.Views.Shapes.Base.GdipShapeCollectionInitializer})">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.InnerBuild(Kriptok.Views.Shapes.Base.GdipShapeCollectionInitializer)">
            <summary>
            Provee de un contexto para agregar figuras al modelo.        
            </summary>                
            <returns>Retorna los vértices a transformar al momento de renderizar la figura.</returns>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.SwapAllFaces">
            <summary>
            Invierte la normal de todas las caras de la figura tridimensional.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.CreateNewVertexCollection(Kriptok.Views.Shapes.Base.VertexBase[],Kriptok.Views.Shapes.Base.GdipShapeCollection)">
            <summary>
            Agrega el parámetro de la colección de las figuras.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.RenderOn(Kriptok.Regions.Context.Base.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.RenderShapes(Kriptok.Regions.Context.Base.IRenderContext)">
            <summary>
            Renderiza las figuras que componen la vista.
            </summary>     
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.AddBoundWiresTo(Kriptok.Regions.Context.Base.IRenderContext,System.Collections.Generic.IEnumerable{Kriptok.Views.Shapes.Base.IShape})">
            <summary>
            Permite agregar vistas de renderización en modos de debug.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.GetShapes">
            <summary>
            Obtiene todas las formas que componen la figura tridimensional.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            
            Por defecto devuelve <see cref="!:false"/>, pero puede sobreescribirse para figuras que convexas 
            realicen menos cálculos a la hora de renderizarse.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.Dispose">
            <summary>
            Libera todas las figuras creadas por esta vista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.Render2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <summary>
            Renderiza la figura tridimencional, en un entorno bidimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.Render3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <summary>
            Renderiza la figura tridimensional en un entorno tridimencional.
            
            No aplica ningún efecto por distancia. Eso dependerá de ser implementado en clases derivadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.RecalculateRenderBoundingBox2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <summary>
            Este tipo de figuras permite que se agreguen "partículas", y por tanto, también deben ser incluídas
            para calcular los límites de la figura.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.RecalculateRenderBoundingBox3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <summary>
            Este tipo de figuras permite que se agreguen "partículas", y por tanto, también deben ser incluídas
            para calcular los límites de la figura.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeViewBase.RemoveShapesWhen(System.Func{Kriptok.Views.Shapes.Base.IShape,System.Boolean})">
            <summary>
            Este método permite remover caras de la figura tridimensional que cumplan con una determinada
            condición.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.IndexedSpriteParticle">
            <summary>
            Partícula de sprites indexados.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.IndexedSpriteParticle.#ctor(Kriptok.Views.Shapes.Base.VertexBase,System.Reflection.Assembly,System.String,System.Int32,System.Int32)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.IndexedSpriteParticle"/>.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.MaterialData">
            <summary>
            Datos de iluminación de un material.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.MaterialData.None">
            <summary>
            Ningún tipo de sombreado.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.MaterialData.Shaded">
            <summary>
            Sombreado que llega hasta el negro total.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.MaterialData.AffectedByLight">
            <summary>
            Indica si el material se ve afectado pro la luz ambiental.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MaterialData.Build(System.Single,System.Single,System.Single,System.Byte,System.Single)">
            <summary>
            Crea un material con las propiedades indicadas por parámetro.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.MaterialData.Diffuse">
            <summary>
            Valor entre 0..1 que indica cuánto es el efecto de la luz direccional sobre la cara.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.MaterialData.Emission">
            <summary>
            Valor entre 0..1 que indica el mínimo valor de iluminación que puede tener la cara.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.MaterialData.Specular">
            <summary>
            Valor entre 0..1 que indica la intensidad del reflejo de luz de la cara.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.MaterialData.SpecularPower">
            <summary>
            Valor entre 0..100 que indica la concentración del reflejo de luz sobre la cara.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.MaterialData.Ambient">
            <summary>
            Valor entre 0..1 que indica qué tan afectado se ve el material por la iluminación ambiental.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.MqoBuilder">
            <summary>
            Utilizado para cargar un modelo MQO en memoria.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MqoBuilder.#ctor(System.Reflection.Assembly,System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.MqoBuilder"/>
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.MqoBuilder.#ctor(Kriptok.Common.ITextResource)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.MqoBuilder"/>
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.MqoBuilder.#ctor(System.Reflection.Assembly,System.String,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.MqoBuilder"/>
            pero sólo lee uno de los objetos, especificado por su Id.
            </summary>
            <param name="assembly">Ensamblado en el que se encuentra el modelo.</param>
            <param name="resourceName">Nombre del recurso del modelo.</param>
            <param name="mqoObjectId">Id del objeto MQO a cargar.</param>
        </member>
        <member name="M:Kriptok.Views.Shapes.MqoBuilder.FindLine(System.String[],System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="textLines"></param>
            <param name="regex"></param>
            <param name="fromLine"></param>
            <param name="toLine"></param>
            <returns>Devuelve el numero de línea buscado, o -1 si no se encuentra.</returns>
        </member>
        <member name="T:Kriptok.Views.Shapes.ShapeVertexCollection">
            <summary>
            Colección de vértices que agrega funcionalidad para cálculo de bounding-boxes.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.ShapeVertexCollection.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.ShapeVertexCollection"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.ShapeVertexCollection.#ctor(System.Collections.Generic.IEnumerable{Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.ShapeVertexCollection"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.ShapeVertexCollection.#ctor(Kriptok.Views.Shapes.Base.VertexBase[])">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.ShapeVertexCollection"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.ShapeVertexCollection.#ctor(System.Collections.Generic.IEnumerable{Kriptok.Views.Shapes.Base.VertexBase}[])">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.ShapeVertexCollection"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.ShapeVertexCollection.RecalculateRenderBoundingBox2D(Kriptok.Regions.Context.Base.IProjector)">
            <summary>
            Obtener el bounding-box en 2D es mucho más simple que en 3D.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.ShapeVertexCollection.BehindTheCamera">
            <summary>
            Indica si todos los vértices de la colección están detrás de la cámara.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.BackgroundVertexCollection">
            <summary>
            Colección de vértices utilizada para fondos tridimencionales que deben
            renderizarse alrededor de la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.BackgroundVertexCollection.#ctor(Kriptok.Views.Shapes.Base.VertexBase[])">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.BackgroundVertexCollection"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.BackgroundVertexCollection.Update(Kriptok.Regions.Context.Base.IRenderBufferContext,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Aplica las transformaciones sobre los vértices tridimensionales
            para que puedan ser proyectados a la cámara.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.VertexCollectionBounded">
            <summary>
            Colección de vértices con implementación concreta de "bounding-box" para modelos estáticos.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.VertexCollectionBounded.boundVertices">
            <summary>
            Vértices que componen los límites de la figura.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.VertexCollectionBounded.boundWires">
            <summary>
            Acá almaceno los pares ordenados de líneas que componen los límites de la figura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollectionBounded.CreateBoundVertices(Kriptok.Views.Shapes.Base.VertexBase[],Kriptok.Views.Shapes.Base.GdipShapeCollection)">
            <summary>
            Crea 8 vértices alrededor de la figura para determinar los límites de renderización.
            
            Es virtual para permitir agregar vértices de partículas que siempre se tienen que recalcular.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollectionBounded.TransformBoundVertices(Kriptok.Common.Box{Kriptok.Drawing.Algebra.Matrix3x4F})">
            <summary>
            Aplica las transformaciones indicadas a los vértices que componen
            la caja de límites.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollectionBounded.GetAllTransformableVertices">
            <summary>
            Obtiene la lista de vértices a los cuales se les debe aplicar una transformación estática.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollectionBounded.InvalidBounds">
            <summary>
            Indica si los vértices clave están todos detrás de la cámara.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollectionBounded.RecalculateRenderBoundingBox2D(Kriptok.Regions.Context.Base.IProjector)">
            <summary>
            La implementación es la misma, pero se utilizan los vértices de los límites
            en lugar de los vértices de la figura.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollectionBounded.RecalculateRenderBoundingBox3D(Kriptok.Regions.Context.Base.IProjector)">
            <summary>
            Obtiene los límites bidimensionales de renderización de la figura.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollectionBounded.GetBoundVertices">
            <summary>
            Obtiene los vértices que componen los "límites" tridimencionales de la figura.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertex">
            <summary>
            Rama de un esqueleto de vistas jerárquicas.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertex.RotateX(System.Single)">
            <summary>
            Rota el vérice sobre el eje X.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertex.RotateY(System.Single)">
            <summary>
            Rota el vérice sobre el eje Y.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertex.RotateZ(System.Single)">
            <summary>
            Rota el vérice sobre el eje Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertex.SetRotationY(System.Single,System.Single)">
            <summary>
            Rota el vértice verticalmente para que apunte a la posición calculada en base a la distancia y la altura
            </summary>
            <param name="distance">Distancia hasta la ubicación a la que se desea "apuntar" verticalmente.</param>
            <param name="heightZ">Altura a la cuál se encuentra el punto al que se desea apuntar verticalmente.</param>
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertex.GetAngleRotationToY(System.Single,System.Single)">
            <summary>
            Obtiene el ángulo de rotación necesario
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertexBase">
            <summary>
            Clase base para vértices jerárquicos.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertexBase.AppendH(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Agrega un vértice jerárquico en base al vector indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertexBase.AppendH(System.Single,System.Single,System.Single)">
            <summary>
            Agrega un vértice jerárquico en base a las coordenadas indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertexBase.GetTransformMatrix(Kriptok.Drawing.Algebra.Matrix3x4F)">
            <summary>
            Obtiene la matriz de transformación para este vértice.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertexBase.GetCalculatedLocation">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertexBase.GetMinDistanceToCamera(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Shapes.Vertices.HierarchicalLeafVertex">
            <summary>
            Hoja de un árbol de vértices jerárquicos.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.HierarchicalLeafVertex.GetCalculatedLocation">
            <summary>
            Obtien la ubicación tridimencional del vértice jerárquico aplicando todas las transformaciones
            de todos los vértices jerárquicos que lo afectan.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Vertices.HierarchicalRootVertex">
            <summary>
            Vértice principal de vistas jerárquicas.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Vertices.Vertex25Base">
            <summary>
            Representa una clase base para vértices de 2.5 dimensiones.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Vertices.Vertex25Base.pivot">
            <summary>
            Punto de apoyo bidimensional del vértice de 2.5 dimensiones.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.Vertex25Base.#ctor(Kriptok.Drawing.Vertex2)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Vertices.Vertex25Base"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.Vertex25Base.#ctor(Kriptok.Views.Shapes.Vertices.Vertex25Base)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Vertices.Vertex25Base"/>,
            utilizando como pivote el pivote del vértice indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.Vertex25Base.GetPivot">
            <summary>
            Obtiene el pivote.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.Vertex25Base.GetDistance2D(Kriptok.Views.Shapes.Vertices.Vertex25Base,Kriptok.Views.Shapes.Vertices.Vertex25Base)">
            <summary>
            Calcula la distancia bidimensional entre dos vértices de 2.5 dimensiones.
            </summary>    
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.Vertex25Base.SamePivot(Kriptok.Views.Shapes.Vertices.Vertex25Base)">
            <summary>
            Indica si ambos vértices comparten el mismo pivot.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Vertices.Vertex25Normal">
            <summary>
            Representa un tipo de vértice para entorno Pseudo3D que además tiene una normal.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.Vertex25Normal.#ctor(Kriptok.Views.Shapes.Vertices.Vertex25Normal)">
            <summary>
            Constructor utilizado para poder reutilizar el pivot de uno de los vértices.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.Vertex25Normal.GetNormal">
            <summary>
            Obtiene la normal asociada a este vértice.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.Vertex25.#ctor(Kriptok.Views.Shapes.Vertices.Vertex25)">
            <summary>
            Constructor utilizado para poder reutilizar el pivot de uno de los vértices.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Vertices.IHierarchicalVertex">
            <summary>
            Interfaz para englobar todos los vértices jerárquicos.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.IHierarchicalVertex.GetCalculatedLocation">
            <summary>
            Obtiene la ubicación calculada del vértice en el entorno tridimensional.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Vertices.CalculatedVertex">
            <summary>
            Representa un vértice cuya transformación es buscar el punto intermedio
            entre varios vértices.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Vertices.CalculatedVertex.vertices">
            <summary>
            Indica los puntos en base a los cuales debe promediar su posición.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Vertices.CalculatedVertex.verticesDivisor">
            <summary>
            Inverso de la cantidad de vértices por los que habría que dividir
            para calcular el promedio.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Vertices.CalculatedVertex.#ctor(Kriptok.Views.Shapes.Base.VertexBase[])">
            <summary>        
            </summary>
            <param name="vertices">Indica los puntos en base a los cuales debe promediar su posición.</param>
        </member>
        <member name="T:Kriptok.Views.Shapes.Vertices.Vertex3">
            <summary>
            Representa un vértice tridimensional.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Vertices.Vertex3.Location">
            <summary>
            Punto base de las coordenadas, antes de transformar.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Wireframe.WireframeTriFace3D">
            <summary>
            Cara tridimencional que incorpora un delineado alrededor de la figura.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Wireframe.WireframeHalfQuadFace3D">
            <summary>
            Cara tridimencional que incorpora un delineado alrededor de la figura.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Wireframe.FlatSphereView">
            <summary>
            Vista que representa una "esfera" con meridianos y paralelos.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Wireframe.WireframeOctahedronView">
            <summary>
            Octaedro tridimensional sólo con lineas.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Wireframe.WireframeSphereView">
            <summary>
            Vista que representa una "esfera" con meridianos y paralelos.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Wireframe.WireframePlaneView">
            <summary>
            Representa rectangulo tridimensional dividido en secciones.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Wireframe.WireframePlaneView.#ctor(System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Wireframe.WireframePlaneView"/>
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA0100">
            <summary>
            Este material representa un color fijo.
            
            Alpha       = 
            Diffuse     =   0f
            Emission    =   1f
            Specularity =   0f
            Power       =   0b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA0E00">
            <summary>
            Este material representa un color fijo.
            
            Alpha       = 
            Diffuse     =   0f
            Emission    =   
            Specularity =   0f
            Power       =   0b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat0">
            <summary>
            Material simple, sin decoraciones.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat1">
            <summary>
            Material que aplica una transformación en base a la incidencia de la luz.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat2">
            <summary>
            Material que aplica dos transformaciones en base a dos decorados.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat11E000">
            <summary>    
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   0f
            Power       =   0b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat110100">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
            
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   1f
            Power       =   0b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA10100">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
                
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   1f
            Power       =   0b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat110110">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
            
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   1f
            Power       =   1b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA10110">
            <summary>       
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   1f
            Power       =   1b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat1101P0">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
            
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   1f
            Power       =   
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA101P0">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
                
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   1f
            Power       =   
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat110S10">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
            
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   
            Power       =   1b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA10S10">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
                
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   
            Power       =   1b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat110S00">
            <summary>
            Básicamente lo que hace este material es aplicar specularity.
            
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   
            Power       =   0
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA10S00">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
            
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   
            Power       =   0
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat110SP0">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
            
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   
            Power       =   
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA10SP0">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
                
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   
            Power       =   
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.Mat110000">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
            
            Alpha       = 255b
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   0f
            Power       =   0b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MatA10000">
            <summary>
            Básicamente lo que hace este material es reducir la intensidad, asumiendo:
                
            Diffuse     =   1f
            Emission    =   0f
            Specularity =   0f
            Power       =   0b
            Ambient     =   0f
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Mats.MaterialAD10P0">
            <summary>
            Esta clase representa un color básico, no se ve afectado por la luz direccional.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.MeshBuilderBase.instancedTextures">
            <summary>
            Texturas instanciadas para crear el modelo tridimencional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.#ctor(Kriptok.Common.ITextResource)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.MeshBuilderBase"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.#ctor(Kriptok.Common.ITextResource,Kriptok.Common.Initializer)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.MeshBuilderBase"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.MeshBuilderBase.Vertices">
            <summary>
            Vértices que componen la figura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.SimplifyKey(System.String)">
            <summary>
            "simplifica" las claves de las texturas utilizadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.TranslateZ(System.Single)">
            <summary>
            Traslada todos los vértices en el eje Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.TranslateXY(System.Single,System.Single)">
            <summary>
            Traslada la malla sobre los ejes X e Y.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.TranslateTransform(Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Traslada la malla sobre los ejes X, Y y Z.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.TranslateTransform(System.Single,System.Single,System.Single)">
            <summary>
            Traslada la malla sobre los ejes X e Y.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.TranslateToCenter(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Translada toda la figura a la coordenada (0, 0, 0).
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.ProcessFileAsModel(Kriptok.Common.Initializer,System.String[])">
            <summary>
            Este método implementa el parseo del archivo.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.MeshBuilderBase.Faces">
            <summary>
            Obtiene todas las caras generadas para el modelo.
            </summary>   
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.SwapAllFaces">
            <summary>
            Invierte las normales de todas las caras de la figura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.InstanceTextureFor(Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderFace,System.Collections.Generic.IDictionary{System.String,Kriptok.Views.Shapes.TextureResource})">
            <summary>
            Instancia la textura utilizada en la cara indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderVertex.GetLocationZ">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderFace.Vertices">
            <summary>
            Obtiene los tres vértices que conforman la cara.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderFace.MaterialId">
            <summary>
            Obtiene el Id del material que utiliza esta cara.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderFace.IsTexturedFace">
            <summary>
            Indica si la cara es texturada.
            </summary>            
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderFace.Swap">
            <summary>
            Invierte la normal de la cara.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderFace.ThrowMissingTextureException">
            <summary>
            Lanza una excepción de que no se ha encontrado información del recurso.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderMaterial">
            <summary>
            Material de modelo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderTexture.Instance(Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderMaterial,System.Collections.Generic.IDictionary{System.String,Kriptok.Views.Shapes.TextureResource})">
            <summary>
            Instancia la textura.
            </summary>            
        </member>
        <member name="M:Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderTexture.ThrowMissingTextureException">
            <summary>
            Lanza una excepción de que no se ha encontrado información del recurso.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.SpaceShipMeshView">
            <summary>
            Vista de una simple nave espacial poligonal, simple y básica.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.TextureResource">
            <summary>
            Representa un recurso de textura para utilizar con modelos texturados.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Textured.TexturedSphereView">
            <summary>
            Vista que representa una "esfera" con meridianos y paralelos.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Textured.PlotTexturedPolygonView">
            <summary>
            Representa un polígono tridimensional texturado.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Textured.TexturedTerrainView">
            <summary>
            Esta vista representa una montaña tridimensional con textura basado en una cuadrícula.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Textured.TexturedTerrainView.#ctor(Kriptok.Mapping.Terrains.ITerrainData,System.Reflection.Assembly,System.String,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Textured.TexturedTerrainView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textured.TexturedTerrainView.#ctor(Kriptok.Mapping.Terrains.ITerrainData,Kriptok.Views.Shapes.TextureBuilder,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Textured.TexturedTerrainView"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Textured.TexturedTerrainView.#ctor(Kriptok.Mapping.Terrains.ITerrainData,Kriptok.Views.Shapes.TextureBuilder,System.Drawing.Size,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Textured.TexturedTerrainView"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Textured.TexturedTerrainView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            
            Los terrenos son en principio no convexos. Puede ser que hay algún terreno convexo, pero en general
            se infiere que no será el caso.
            </summary>      
        </member>
        <member name="M:Kriptok.Views.Shapes.Textured.TexturedTerrainView.RemoveY0Faces">
            <summary>
            Remueve las caras que tiene Y = 0 en todas los vértices.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.TexturedTriFace3DClippable">
            <summary>
            Esta forma representa un polígono de tres caras con una textura aplicada.
            
            La particularidad es que esta figura se "clippea" contra el eje Z.
            Esto se debe a que si el polígono es muy grande, puede producir errores al clippearse.
            Por tanto sólo se debe usar en instancias controladas donde los polígonos sean de tamaño moderado.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DClippable.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DClippable.FillClipping(Kriptok.Regions.Context.Base.IRenderContext,Kriptok.Views.Shapes.IGdipTexture,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint)">
            <summary>
            Utiliza una textura para llenar una determinada región de la pantalla, con las
            coordenadas indicadas por parámetro.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Meshes.cache">
            <summary>
            Cache de recursos parseados.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Meshes.ClearCache">
            <summary>
            Limpia los modelos cargados en memoria.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Meshes.Load(System.String)">
            <summary>
            Esta forma de cargar modelos sólo está disponible para la carga de archivos en memoria
            para programas de edición. En los juegos deben utilizarse recursos embebidos.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Meshes.Build(System.Reflection.Assembly,System.String)">
            <summary>
            Carga un recurso base como modelo 3D.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Meshes.Build(System.String)">
            <summary>
            Carga un recurso base como modelo 3D.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.TexturedTriFace3DBase">
            <summary>
            Esta forma representa un polígono de tres vértices con una textura aplicada.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TexturedTriFace3DBase.texture">
            <summary>
            Textura utilizada para renderizar.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TexturedTriFace3DBase.Swapped">
            <summary>
            Las caras texturadas no swappean a nivel vector, sólo invierten el valor del
            <see cref="!:GdipFace3DBase.IsVisible"/> ya que al swappearlo también cambarían las coordenadas
            de mapeo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DBase.#ctor(Kriptok.Views.Shapes.IGdipTexture,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.TexturedTriFace3DBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DBase.#ctor(Kriptok.Views.Shapes.TexturedTriFace3DBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.TexturedTriFace3DBase"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.TexturedTriFace3DBase.TextureWidth">
            <summary>
            Ancho de la textura.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.TexturedTriFace3DBase.TextureHeight">
            <summary>
            Alto de la textura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DBase.Swap">
            <summary>
            Invierte la normal del polígono.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DBase.SetTexture(Kriptok.Views.Shapes.IGdipTexture)">
            <summary>
            Permite establecer una nueva textura para el polígono.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DBase.BackFaceCulling2D">
            <summary>
            Indica si la normal del polígono apunta hacia la cámara.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DBase.BackFaceCull3D">
            <summary>
            Indica si la cara debe ser excluída de la renderización por "darle la espalda a la cámara".
            
            Este algoritmo sólo tiene sentido en tres dimensiones.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DBase.GetTexture(Kriptok.Regions.Context.Base.IRenderContext)">
            <summary>
            Obtiene la textura para renderizar.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.TexturedTriFace3DUV">
            <summary>
            Esta forma representa un polígono de tres caras con una textura aplicada.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TexturedTriFace3DUV.matrix">
            <summary>
            Matriz de transformación a aplicar en el renderizado.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TexturedTriFace3DUV.unitaryRectangle">
            <summary>
            Rectángulo unitario.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DUV.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3DUV.GetUV(System.Single,System.Single)">
            <summary>
            Invierte un par de coordenadas y recupera los UV originales.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.VertexCollection">
            <summary>
            Colección de vértices.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollection.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.VertexCollection"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollection.#ctor(System.Collections.Generic.IEnumerable{Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.VertexCollection"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollection.#ctor(Kriptok.Views.Shapes.Base.VertexBase[])">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.VertexCollection"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollection.#ctor(System.Collections.Generic.IEnumerable{Kriptok.Views.Shapes.Base.VertexBase}[])">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.VertexCollection"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.VertexCollection.Vertices">
            <summary>
            Obtiene la colección de vértices para ser utilizada por clases derivadas.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollection.Update(Kriptok.Regions.Context.Base.IRenderBufferContext)">
            <summary>
            Aplica las transformaciones sobre los vértices tridimensionales
            para que puedan ser proyectados a la cámara.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollection.UsingVertexCollection(Kriptok.Views.Shapes.Base.VertexBase[],System.Action{Kriptok.Views.Shapes.VertexCollection})">
            <summary>
            Instancia una <see cref="T:Kriptok.Views.Shapes.VertexCollection"/> para realizar transformaciones
            masivas a una colección de vértices.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollection.UsingVertexCollection(Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderVertex[],System.Action{Kriptok.Views.Shapes.VertexCollection})">
            <summary>
            Instancia una <see cref="T:Kriptok.Views.Shapes.VertexCollection"/> para realizar transformaciones
            masivas a una colección de vértices.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollection.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.VertexCollection.GetAllTransformableVertices">
            <summary>
            Obtiene la lista de vértices a los cuales se les debe aplicar una transformación estática.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Texts.GdipTextureOptions">
            <summary>
            Estructura utilizada para definir la creación de texturas.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Texts.GdipTextureOptions.Default">
            <summary>
            Valores por default para la textura. No aplica ningún tipo de sombreado ni transformación.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.GdipTextureOptions.Options">
            <summary>
            Opciones de renderización.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.GdipTextureOptions.RotateFlip">
            <summary>
            Transformación a aplicar al momento de cargar la textura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.GdipTextureOptions.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.GdipTextureOptions.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Shapes.Texts.TextureOptions">
            <summary>
            Estructura con opciones para creación de texturas.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Texts.TextureOptions.None">
            <summary>
            Ningún tipo de sombreado ni rotación.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Texts.TextureOptions.Shaded">
            <summary>
            Sin rotación pero con sombreado que llega hasta el negro total.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.TextureOptions.Alpha">
            <summary>
            Valor entre 0..1 que indica la opacidad del material.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.TextureOptions.Lightning">
            <summary>
            Indica si la textura se debe ver afectada por la luz ambiental.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.TextureOptions.WrapMode">
            <summary>
            Opciones internas.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.TextureOptions.AffectedByLight">
            <summary>
            Indica si el material se ve afectado pro la luz ambiental.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.TextureOptions.ToString">
            <inheritdoc/>
        </member>
        <member name="F:Kriptok.Views.Shapes.Texts.TextureOptions.Axonometric">
            <summary>
            Indica si se debe generar una textura que pueda renderizar polígonos de cuatro lados
            con perspectiva axonométrica.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.TextureOptions.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.GdipTextureShade.FullBlackShade.Size">
            <summary>
            Implementado para evitar errores.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.SampleTextureShade.FullBlack">
            <summary>
            Obtiene una textura completamente negra.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTextureShade.SetShade(System.UInt32)">
            <summary>
            Establece el nivel de incidencia de la luz ambiental sobre la figura a renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTextureShade.ToAffineTexture">
            <summary>
            Transforma la textura en una textura de tipo <see cref="T:Kriptok.Views.Shapes.IGdipTexture"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTextureShade.WithShade(System.UInt32)">
            <summary>
            Obtiene una textura adaptada a la luz ambiental actual, si es que
            esta la toma en cuenta.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.GdipTextureBase.Animated">
            <summary>
            Por defecto, estas texturas no son animadas.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Texts.ITexture">
            <summary>
            Representa una textura general con la que llenar una región determinada.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.ITexture.Size">
            <summary>
            Obtiene el tamaño de la textura.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.ITexture.Animated">
            <summary>
            Indica si se trata de una textura animada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.ITexture.UpdateTile(System.Int32)">
            <summary>
            Actualiza la animación de un tile animado.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.IShadedTexture`1.WithShade(System.UInt32)">
            <summary>
            Obtiene una textura adaptada a la luz ambiental actual, si es que
            esta la toma en cuenta.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.ITextureExtensions.NullOrDisposed(Kriptok.Views.Shapes.Texts.ITexture)">
            <summary>
            Indica si la refencia es null, o bien ha sido limpiada de memoria.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.ITextureExtensions.HasBeenDisposed(Kriptok.Views.Shapes.Texts.ITexture)">
            <summary>
            Indica si se ha descargado de memoria.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.SampleTexture.Animated">
            <summary>
            Indica si la textura tiene más de un fotograma. Es decir, si es animada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.SampleUW(System.Int32,System.Int32)">
            <summary>
            Este método asume que la coordenada V puede estar no-tileada, pero siempre es positiva.
            </summary>         
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.UpdateTile(System.Int32)">
            <summary>
            Actualiza la textura animada al estado indicado por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.GetThumbnail">
            <summary>
            Obtiene un bitmap correspondiente a la imagen que está actualmente seleccionada.
            
            Uso un formato RGB, ya que se utiliza para los editores de mapas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.ClearCache">
            <summary>
            Limpia la caché de las texturas cargadas.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.GetFastBitmaps">
            <summary>
            Devuelve una lista con todas las imágenes 
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.GetFastBitmap">
            <summary>
            Devuelve la imagen seleccionada actualmente.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.SetShade(System.UInt32)">
            <summary>
            Establece el nivel de incidencia de la luz ambiental sobre la figura a renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.ToAffineTexture">
            <summary>
            Transforma la textura en una textura de tipo <see cref="T:Kriptok.Views.Shapes.IGdipTexture"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.SampleTexture.WithShade(System.UInt32)">
            <summary>
            Obtiene una textura adaptada a la luz ambiental actual, si es que
            esta la toma en cuenta.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Texts.GdipTextureBrush.Animated">
            <summary>
            Indica si la textuar actual es animada.
            La textura se considera "animada" si tiene más de una imagen sobre la que iterar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.GdipTextureBrush.FillHorizontal(System.Drawing.Graphics,System.Drawing.Drawing2D.Matrix,System.Int32,System.Int32,System.Int32)">
            <summary>
            Llena una línea horizontal con la transformación indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.GdipTextureBrush.CastY(System.Single)">
            <summary>
            Utilizado para centralizar la transformación de float a int necesaria
            en esta clase.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Texts.GdipTextureBrush.WithShade(System.UInt32)">
            <summary>
            Obviamente se retorna a sí misma.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Texts.GdipTextureBrush.GdipTextureBrushAxonometric">
            <summary>
            Tipo de textura especial que para rellenar áreas "rectangulares" en lugar de triangulares.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.ISampleTexture">
            <summary>
            Representa una textura que se utilizar para renderizar figuras pixel por pixel.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.ISampleTexture.Sample(System.Int32,System.Int32)">
            <summary>
            Obtiene el valor de color de la posición indicada por los parámetros.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.ISampleTexture.SampleUW(System.Int32,System.Int32)">
            <summary>
            Obtiene el valor de color de la posición indicada por parámatro,
            asumiendo que la coordenada Y es siempre positiva.
            </summary>                 
        </member>
        <member name="M:Kriptok.Views.Shapes.ISampleTexture.SetShade(System.UInt32)">
            <summary>
            Establece el nivel de incidencia de la luz ambiental sobre la figura a renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.ISampleTexture.ToAffineTexture">
            <summary>
            Transforma la textura en una textura de tipo <see cref="T:Kriptok.Views.Shapes.IGdipTexture"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.ISampleTexture.TileU(System.Int32)">
            <summary>
            Calcula la coordenada real de la textura sobre el largo de la misma.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.ISampleTexture.GetThumbnail">
            <summary>
            Obtiene un bitmap de la primer imagen de la textura (la primera, si es animada).
            Utilizado por el editor de mapas.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.ISampleTextureExtensions">
            <summary>
            Extensiones para la interfaz <see cref="T:Kriptok.Views.Shapes.ISampleTexture"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.ISampleTextureExtensions.WithNoShade(Kriptok.Views.Shapes.ISampleTexture)">
            <summary>
            Obtiene la textura sin ningún tipo de sombreado.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.IStroke">
            <summary>
            Interfaz que representa el "trazo" para figuras tipo wireframe.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.IStroke.Color">
            <summary>
            Color base del trazo.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.IStroke.Width">
            <summary>
            Ancho del trazo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.IStroke.SetColor(System.Drawing.Color)">
            <summary>
            Establece el color "base" del trazo.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.IStroke.LineJoin">
            <summary>
            Estilo de "unión" entre trazos.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.IStroke.DashStyle">
            <summary>
            Estilo de interlineado.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Strokes">
            <summary>
            Clase para la generación de trazos.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Strokes.strokes">
            <summary>
            Trazos creados hasta el momento. Utilizado tipo "cache".
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Strokes.Get(System.Drawing.Color)">
            <summary>
            Obtiene y devuelve un trazo del color indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Strokes.Get(System.Drawing.Color,System.Single)">
            <summary>
            Obtiene y devuelve un trazo del color y ancho indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Strokes.Get(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Obtiene y devuelve un trazo del color y ancho indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Strokes.Get(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle,System.Drawing.Drawing2D.LineJoin)">
            <summary>
            Obtiene y devuelve un trazo del color y ancho indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Strokes.Get(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.LineJoin)">
            <summary>
            Obtiene y devuelve un trazo del color y ancho indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Strokes.Add(Kriptok.Views.Shapes.Stroke)">
            <summary>
            Agrega el trazo a la lista para liberar después.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Strokes.ClearCache">
            <summary>
            Limpia todos los trazos de memoria.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Strokes.UsingPen(System.UInt32,Kriptok.Views.Shapes.IStroke,System.Action{System.Drawing.Pen})">
            <summary>
            Genera un contexto de utilización de la lapicera indicada por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Stroke">
            <summary>
            Trazo base, de un color estándar y parámetros por default.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Stroke.#ctor(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle,System.Drawing.Drawing2D.LineJoin)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.Stroke"/>.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Shapes.Stroke.Color">
            <summary>
            Obtiene o etablece el color del trazo.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Stroke.Width">
            <summary>
            Obtiene el ancho del trazo definido.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Stroke.DashStyle">
            <summary>
            Estilo del trazo.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Stroke.LineJoin">
            <summary>
            Estilo del trazo.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.ModifiableStroke">
            <summary>
            Un tipo de trazo que se puede modificar a cada frame.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.ModifiableStroke.Alpha">
            <summary>
            Establece el valor de la transparencia del trazo.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Compounds.DoubleFlatTriFaceView">
            <summary>
            Este componente se utiliza cuando se desea crear una cara texturada que no debe necesariamente
            estar relacionada a una figura texturada. Es decir que debe poder renderizarse independientemente.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Compounds.DoubleTexturedTriFaceView">
            <summary>
            Este componente se utiliza cuando se desea crear una cara texturada que no debe necesariamente
            estar relacionada a una figura texturada. Es decir que debe poder renderizarse independientemente.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Compounds.DoubleTexturedTriFaceView.SetTexture(Kriptok.Views.Shapes.IGdipTexture)">
            <summary>
            Permite establecer la textura de la doble-cara.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Compounds.DoubleTexturedTriFaceView.SetTextureSwapped(Kriptok.Views.Shapes.IGdipTexture)">
            <summary>
            Permite establecer la textura de la doble-cara.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Compounds.DoubleTexturedTriFaceView.RefreshTextureCoordinates(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Este método se dispara en cada frame, si corresponde.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Compounds.DoubleTexturedTriFaceView.IsSwapped">
            <summary>
            Indica si la doble cara está "swappeada".
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.FlatIcosahedronView">
            <summary>
            Representa un icosahedro de un material plano.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatIcosahedronView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase">
            <summary>
            Figura con dos caras triangulares utilizada para renderizar un casillero
            en escenarios scrolleables.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.V0">
            <summary>
            Vértices que conforman la doble vista tridimencional.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.V1">
            <summary>
            Vértices que conforman la doble vista tridimencional.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.V2">
            <summary>
            Vértices que conforman la doble vista tridimencional.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.V3">
            <summary>
            Vértices que conforman la doble vista tridimencional.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.Vertices">
            <summary>
            Obtiene los vértices que componen la figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.GetLocation2D">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.GetLocationZ">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.GetPriority(Kriptok.Regions.Context.Base.IProjector,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite customizar la forma de obtener la prioridad de renderización
            para los tiles.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.GetVertex(System.Int32)">
            <summary>
            Obtiene el vértice indicado por su índice.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.IsVisible2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <summary>
            Método para filtrar la visibilidad de las vistas en entornos bidimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.IsVisible3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <summary>
            Método para filtrar la visibilidad de las vistas en entornos tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.Render2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.Render3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.AppendTo(Kriptok.Regions.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Agrega las vistas a la lista de renderizables.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase.GetDrawOrder">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase`1">
            <inheritdoc/>
        </member>
        <member name="F:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase`1.Face1">
            <summary>
            Caras que componen la figura.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase`1.Face2">
            <summary>
            Caras que componen la figura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase`1.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase`1.RenderFace1(Kriptok.Regions.Context.Base.IRenderContext)">
            <summary>
            Renderiza la cara 1, si es visible.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase`1.RenderFace2(Kriptok.Regions.Context.Base.IRenderContext)">
            <summary>
            Renderiza la cara 2, si es visible.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Scrollables.DoubleTriFaceViewBase`1.AppendTo(Kriptok.Regions.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <summary>
            Agrega las vistas a la lista de renderizables.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatPanelView.#ctor(Kriptok.Views.Shapes.IMaterial,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,System.Int32,System.Int32)">
            <summary>
            Crea una cara rectangular en base a cuatro puntos recibidos por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatPanelView.#ctor(Kriptok.Views.Shapes.FlatPanelView.FlatPanelViewConfig)">
            <summary>
            Crea una cara rectangular en base a cuatro puntos recibidos por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.FlatPanelView.FlatPanelViewConfig">
            <summary>
            Clase utilizada para construir los peneles texturados.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.FlattenedShapeView">
            <summary>
            Representa una figura tridimensional aplanada y con un material definido para toda la figura.
            Puede utilizarse para dibujar sombras, por ejemplo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlattenedShapeView.#ctor(Kriptok.Views.Shapes.GdipShapeView,System.Drawing.Color)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.FlattenedShapeView"/>.
            </summary>
            <param name="shape">Vista que se desea "aplanar".</param>
            <param name="color">Color con el que se desea renderizar la vista.</param>
        </member>
        <member name="T:Kriptok.Views.Shapes.FlatTriFace3D">
            <summary>
            Una cara triangular de material plano/sólido.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.FlatTriFace3D.Material">
            <summary>
            Material de la cara.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatTriFace3D.#ctor(Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Constructor interno para caras que no tienen siempre un material definido.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatTriFace3D.Render2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <summary>
            Renderiza la vista para entornos bidimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatTriFace3D.Render3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <summary>
            Renderiza la vista para entornos tridimensionales.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatTriFace3D.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.FlatPolygonFace">
            <summary>
            Esta clase representa un polígono tridimensional de un color sólido. En particular, este 
            tipo de polígono está preparado para soportar "polígonos con agujeros".
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatPolygonFace.Render2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatPolygonFace.Render3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatPolygonFace.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatPolygonFace.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="F:Kriptok.Views.Shapes.GdipPanelShapeViewBase.metaFace">
            <summary>
            Vista que se utiliza para definir si el panel está visible (desde la cámara).
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.GdipPanelShapeViewBase.Kriptok#Views#Shapes#Base#IShape#Vertices">
            <summary>
            Obtiene los vértices que componen la figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipPanelShapeViewBase.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipPanelShapeViewBase.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipPanelShapeViewBase.GetVertex(System.Int32)">
            <summary>
            Obtiene el vértice indicado por su índice.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipPanelShapeViewBase.Kriptok#Views#Shapes#Base#IShape#Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipPanelShapeViewBase.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.       
            
            Los paneles planos son convexos.
            
            Si se deforma posteriormente a una forma no-convexa, se deberá heredar esta clase, y sobreescribir
            este método.        
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipPanelShapeViewBase.GetPanelShapes">
            <summary>
            Obtiene las caras del panel, sin utilizar vértices calculados.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipPanelShapeViewBase.Resolve2(System.Collections.Generic.IDictionary{Kriptok.Drawing.Algebra.Vector3F,Kriptok.Views.Shapes.Vertices.Vertex3},Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite customizar la forma en que se resolverán los vértices reutilizados
            por varias figuras que componen la vista.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.MqoMeshView">
            <summary>
            Representa un modelo tridimensional cargado desde un archivo de MetaSequoia.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MqoMeshView.#ctor(System.Reflection.Assembly,System.String)">
            <summary>
            Este constructor sólo genera polígonos materiales, no texturados.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.MqoMeshView.AddTexuredFace(Kriptok.Views.Shapes.Base.GdipShapeCollectionInitializer,Kriptok.Views.Shapes.IGdipTexture,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint,Kriptok.Views.Shapes.TextureMappingPoint)">
            <summary>
            Agrega una cara texturada al modelo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MqoMeshView.Build(Kriptok.Views.Shapes.Base.GdipShapeCollectionInitializer)">
            <summary>
            
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.MqoMeshView.NewTeapot(Kriptok.Views.Shapes.IMaterial)">
            <summary>
            Instancia una nueva vista tridimensional con un modelo estándar de tetera de Utah.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.MqoMeshView.NewSpaceShip">
            <summary>
            Instancia una nueva vista tridimensional con un modelo estándar de tetera de Utah.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Line3DBase">
            <summary>
            Clase base para líneas de figuras tipo wireframe.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.Line3DBase.Vertices">
            <summary>
            Obtiene los vértices que componen la figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Line3DBase.IsVisible2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <summary>
            En principio, asumo que en 2D siempre está visible.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Line3DBase.IsVisible3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <summary>
            Si alguno de los vértices está delante de la cámara, lo considero como que puede estar visible.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Line3DBase.SetVertex(System.Int32,Kriptok.Views.Shapes.Base.VertexBase)">
            <summary>
            Permite reemplazar uno de los vértices de la cara, indicado por su índice, con uno pasado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Line3DBase.GetVertex(System.Int32)">
            <summary>
            Obtiene el vértice indicado por su índice.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Line3DBase.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Line3DBase.GetLocation2D">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.Line3DBase.GetLocationZ">
            <inheritdoc/>
        </member>
        <member name="F:Kriptok.Views.Shapes.Line3DCW.color">
            <summary>
            Color con el que se debe dibujar la línea.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Line3DCW.width">
            <summary>
            Grosor de la línea a dibujar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.WireframeIcosahedronView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.WireframeIcosahedronView.GetIcosahedronVertices">
            <summary>
            Obtiene un listado de vértices para hacer un icosahedro.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.IMaterial">
            <summary>
            Representa el color con el que se debe dibujar un polígono de color plano en la pantalla.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.IMaterialDecorator">
            <summary>
            Este decorador toma el resultado del cálculo del color correspondiente a un material, y le aplica
            efectos como sombra o brillo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.IMaterialExtensions.WithAlpha(Kriptok.Views.Shapes.IMaterial,System.Single)">
            <summary>
            Devuelve una copia del material con 
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.IGdipTexture">
            <summary>
            Representa la clase que se encargará de llenar con pixels de colores un polígono texturado.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.IGdipTexture.Fill(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.PointF[])">
            <summary>
            Llena una región determinada con la textura.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.IGdipTexture.Fill(System.Drawing.Graphics,System.Drawing.Drawing2D.Matrix,System.Drawing.PointF[])">
            <summary>
            Llena una región determinada con la textura.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.IGdipTexture.FillVertical(System.Drawing.Graphics,System.Int32,System.Single,System.Single,System.Int32,System.Single,System.Single)">
            <summary>
            Llena una línea vertical con la textura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.IGdipTexture.FillHorizontal(System.Drawing.Graphics,System.Drawing.Drawing2D.Matrix,System.Int32,System.Int32,System.Int32)">
            <summary>
            Llena una línea vertical con la textura y la transformación indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.IGdipTextureExtensions.WithShade(Kriptok.Views.Shapes.IGdipTexture,Kriptok.Regions.Context.Base.IRenderContext,Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F,Kriptok.Drawing.Algebra.Vector3F)">
            <summary>
            Establece el nivel de incidencia de la luz ambiental en base a la normal 
            de los vértices indicados por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.IGdipTextureExtensions.WithNoShade(Kriptok.Views.Shapes.IGdipTexture)">
            <summary>
            Obtiene la textura sin ningún tipo de sombreado.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.Textures">
            <summary>
            Clase utilizada para construir texturas.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.Test">
            <summary>
            Obtiene una textura de prueba.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.Get(System.Reflection.Assembly,System.String,Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Obtiene una textura en base al recurso y las opciones indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.Get(Kriptok.Common.Resource,Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Obtiene una textura en base al recurso y las opciones indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.Get(System.Drawing.Bitmap,Kriptok.Views.Shapes.Texts.WrapModeEnum)">
            <summary>
            Obtiene una textura en base al recurso y las opciones indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.Get(System.Reflection.Assembly,System.String,Kriptok.Views.Shapes.Texts.WrapModeEnum)">
            <summary>
            Obtiene una textura en base al recurso y las opciones indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.Get(Kriptok.Drawing.FastBitmap,Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Obtiene una textura en base al recurso y las opciones indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.Get(Kriptok.Mapping.Tiles.Base.TilesetBase,System.Int32,System.Int32,Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Obtiene una textura en base a un tile de un <see cref="T:Kriptok.Mapping.Tiles.Base.TilesetBase"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.Get(Kriptok.Common.Resource,Kriptok.Views.Shapes.Texts.GdipTextureOptions)">
            <summary>
            Obtiene una textura en base al recurso y las opciones indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.Build(Kriptok.Drawing.FastBitmap[],Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Obtiene una textura en base al recurso y las opciones indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.Build(Kriptok.Views.Shapes.Texts.SampleTexture)">
            <summary>
            Obtiene una textura en base al recurso y las opciones indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.Build(Kriptok.Drawing.FastBitmap,Kriptok.Views.Shapes.Texts.TextureOptions)">
            <summary>
            Obtiene una textura en base al recurso y las opciones indicadas por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.GetTexture2(System.Drawing.TextureBrush,Kriptok.Views.Shapes.MaterialData,System.Boolean)">
            <summary>
            Obtiene el objeto texture brush asociado a la textura indicada por parámetro.        
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.GetTexture2(System.Drawing.TextureBrush[],Kriptok.Views.Shapes.MaterialData,System.Boolean)">
            <summary>
            Obtiene el objeto texture brush asociado a la textura indicada por parámetro.        
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.Textures.gdipTexturesCache">
            <summary>
            Primer nivel de cache.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.GetTexture1(System.Drawing.Bitmap[],System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Obtiene los texture brush asociados a las imágenes indicadas por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.GetTexture1(System.Drawing.Bitmap,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Obtiene el objeto texture brush asociado a la textura indicada por parámetro.        
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Textures.ClearCache">
            <summary>
            Limpia la caché y libera los rescursos que tenga.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.FlatCubeSphereView">
            <summary>
            Esta figura representa una esfera en formato "cube-sphere" con caras de colores planos.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatCubeSphereView.#ctor(Kriptok.Views.Shapes.IMaterial,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.FlatCubeSphereView"/>.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.GdipShapeSplitterView`1">
            <summary>
            Esta vista toma una vista tridimensional, y agrega al buffer un
            renderizable por cada uno de sus componentes.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.GdipShapeSplitterView`1.View">
            <summary>
            Accede a la vista interior.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.GdipShapeSplitterView">
            <summary>
            Esta vista toma una vista tridimensional, y agrega al buffer un
            renderizable por cada uno de sus componentes.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.GdipShapeSplitterView.shape">
            <summary>
            Vista interior.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.GdipShapeSplitterView.shapeBuffer">
            <summary>
            Lista de wrappers de las caras, que permite dibujar
            cada una de forma independiente.
            
            Permitiendo así, que otros objetos intersecten el terreno.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.GdipShapeSplitterView.renderizables">
            <summary>
            Lista interna de renderizables utilizado pra engañar a la vista interna.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeSplitterView.#ctor(Kriptok.Views.Shapes.GdipShapeView)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.GdipShapeSplitterView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeSplitterView.ReloadBuffer">
            <summary>
            Recarga el buffer de vistas.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.GdipShapeSplitterView.View">
            <summary>
            Accede a la vista interior.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeSplitterView.ShapeWrapper.GetPriority(Kriptok.Regions.Context.Base.IProjector)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeSplitterView.ShapeWrapper.GetDrawOrder">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Shapes.TexturedTriFace3D">
            <summary>
            Esta forma representa un polígono de tres vértices con una textura aplicada.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TexturedTriFace3D.TextureRect">
            <summary>
            El tamaño y posición de la textura que se tiene que dibujar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3D.RefreshTextureCoordinates(Kriptok.Views.Shapes.IGdipTexture,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Recalcula las coordenadas de la textura para la forma.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3D.RefreshTextureCoordinates(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Recalcula las coordenadas de la textura para la forma.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3D.Clone(System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase})">
            <summary>
            Clona la figura. Necesario cuando se necesite hacer un clon de una figura tridimensional.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedTriFace3D.Render3DClipped(Kriptok.Regions.Context.Base.IRenderContext,Kriptok.Views.Shapes.IGdipTexture)">
            <summary>
            Renderiza la figura cuando esta debe ser "clippeada" contra el plano Z = <see cref="F:Kriptok.Drawing.Algebra.Vector3F.InvalidZ"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.WireframeSquareView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            
            En este caso, la figura es convexa porque usa un solo "stroke", pero si utilizara
            diferentes colores, deberían ordenarse las líneas.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.TextureBase">
            <summary>
            Textura base para los tipos derivados.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedCubeCilinderView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TexturedCubeSphereView.StyleEnum.ApplyToAllFaces">
            <summary>
            Todas las caras tienen la misma textura aplicada.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TexturedCubeSphereView.StyleEnum.CrossPattern">
            <summary>
            La textura debe estar en formato "+-"
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedCubeSphereView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedCubeSphereView.RemoveBottomHalf">
            <summary>
            Elimina los polígonos de "abajo" de la esfera.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TextureBuilder.resource">
            <summary>
            Recurso al cual hace referencia.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TextureBuilder.Options">
            <summary>
            Información de cómo el ambiente influye en la textura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TextureBuilder.ToSampleTexture">
            <summary>
            Obtiene una textura en base al recurso.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.TextureMappingPoint">
            <summary>
            Vector unitario para indicar coordenadas de mapeo de texturas.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.TextureMappingQuad">
            <summary>
            Representa una región rectangular de una textura, delimitada por dos vectores unitarios.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.TextureMappingQuad.Default">
            <summary>
            Devuelve un recuadro de textura con valores por default: (0f, 0f) -> (1f, 1f)
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TextureMappingQuad.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.TextureMappingQuad"/>.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.FlatPolygonViewBase`1">
            <summary>
            Clase base utilizada para representar un polígono tridimensional.
            </summary>    
        </member>
        <member name="T:Kriptok.Views.Shapes.WireframePathView">
            <summary>
            Representa un <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> tridimensional. Con o sin profundidad.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.WireframePathView.#ctor(Kriptok.Drawing.Polygon[],System.Single,Kriptok.Views.Shapes.IStroke)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.WireframePathView"/>.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.GdipShapeView">
            <summary>
            Figura tridimensional compuesta de figuras renderizaqdas con GDI+.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.GdipShapeView.boundVertexCollection">
            <summary>
            Colección de vértices local.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.#ctor(Kriptok.Views.Shapes.Base.VertexBase[])">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.#ctor(Kriptok.Views.Shapes.Base.VertexBase[],System.Action{Kriptok.Views.Shapes.Base.GdipShapeCollectionInitializer})">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.GdipShapeView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.Build(Kriptok.Views.Shapes.Base.GdipShapeCollectionInitializer)">
            <summary>
            Permite agregar figuras a la vista.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.Render3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <summary>
            Renderiza la figura tridimensional en un entorno tridimencional.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.IsVisible(Kriptok.Regions.Context.Base.IRenderBufferContext,Kriptok.Common.Box{Kriptok.Drawing.Algebra.Matrix3x4F})">
            <summary>
            Nota:
            
            Puede ser que incluso validando contra los límites de renderización
            generados para esta validación, igualmente la figura quede fuera de la pantalla.
            Pero la probabilidad es baja.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.IsBehindTheCamera">
            <summary>
            Cambio la validación para que la haga con los vértices de los "límites".
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.GetCollisionBounds">
            <summary>
            Obtiene los límites de la figura para la colisión.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.GdipShapeView.GetCollisionShape">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Shapes.HierarchicalShapeViewBase">
            <summary>
            Representa una vista con un "esqueleto" de vértices y vistas.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.HierarchicalShapeViewBase.rootVertex">
            <summary>
            Vértice central de la figura.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Shapes.HierarchicalShapeViewBase.lastCalculatedVolume3D">
            <summary>
            Volumen utilizado para calcular visibilidad de la figura, así
            como límites de renderización.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.HierarchicalShapeViewBase.#ctor">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.HierarchicalShapeViewBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.HierarchicalShapeViewBase.#ctor(Kriptok.Views.Shapes.Vertices.HierarchicalRootVertex)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.HierarchicalShapeViewBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.HierarchicalShapeViewBase.#ctor(System.Action{Kriptok.Views.Shapes.Base.GdipShapeCollectionInitializer})">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.HierarchicalShapeViewBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.HierarchicalShapeViewBase.#ctor(Kriptok.Views.Shapes.Vertices.HierarchicalRootVertex,System.Action{Kriptok.Views.Shapes.Base.GdipShapeCollectionInitializer})">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.HierarchicalShapeViewBase"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.HierarchicalShapeViewBase.Build(Kriptok.Views.Shapes.HierarchicalShapeViewBase.HierarchicalShapeIntializer)">
            <summary>
            Método de construcción de la vista con vértices jerárquicos.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.HierarchicalShapeViewBase.Render3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.HierarchicalShapeViewBase.IsVisible3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.HierarchicalShapeViewBase.GetCollisionVolume">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.HierarchicalShapeViewBase.GetCollisionShape">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Shapes.HierarchicalShapeViewBase.GetSharedVertices(Kriptok.Views.Shapes.MeshBuilderBase,Kriptok.Views.Shapes.MeshBuilderBase,System.Single)">
            <summary>
            Busca los vértices en común entre dos figuras para poder encontrar la intersección
            y crear una articulación.
            </summary>
            <param name="s1">Figuras entre las cuales se busca la intersección.</param>
            <param name="s2">Figuras entre las cuales se busca la intersección.</param>
            <param name="mergeDistance">Máxima distancia que puede separar a los vértices
            para ser considerados "compartido".</param>        
        </member>
        <member name="M:Kriptok.Views.Shapes.HierarchicalShapeViewBase.CreateArticulation(Kriptok.Views.Shapes.MeshBuilderBase,Kriptok.Views.Shapes.MeshBuilderBase,System.Single)">
            <summary>
            Encuentra el punto de articulación entre dos figuras que comparten vértices.
            </summary>  
            <param name="s1">Figuras entre las cuales se busca la intersección.</param>
            <param name="s2">Figuras entre las cuales se busca la intersección.</param>
            <param name="mergeDistance">Máxima distancia que puede separar a los vértices
            para ser considerados "compartido".</param>
        </member>
        <member name="T:Kriptok.Views.Shapes.HierarchicalShapeViewBase.HierarchicalShapeIntializer">
            <summary>
            Clase utiliza para inicializar vistas poliogonales con jerarquía de vértices.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.HierarchicalShapeViewBase.HierarchicalShapeIntializer.Shapes">
            <summary>
            Premite agregar figuras.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.HierarchicalShapeViewBase.HierarchicalShapeIntializer.Central">
            <summary>
            Vértice principal de la figura.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.HierarchicalShapeViewBase.HierarchicalShapeIntializer.AppendMesh(Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertexBase,Kriptok.Views.Shapes.MeshBuilderBase)">
            <summary>
            Agrega un modelo alrededor del vértice indicado por parámetro.
            </summary>            
        </member>
        <member name="M:Kriptok.Views.Shapes.HierarchicalShapeViewBase.HierarchicalShapeIntializer.AppendMesh(Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertexBase,Kriptok.Views.Shapes.MeshBuilderBase,System.Collections.Generic.IDictionary{Kriptok.Views.Shapes.MeshBuilderBase.MeshBuilderTexture,Kriptok.Views.Shapes.IGdipTexture},System.Collections.Generic.IDictionary{System.String,Kriptok.Views.Shapes.TextureResource})">
            <summary>
            Agrega un modelo alrededor del vértice indicado por parámetro.
            </summary>            
        </member>
        <member name="M:Kriptok.Views.Shapes.HierarchicalShapeViewBase.HierarchicalShapeIntializer.Articulate(Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertex,Kriptok.Views.Shapes.Vertices.HierarchicalBranchVertex,System.Single)">
            <summary>
            Crea una articulación entre los dos vértices, indicados por parámetro,
            mergeando los vértices compartidos por las figuras que se relacionan.
            </summary>            
            <param name="v0">Vértice a articular.</param>
            <param name="v1">Vértice a articular.</param>
            <param name="mergeDistance">Distancia máxima a los que pueden estar los vértices para ser
            considerados "el mismo".</param>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatPyramidView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedPyramidView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.WireframePyramidView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            
            En este caso, la figura es convexa porque usa un solo "stroke", pero si utilizara
            diferentes colores, deberían ordenarse las líneas.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.FlatTerrainView">
            <summary>
            Esta vista representa una montaña tridimensional con textura basado en una cuadrícula.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatTerrainView.#ctor(Kriptok.Mapping.Terrains.ITerrainData,Kriptok.Views.Shapes.IMaterial,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.FlatTerrainView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatTerrainView.#ctor(Kriptok.Mapping.Terrains.ITerrainData,Kriptok.Views.Shapes.TextureBuilder,System.Boolean)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.FlatTerrainView"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Shapes.FlatTerrainView.TerrainData">
            <summary>
            Metadata del terreno.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatTerrainView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            
            Los terrenos son en principio no convexos. Puede ser que hay algún terreno convexo, pero en general
            se infiere que no será el caso.
            </summary>      
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatTerrainView.RemoveY0Faces">
            <summary>
            Remueve las caras que tiene Y = 0 en todas los vértices.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.FlatCilinderView">
            <summary>
            Esta clase representa una vista de un cilindro tridimensional de color sólido.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatCilinderView.#ctor(System.Int32,Kriptok.Views.Shapes.IMaterial)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.Shapes.FlatCilinderView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatCilinderView.IsConvex">
            <summary>
            El cilindro es una figura convexa.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Shapes.TexturedCilinderView">
            <summary>
            Representa una vista para un cilindro texturado tridimensional sin tapas superior e inferior.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedCilinderView.#ctor(Kriptok.Views.Shapes.IGdipTexture,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instacia de la clase <see cref="T:Kriptok.Views.Shapes.TexturedCilinderView"/>.
            </summary>
            <param name="texture">Textura a renderizar.</param>
            <param name="xParts">Cantidad de lados que debe tener el cilindro.</param>        
            <param name="yParts">Cantidad de lados que debe tener el cilindro.</param>        
            <param name="uRepetition">Cantidad de veces que la textura se debe repetir sobre la superficie del cilindro.</param>
            <param name="vRepetition">Cantidad de veces que la textura se debe repetir sobre la superficie del cilindro.</param>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedCilinderView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            
            Los cilindros son figuras convexas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedPanelView.#ctor(Kriptok.Views.Shapes.IGdipTexture,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,Kriptok.Views.Shapes.Base.VertexBase,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Crea una cara rectangular en base a cuatro puntos recibidos por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedPanelView.#ctor(Kriptok.Views.Shapes.TexturedPanelView.TexturedPanelViewConfig)">
            <summary>
            Crea una cara rectangular en base a cuatro puntos recibidos por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Shapes.TexturedPanelView.TexturedPanelViewConfig">
            <summary>
            Clase utilizada para construir los peneles texturados.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.FlatCubeView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedCubeView.GetPointsForCube">
            <summary>
            -, +, - : 0            5--------4
            +, +, - : 1           /|       /|
            -, -, - : 2          / |      / |
            +, -, - : 3         0--+-----1  |                            
            +, +, + : 4         |  6-----+--7
            -, +, + : 5         | /      | /
            -, -, + : 6         |/       |/
            +, -, + : 7         2--------3
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.TexturedCubeView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.       
            
            Los cubos y derivados de esta vista, son probablemente convexos.
            
            Si se deforma posteriormente a una forma no-convexa, se deberá heredar esta clase, y sobreescribir
            este método.        
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Shapes.WireframeCubeView.IsConvex">
            <summary>
            Indica si la figura es convexa. Las figuras convexas se renderizan más rápido, ya que no necesitan
            ordenar las caras u otra figuras que la componen antes de renderizarse en pantalla.
            
            En este caso, la figura es convexa porque usa un solo "stroke", pero si utilizara
            diferentes colores, deberían ordenarse las líneas.
            </summary>        
        </member>
        <member name="F:Kriptok.Views.Shapes.Material.Black">
            <summary>
            Material completamente negro, sin ningún tipo de coloración.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Shapes.Material.Get(System.Drawing.Color,System.Single,System.Single,System.Single,System.Byte,System.Single)">
            <summary>
            
            </summary>
            <param name="color">Color de base sobre el cual aplicar transformaciones.</param>
            <param name="dif">Diffusion.   Valor entre 0 y 1.</param>
            <param name="emi">Emission.    Valor entre 0 y 1.</param>
            <param name="spe">Specularity. Valor entre 0 y 1.</param>
            <param name="pow">Power.       Valor entre 0 y 100.</param>
            <param name="amb">Ambient.     Valor entre 0 y 1.</param>        
        </member>
        <member name="M:Kriptok.Views.Shapes.Material.Get(System.Drawing.Color,System.Single,System.Single,System.Byte)">
            <summary>
            Obtiene un material en base a los parámetros indicados.
            </summary>                 
        </member>
        <member name="M:Kriptok.Views.Shapes.Material.Get(System.Drawing.Color)">
            <summary>
            Obtiene un material que siempre despliega un color sólido, independientemente de la insidencia de la luz.
            </summary>                 
        </member>
        <member name="M:Kriptok.Views.Shapes.Material.Get(System.Drawing.Color,System.Single,System.Single,System.Single,System.Byte)">
            <summary>
            Obtiene un material en base a los parámetros indicados.
            </summary>                 
        </member>
        <member name="T:Kriptok.Views.Debug.DebugViewBase">
            <summary>
            Vista que sólo puede ser renderizada en entornos de desarrollo.
            
            No se ajusta a las reglas estándar de prioridad.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Debug.DebugViewBase.AddViews(Kriptok.Regions.Context.Base.IRenderBufferContext,System.Collections.Generic.IList{Kriptok.Views.Base.IRenderizable})">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Debug.DebugViewBase.Render2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Debug.DebugViewBase.Render3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Debug.ConnectorLineView">
            <summary>
            Este componente se utiliza cuando se desea crear una línea que no debe necesariamente
            esté relacionada a una figura de alambres. Es decir que debe poder renderizarse independientemente.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Debug.ConnectorLineView.Render2D(Kriptok.Regions.Context.Base.IRenderContext2D)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Debug.ConnectorLineView.Render3D(Kriptok.Regions.Context.Base.IRenderContext3D)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Texts.FontBuilder">
            <summary>
            Constructor de fuentes.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Texts.FontBuilder.Font">
            <summary>
            Fuente de windows a utilizar.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Texts.FontBuilder.Color1">
            <summary>
            Primer color de brochas con gradiente.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Texts.FontBuilder.Color2">
            <summary>
            Segundo color de brochas con gradiente.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Texts.FontBuilder.Border">
            <summary>
            Obtiene o establece el color del borde de la fuente.
            
            Esta propiedad define el tipo de fuente que se generará.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Texts.FontBuilder.SetColor(System.Drawing.Color)">
            <summary>
            Establece un color plano para la fuente.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Texts.FontBuilder.SetColor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Establece un gradiente vertical de dos colores para la fuente.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Texts.FontBuilder.ShadowColor">
            <summary>
            Color de la sombra.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Texts.FontBuilder.ShadowX">
            <summary>
            Desplazamiento de la sombra en el eje X.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Texts.FontBuilder.ShadowY">
            <summary>
            Desplazamiento de la sombra en el eje Y.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Texts.FontBuilder.SetShadow(System.Single,System.Single,System.Drawing.Color)">
            <summary>
            Establece una sombra para la fuente.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Texts.FontBuilder.SingleColor">
            <summary>
            Indica si tiene un solo color.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Texts.FontBuilder.Build">
            <summary>
            Construye la fuente en base a los parámetros 
            que se cargaron en la construcción.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Texts.FontBuilder.HasShadow">
            <summary>
            Se fija si tiene que renderizar una sombra.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Texts.SuperFont">
            <summary>
            Fuente base para juegos.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Texts.SuperFont.DefaultFont">
            <summary>
            Una fuente por default para pruebas rápidas.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Texts.SuperFont.Size">
            <summary>
            Tamaño de la fuente.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Texts.SuperFont.Build(System.Action{Kriptok.Views.Texts.FontBuilder})">
            <summary>
            Construye la fuente en base a los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Texts.SuperFont.MeasureString(System.Drawing.Graphics,System.String)">
            <summary>
            Mide el tamaño del string indicado si se renderizara con esta fuente.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Texts.SuperFont.Write(Kriptok.Regions.Context.Base.IRenderContext,System.String,Kriptok.Views.Gdip.GdipText)">
            <summary>
            Escribe el texto indicado en pantalla con esta fuente.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Texts.Fonts">
            <summary>
            Esta clase sirve para acumular algunas fuentes de uso frecuente.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Texts.TextPanelView.SetBorder(Kriptok.Views.Shapes.IStroke)">
            <summary>
            Agrega borde al panel.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Texts.TextView">
            <summary>
            Esta vista es utilizada para representar un texto en pantalla.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Texts.TextView.Font">
            <summary>
            Fuente que utiliza esta vista.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Texts.TextView.Message">
            <summary>
            Mensaje a mostrar en pantalla.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Videos.FlicDecoder">
            <summary>
            Decodificador de video en formato FLI/FLC.
            
            Definición:
                http://steve.hollasch.net/cgindex/formats/fli.html
            
            Migrado de:
                https://github.com/aseprite/flic
                https://ffmpeg.org/doxygen/0.6/flicvideo_8c-source.html#l00431    
            </summary>
        </member>
        <member name="F:Kriptok.Views.Videos.FlicDecoder.stream">
            <summary>
            Stream de origen de datos.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Videos.FlicDecoder.buffer">
            <summary>
            Buffer utilizado para renderizar las imágenes que se decodifican del video.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Videos.FlicDecoder.offsetFrame1">
            <summary>
            Offset del primer y segundo frame del video.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Videos.FlicDecoder.offsetFrame2">
            <summary>
            Offset del primer y segundo frame del video.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Videos.FlicDecoder.width">
            <summary>
            Alto y ancho del video.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Videos.FlicDecoder.height">
            <summary>
            Alto y ancho del video.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.#ctor(Kriptok.Common.Resource)">
            <summary>
            Devuelve una nueva instancia de <see cref="T:Kriptok.Views.Videos.FlicDecoder"/>.
            
            Constructor necesario por el reproductor de FLI/FLC.
            </summary>            
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.#ctor(System.IO.Stream)">
            <summary>
            Devuelve una nueva instancia de <see cref="T:Kriptok.Views.Videos.FlicDecoder"/>.
            
            Constructor necesario por el reproductor de FLI/FLC.
            </summary>            
        </member>
        <member name="P:Kriptok.Views.Videos.FlicDecoder.FrameCount">
            <summary>
            Cantidad de frames que tiene el video.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Videos.FlicDecoder.FrameIndex">
            <summary>
            Frame en el que se está actualmente.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Videos.FlicDecoder.Size">
            <summary>
            Obtiene el tamaño del video en pixels.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Videos.FlicDecoder.Speed">
            <summary>
            Frame en el que se está actualmente.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.UsingImage(System.Action{System.Drawing.Bitmap})">
            <summary>
            Obtiene la imagen que se encuentra actualmente en el decoder.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.Dispose">
            <summary>
            Libera los recursos utilizados por el decoder.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.EndOfFile">
            <summary>
            Indica si se alcanzó el final del archivo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.ToEnd">
            <summary>
            Avanza hasta el final del video.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.Read32">
            <summary>
            Lee y retorna 32 bits del archivo.
            </summary>            
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.Read16">
            <summary>
            Lee y retorna 16 bits del archivo.
            </summary>            
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.ReadNextFrame">
            <summary>
            Incrementa el frame del video. 
            </summary>            
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.EndOfVideo">
            <summary>
            Indica si se ha alcanzado el final del video.
            </summary>            
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.ReadChunk">
            <summary>
            Lee una porción del archivo.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.ReadBlackChunk">
            <summary>
            Limpia el buffer.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.ReadCopyChunk">
            <summary>
            Lee un comando de copia de datos.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.LoadPalette(System.Boolean)">
            <summary>
            Lee y carga la paleta en el buffer.
            </summary>            
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.ReadBrunChunk">
            <summary>
            FLI_BRUN Chunks
            These are much like FLI_LC chunks without the skips.They start immediately 
            with the data for the first line, and go line-by-line from there.The first 
            byte contains the number of packets in that line.The format for a packet is:
            
              size_count
              data
              
            If size_count is positive the data consists of a single byte which is 
            repeated size_count times.If size_count is negative there are -size_count 
            bytes of data which are copied to the screen. In Autodesk Animator if the 
            "compressed" data shows signs of exceeding 60000 bytes the frame is stored 
            as FLI_COPY instead.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Videos.FlicDecoder.Reset">
            <summary>
            Resetea el decodificador de video.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Videos.FlicVideoView.decoder">
            <summary>
            Decodificador de video.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Videos.FlicVideoView.frameDelta">
            <summary>
            Cantidad de tiempo que tiene que estar cada frame en pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Videos.FlicVideoView.acumTimeDelta">
            <summary>
            Utilizado para controlar la cantidad de frames que hay entre un fotograma y otro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Videos.FlicVideoView.Dispose">
            <summary>
            Libera todos los recursos utilizados.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Videos.FlicVideoView.LastFrame">
            <inheritdoc/>  
        </member>
        <member name="M:Kriptok.Views.Videos.FlicVideoView.GoToEnd">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.Videos.FlicVideoView.Size">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Videos.VideoViewBase">
            <summary>
            Clase base para la reproducción de videos.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Videos.VideoViewBase.Loop">
            <summary>
            Indica si el video se debe repetir indefinidamente.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Videos.VideoViewBase.Size">
            <inheritdoc/>
        </member>
        <member name="F:Kriptok.Views.Videos.VideoViewBase.paused">
            <summary>
            Indica que no debe avanzar el video en el siguiente frame.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Videos.VideoViewBase.EndOfVideo">
            <summary>
            Indica si se ha alcanzado el final del video (en caso de no estar en loop).
            </summary>          
        </member>
        <member name="M:Kriptok.Views.Videos.VideoViewBase.LastFrame">
            <summary>
            Devuelve si se ha alcanzado el final del video.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Videos.VideoViewBase.Dispose">
            <summary>
            Libera los recursos asociados al video.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Videos.VideoViewBase.GoToEnd">
            <summary>
            Avanza hasta el último frame del video.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Videos.VideoViewBase.ScaleTo(System.Drawing.Size)">
            <summary>
            Escala el video para que alcance el tamaño indicado por parámetro.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Sprites.Base.IndexedSpriteViewBase`1">
            <summary>
            Esta clase representa una vista de tipo Sprite con varios cuadros de animación.
            
            Se selecciona el gráfico que quiere mostrarse utilizando el índice de la imagen
            con la propiedad <see cref="P:Kriptok.Views.Sprites.Base.IndexedSpriteViewBase`1.Graph"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Sprites.Base.IndexedSpriteViewBase`1.Graph">
            <summary>
            Obtiene o establece el gráfico indicado por su índice.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Sprites.Base.IndexedSpriteViewBase`1.Next">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Sprites.Base.IndexedSpriteViewBase`1.Next(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Sprites.Base.IndexedSpriteViewBase`1.GetIndex">
            <summary>
            Obtiene el índice de imagen que está seleccionado actualmente.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.Base.IndexedSpriteViewBase`1.SetIndex(System.Int32)">
            <summary>
            Establece la imagen seleccionada respecto al índice indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.Base.SpriteViewBase`1.#ctor">
            <summary>
            Se mantiene por ahora, por compatibilidad con <see cref="!:DivFileView"/>.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Sprites.Base.SpriteViewBase`1.Size">
            <summary>
            Obtiene el tamaño de la imagen.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Sprites.FogAffectedSprite">
            <summary>
            Indica que la vista debe verse afectada por factores del ambiente,
            como la incidencia de la luz, y la neblina.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Sprites.IndexedSpriteView">
            <summary>
            Esta clase representa un Bitmap subdividido en partes iguales, indexados de izquierda a derecha
            y de arriba hacia abajo (sentido de lectura occidental).
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.GetIndex">
            <summary>
            Obtiene el índice de imagen que está seleccionado actualmente.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.SetIndex(System.Int32)">
            <summary>
            Establece la imagen seleccionada respecto al índice indicado.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.Clone">
            <summary>
            Devuelve una copia de la instancia de <see cref="T:Kriptok.Views.Sprites.IndexedSpriteView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.Add(System.Reflection.Assembly,System.String,System.Int32,System.Int32)">
            <summary>
            Agrega sprites a la vista indexada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.Add(Kriptok.Common.Resource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Agrega sprites a la vista indexada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.Add(System.Reflection.Assembly,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Agrega sprites a la vista indexada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.SetSprite(System.Int32,Kriptok.Views.Sprites.Sprite)">
            <summary>
            Establece o reemplaza un sprite en la vista indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.SetCenter(System.Int32,System.Drawing.PointF)">
            <summary>
            Establece el punto central de la imagen indicada por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.Next">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Sprites.IndexedSpriteView.Next(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Sprites.ISpriteView">
            <summary>
            Interfaz para vistas que se renderizan con sprites.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Sprites.ISpriteView.Alpha">
            <summary>
            Transparencia a plicar a la imagen al momento de renderizar.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Sprites.ISpriteView.Transform">
            <summary>
            Transformaciones de color a aplicar al momento de renderizar.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.ISpriteView.MakeTransparent(System.Drawing.Color)">
            <summary>
            Hace transparente el color indicado para el Sprite.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Sprites.ISpriteView.PaletteSwap">
            <summary>
            Modifica la paletta de los mapas de bits.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Sprites.ISpriteView.Size">
            <summary>
            Obtiene el tamaño en pixels de la imagen.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.ISpriteView.GetDistanceToCamera">
            <summary>
            Obtiene la distancia del sprite hasta la cámara.
            Sólo para perspectivas 3D o Pseudo3D.
            </summary>        
        </member>
        <member name="P:Kriptok.Views.Sprites.SpriteDecoratorViewBase`1.Size">
            <summary>
            Obtiene el tamaño de la imagen.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Sprites.SpriteDecoratorViewBase`1.Kriptok#Views#Base#IRectangleRenderizable#SizeF">
            <summary>
            Obtiene el rectángulo correspondiente a la vista.
            </summary>
        </member>
        <member name="P:Kriptok.Views.Sprites.SpriteDecoratorViewBase`1.Transform">
            <summary>
            Transformaciones de color a aplicar al momento de renderizar.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Sprites.Sprite">
            <summary>
            Esta clase contiene un <see cref="T:System.Drawing.Bitmap"/>, e información relevante del <see cref="T:System.Drawing.Bitmap"/>
            Se utiliza para dibujar una imagen en pantalla.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.on">
            <summary>
            Utilizado para lockear.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.SpriteCache">
            <summary>
            Guarda en memoria los sprites cargadso.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.Sprite.Load(Kriptok.Common.Resource,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Carga un <see cref="T:Kriptok.Views.Sprites.Sprite"/> en memoria.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.spriteHitboxCheck">
            <summary>
            Objeto utilizado para el chequeo de colisiones con el sprite.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.SpriteRectangleCheck">
            <summary>
            Objeto utilizado en colisiones para obtener el rectángulo envolvente de la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.size">
            <summary>
            Tamaño de la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.Image">
            <summary>
            Imagen a dibujar.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.Rectangle">
            <summary>
            Rectángulo con el tamaño de la imagen.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.Sprite.Center">
            <summary>
            Punto central de rotación y escalado del sprite.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.Sprite.#ctor(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Devuelve una nueva instancia de la clase Sprite. Esta clase se encargará de liberar la
            imagen indicada por parámetro cuando sea liberada de la memoria.
            </summary>               
        </member>
        <member name="M:Kriptok.Views.Sprites.Sprite.#ctor(System.Drawing.Bitmap)">
            <summary>
            Devuelve una nueva instancia de la clase Sprite. Esta clase se encargará de liberar la
            imagen indicada por parámetro cuando sea liberada de la memoria.
            </summary>               
        </member>
        <member name="M:Kriptok.Views.Sprites.Sprite.GetPixel(System.Int32,System.Int32)">
            <summary>
            Obtiene el color del pixel indicado por sus coordenadas.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Sprites.Sprite.ClearCache">
            <summary>
            Limpia la caché de los sprites cargados en memoria.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.Sprite.GenerateHitbox">
            <summary>
            Genera la caja de colisión para el sprite.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.Sprite.System#IDisposable#Dispose">
            <summary>
            Libera los recursos y la memoria del objeto.
            </summary>
        </member>
        <member name="T:Kriptok.Views.Sprites.SpriteExtensions">
            <summary>
            Funciones extendidas para la clase <see cref="T:Kriptok.Views.Sprites.Sprite"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.SpriteExtensions.GetSize(Kriptok.Views.Sprites.Sprite)">
            <summary>
            Obtiene el tamaño de la sprite.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Sprites.SpriteExtensions.SetCenter(Kriptok.Views.Sprites.Sprite,System.Drawing.PointF)">
            <summary>
            Permite establecer el punto central/eje de rotación y escalamiento
            de la imagen.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.Sprites.DirectionalSpriteAlignmentEnum">
            <summary>
            Indica el tipo de alineación de los sprites direccionales.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteAlignmentEnum.Default">
            <summary>
            Por defecto, se asume que los sprites tienen un "frente".
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteAlignmentEnum.AxisAligned">
            <summary>
            Indica que el primer cambio de sprite se da en el "frente".
            </summary>
        </member>
        <member name="T:Kriptok.Views.Sprites.DirectionalSpriteView">
            <summary>
            Representa una vista de tipo sprite que puede ser observada desde diferentes ángulos, y los sprites
            para estos diferentes ángulos se calculan automáticamente.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.viewIndexMatrix">
            <summary>
            Matriz de gráficos ordenados por dirección.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.viewIndexMap">
            <summary>
            Mapa de direcciones utilizado para "ampliar" artificialmente la cantidad
            de ángulos.
            
            Por ejemplo:
            
                 0             3 0 1
               3   1    -->    3   1   
                 2             3 2 1 
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.imagesCount">
            <summary>
            Cantidad de imágenes en total que tiene la vista.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.xGraphAngles">
            <summary>
            En este array voy a guardar los ángulos de tres vueltas de círculo para poder identificar el 
            gráfico que hay que mostrar dependiendo del ángulo del proceso y de la cámara.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.xGraphAnglesLimit">
            <summary>
            (Length-1) del anglesMapper. Se guarda como variable estática para no estar calculándola cada vez.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.graph">
            <summary>
            Índice de gráfico.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.anglesMapper">
            <summary>
            Este array mapea los ángulos de los procesos con su correspondiente índice de gráfico.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.indexCount">
            <summary>
            Longitud de la cantidad de gráficos asignados para cada dirección.
            </summary>
        </member>
        <member name="F:Kriptok.Views.Sprites.DirectionalSpriteView.alignment">
            <summary>
            Alineamiento de los cambios de sprite.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.DirectionalSpriteView.#ctor(Kriptok.Common.Resource,System.Int32[0:,0:])">
            <summary>
            Crea un sprite direccional utilizando la estructura de la matriz para subdividir
            la imagen final.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Sprites.DirectionalSpriteView.Add(Kriptok.Common.Resource,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Agrega un sprite a la vista indexada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.DirectionalSpriteView.Add(Kriptok.Common.Resource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Agrega sprites a la vista indexada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.DirectionalSpriteView.Add(System.Reflection.Assembly,System.String,System.Int32,System.Int32)">
            <summary>
            Agrega sprites a la vista indexada.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.DirectionalSpriteView.ReplaceSprites(Kriptok.Common.Resource,System.Int32,System.Int32[0:,0:],System.Action{Kriptok.Views.Sprites.Sprite})">
            <summary>
            Reemplaza parte de la matriz de sprites con nuevos sprites leídos de un recurso.
            </summary>
            <param name="offsetX">Offset horizontal para saber a partir de qué punto de 
            la matriz empezar a reemplazar.</param>        
        </member>
        <member name="M:Kriptok.Views.Sprites.DirectionalSpriteView.ReMap(System.Int32[])">
            <summary>
            Permite "expandir" la matrix, generando más ángulos intermedios.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.Sprites.DirectionalSpriteView.RotateBetween(System.Int32,System.Int32)">
            <summary>
            Itera los gráficos entre el mínimo y el máximo indicados. Es un conjunto cerrado.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Sprites.DirectionalSpriteView.Next">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Sprites.DirectionalSpriteView.Next(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.Sprites.DirectionalSpriteView.SetCenter(System.Int32,System.Drawing.PointF)">
            <summary>
            Establece el centro de renderización para una imagen en particular.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.ClippedViewBase`1">
            <summary>
            Esta vista sirve para limitar la renderización de la vista interna a una región de pantalla limitada.  
            </summary>
        </member>
        <member name="M:Kriptok.Views.ClippedViewBase`1.#ctor(`0)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.ClippedViewBase`1"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.ClippedViewBase`1.RenderOn(Kriptok.Regions.Context.Base.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.ClippedViewBase`1.Clip(System.Drawing.Graphics)">
            <summary>
            Recorta la renderización de la vista a un área de la pantalla.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.ClippedIndexedSpriteView">
            <summary>
            Esta vista sirve para limitar la renderización de la vista interna a una región de pantalla limitada.  
            Especializada para vistas de tipo <see cref="T:Kriptok.Views.Sprites.IndexedSpriteView"/>.
            </summary>
        </member>
        <member name="M:Kriptok.Views.ClippedIndexedSpriteView.#ctor(Kriptok.Views.Sprites.IndexedSpriteView,System.Drawing.Rectangle)">
            <summary>
            Devuelve una nueva instancia de la clase <see cref="T:Kriptok.Views.ClippedIndexedSpriteView"/>.
            </summary>        
        </member>
        <member name="M:Kriptok.Views.ClippedIndexedSpriteView.Clip(System.Drawing.Graphics)">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.ClippedIndexedSpriteView.Graph">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.ClippedIndexedSpriteView.Alpha">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.ClippedIndexedSpriteView.SizeF">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.ClippedIndexedSpriteView.Flip">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.ClippedIndexedSpriteView.Scale">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.ClippedIndexedSpriteView.ReScale">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.ClippedIndexedSpriteView.ScaleX">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.ClippedIndexedSpriteView.ScaleY">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.ClippedIndexedSpriteView.ReScaleX">
            <inheritdoc/>
        </member>
        <member name="P:Kriptok.Views.ClippedIndexedSpriteView.ReScaleY">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.ClippedIndexedSpriteView.ScaleRGB(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.ClippedIndexedSpriteView.GetMatrix(System.Boolean,Kriptok.Drawing.Algebra.Vector2F,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.ClippedIndexedSpriteView.GetReScale2D">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.ClippedIndexedSpriteView.GetScale2D">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.ClippedIndexedSpriteView.GetRectangle">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.ClippedIndexedSpriteView.Kriptok#Views#Base#ICollisionableRenderizable#GetAutoHitbox">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.ClippedIndexedSpriteView.GetCollisionRectangle">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.ClippedIndexedSpriteView.Next">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.ClippedIndexedSpriteView.Next(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Views.Partitioned.PartitionPolygonView">
            <summary>
            Polígono tridimencional creado sobre los vértices del piso o techo de una partición.
            </summary>
        </member>
        <member name="M:Kriptok.Views.Partitioned.PartitionPolygonView.UsingVisiblePolygon(Kriptok.Regions.Context.Base.Render3DContextBase,System.Action{System.Drawing.PointF[]})">
            <summary>
            Obtiene el polígono visible de una cara de tres vértices en el contexto de renderización
            indicado por parámetro.
            </summary>        
        </member>
        <member name="T:Kriptok.Views.ViewDecoratorBase`1">
            <summary>
            Esta vista sirve para extender el funcionamiento de cualquier <see cref="T:Kriptok.Views.Base.IRenderizable"/>
            que quiera comportarse como una vista.
            </summary>    
        </member>
        <member name="P:Kriptok.Views.ViewDecoratorBase`1.View">
            <summary>
            El renderizable al que hace referencia la vista.
            </summary>
        </member>
        <member name="M:Kriptok.Views.ViewDecoratorBase`1.SetOwner(Kriptok.Views.Base.IViewOwner)">
            <summary>
            Establece el objeto del cuál la vista debe tomar las propiedades para renderizar.
            </summary>
            <param name="obj">Objeto al cual se le está asignando la vista.</param>
        </member>
        <member name="M:Kriptok.Views.ViewDecoratorBase`1.GetLocation2D">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.ViewDecoratorBase`1.GetLocationZ">
            <inheritdoc/>
        </member>
        <member name="M:Kriptok.Views.ViewDecoratorBase`1.RenderOn(Kriptok.Regions.Context.Base.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="F:Kriptok.Views.ViewDecoratorBase`1.renderizables">
            <summary>
            Lista de renderizables a dibujar en la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Views.ViewDecoratorBase`1.GetDrawOrder">
            <inheritdoc/>
        </member>
        <member name="T:Kriptok.Scenes.SceneBase">
            <summary>    
            Las escenas representan cada "instancia" de un juego.
            
            Ejemplos:
             * Presentación.
             * Menú principal.
             * Nivel/Mapa de juego.
             * Créditos.
             * etcétera.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneBase.processingMessageOn">
            <summary>
            Objeto utilizado para lockear mientras se procesa un mensaje.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneBase.processingMessage">
            <summary>
            Variable que indica si se está procesando un mensaje.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneBase.mainForm">
            <summary>
            Formulario principal del juego.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.Init(Kriptok.Scenes.SceneInitializer)">
            <summary>
            Lógica a realizar durante la inicialización de la escena.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.Run(Kriptok.Scenes.SceneHandler)">
            <summary>
            Lógica principal a realizar por la escena.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.OnStop">
            <summary>
            Evento que se dispara al terminar o detener la escena.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.Start">
            <summary>
            Inicia la escena.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.Message(System.Object)">
            <summary>
            Recibe un mensaje de algún objeto.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.OnMessage(Kriptok.Scenes.SceneHandler,System.Object)">
            <summary>
            Método que permite implementar el comportamiento de la escena
            al recibir un mensaje de algún objeto del juego.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.LockMessage(System.Action)">
            <summary>
            Lockea para indicar que se está empezando o terminando de procesar un mensaje.
            </summary>        
        </member>
        <member name="T:Kriptok.Scenes.SceneBase.SceneProcessBase">
            <summary>
            Proceso que se utiliza para manejar a la escena asincrónicamente.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneBase.SceneProcessBase.scene">
            <summary>
            Actividad a la que pertenece.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneBase.SceneProcessBase.myThread">
            <summary>
            Thread que maneja el evento.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneBase.SceneProcessBase.running">
            <summary>
            Indica si está corriendo.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.SceneProcessBase.Stop">
            <summary>
            Detiene el thread de una forma controlada, no aborta el thread.
            </summary>            
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.SceneProcessBase.FadeOff(System.Byte)">
            <summary>
            Oscurece la pantalla a negro.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.SceneProcessBase.FadeTo(System.Drawing.Color,System.Byte)">
            <summary>
            Oscurece la pantalla al color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.SceneProcessBase.FadeOn(System.Byte)">
            <summary>
            Vuelve a aclarar la pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.SceneProcessBase.FadeFrom(System.Drawing.Color,System.Byte)">
            <summary>
            Vuelve a aclarar la pantalla desde el color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.SceneProcessBase.FadeFromTo(System.Drawing.Color,System.Drawing.Color,System.Byte)">
            <summary>
            Transiciona la pantalla de un color a tro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneBase.SceneProcessBase.Frame">
            <summary>
            Este método genera una "espera" hasta que el proceso es renderizado.
            </summary>
        </member>
        <member name="T:Kriptok.Scenes.SceneBase.SceneRunProcess">
            <summary>
            Proceso que se utiliza para manejar la confección de la escena asincrónicamente.
            </summary>
        </member>
        <member name="T:Kriptok.Scenes.SceneBase.SceneMessageProcess">
            <summary>
            Proceso que se utiliza para manejar un mensaje que recibe la escena.
            </summary>
        </member>
        <member name="T:Kriptok.Scenes.SceneHandler">
            <summary>
            Representa un agrupador de las funciones que puede tener una escena.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneHandler.mainForm">
            <summary>
            Formulario principal del juego.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneHandler.scene">
            <summary>
            Actividad a la que pertenece.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneHandler.process">
            <summary>
            Proceso asincrónico relacionado a la escena.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.#ctor(Kriptok.Forms.MainForm,Kriptok.Scenes.SceneBase,Kriptok.Scenes.SceneBase.SceneProcessBase)">
            <summary>
            Constructor interno, para asegurar que no se pueda heredar la clase.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.PlayMusic(System.Reflection.Assembly,System.String,System.Boolean,System.Int32)">
            <summary>
            Reproduce la música indicada según los parámetros.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra la música.</param>
            <param name="resourceName">Nombre del recurso a reproducir.</param> 
            <param name="loop">Indica si se reproduce en loop.</param>
            <param name="from">Indica desde qué punto debe empezar a reproducirse.</param>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.PlayMidiNote(Kriptok.Audio.MidiInstrumentEnum,System.Byte,System.Byte,System.Byte)">
            <summary>
            Reproduce una nota midi con los parámetros indicados.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.PlaySound(System.Reflection.Assembly,System.String)">
            <summary>
            Reproduce un sonido que esté señalado como Recurso Embebido. Este método sólo
            permite reproducir un sonido a la vez.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra el sonido.</param>
            <param name="resourceName">Nombre del recurso a reproducir.</param>
            <returns>Devuelve un handler del sonido que permite volver a reproducirlo o detenerlo.</returns>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.PlaySoundLooping(System.Reflection.Assembly,System.String)">
            <summary>
            Reproduce repetidamente un sonido que esté señalado como Recurso Embebido. Este método sólo
            permite reproducir un sonido a la vez.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra el sonido.</param>
            <param name="resourceName">Nombre del recurso a reproducir.</param>
            <returns>Devuelve un handler del sonido que permite volver a reproducirlo o detenerlo.</returns>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.PlaySound(Kriptok.Common.Resource)">
            <summary>
            Reproduce un sonido que esté señalado como Recurso Embebido. Este método sólo
            permite reproducir un sonido a la vez.
            </summary> 
            <param name="resource">Recurso a reproducir.</param>
            <returns>Devuelve un handler del sonido que permite volver a reproducirlo o detenerlo.</returns>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.PlaySoundSync(System.Reflection.Assembly,System.String)">
            <summary>
            Reproduce un sonido de forma sincrónica.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra el sonido.</param>
            <param name="resourceName">Nombre del recurso a reproducir.</param> 
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.PlaySoundSync(Kriptok.Common.Resource)">
            <summary>
            Reproduce un sonido de forma sincrónica.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.PlayWave(System.Reflection.Assembly,System.String)">
            <summary>
            Reproduce el sonido indicado por parámetro en forma de onda.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.StopMusic">
            <summary>
            Detiene la música que esté sonando en ese momento.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.PlayMusic(Kriptok.Audio.PlayMusicOptions)">
            <summary>
            Reproduce la música indicada por parámetro.
            </summary>
            <param name="options">Música y configuración a reproducir.</param>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.PlayMusic(System.Reflection.Assembly,System.String,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Single)">
            <summary>
            Reproduce la música indicada según los parámetros.
            </summary>
            <param name="assembly">Ensamblado donde se encuentra la música.</param>
            <param name="resourceName">Nombre del recurso a reproducir.</param> 
            <param name="loop">Indica si se reproduce en loop.</param>
            <param name="from">Indica desde qué punto debe empezar a reproducirse.</param>
            <param name="to">Indica hasta qué punto debe reproducirse.</param>
            <param name="volume">Volumen de reproducción.</param>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.PauseMusic">
            <summary>
            Pausa la música que esté escuchándose en el momento.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.ResumeMusic">
            <summary>
            Continúa con la música que estába escuchándose y que fue pausada.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.StartSubScreen(System.Drawing.Rectangle)">
            <summary>
            Inicializa una sub-región de pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.StartScroll``1(``0)">
            <summary>
            Inicializa un modo de Scroll.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.StartPseudo3D``1(``0)">
            <summary>
            Inicializa un modo de Scroll con la "capa" indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.StartFull3D``1(``0)">
            <summary>
            Inicializa un modo de Scroll con la "capa" indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.StartVideo(Kriptok.Views.Videos.FlicDecoder)">
            <summary>
            Inicializa la reproducción de un video en la región de la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.Set(Kriptok.Scenes.SceneBase)">
            <summary>
            Establece la escena indicada por parámetro como la única actividad.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.Kill``1">
            <summary>
            Elimina todos los objetos vivos del tipo indicado.
            
            NOTA: Si se utiliza una clase base como por ejemplo <see cref="T:Kriptok.Entities.Base.EntityBase"/> o <see cref="T:Kriptok.Entities.Base.ProcessBase"/>,
            esto también mataría al proceso que está ejecutando la acción de matar. Por tanto, se lo ignorará.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.WaitWhile(System.Func{System.Boolean})">
            <summary>
            Espera mientras se cumpla la condición.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.WaitFrame">
            <summary>
            Espera un frame antes de continuar.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.WaitFrames(System.Int32)">
            <summary>
            Espera una cantidad determinada de renderizados de pantalla indicados por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.FadeTo(System.Drawing.Color,System.Byte)">
            <summary>
            Oscurece la pantalla al color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.FadeFrom(System.Drawing.Color,System.Byte)">
            <summary>
            Vuelve a aclarar la pantalla desde el color indicado por parámetro.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.FadeFromTo(System.Drawing.Color,System.Drawing.Color,System.Byte)">
            <summary>
            Transiciona la pantalla de un color a tro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.Write(Kriptok.Views.Texts.SuperFont,System.Int32,System.Int32,System.String)">
            <summary>
            Escribe un texto en pantalla.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.Write(Kriptok.Views.Texts.SuperFont,System.Int32,System.Int32,System.Func{System.String})">
            <summary>
            Escribe un texto en pantalla que se actualiza automáticamente con la expressión indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.Write(Kriptok.Views.Texts.SuperFont,System.Int32,System.Int32,System.Func{System.Int32})">
            <summary>
            Escribe un texto en pantalla que se actualiza automáticamente con la expressión indicada.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.Wait(System.UInt32)">
            <summary>
            Espera hasta que pasen la cantidad de milisegundos indicados por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.WaitOrKeyPress(System.Int32)">
            <summary>
            Espera una determinada cantidad de milisegundos, o hasta que se presione una tecla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.WaitForKeyPress">
            <summary>
            Espera hasta que se presione una tecla, y devuelve su valor.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.WaitOrKeyPress(Kriptok.Entities.IVideoEntity)">
            <summary>
            Espera a que termine el video indicado por parámetro, y luego continua.
            Se puede cancelar la reproducción presionando una tecla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.Wait(Kriptok.Entities.IVideoEntity)">
            <summary>
            Espera a que termine el video indicado por parámetro, y luego continua.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.FadeOn(System.Byte)">
            <summary>
            Enciende la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.FadeOff(System.Byte)">
            <summary>
            Apaga la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.Exit">
            <summary>
            Se abandona completamente el juego, independientemente del estado de los procesos.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.StartSingleMenu(Kriptok.Views.Texts.SuperFont,System.Action{Kriptok.Scenes.SceneHandler.SceneMenuBuilder})">
            <summary>
            Inicia un nuevo menú, y espera hasta que se seleccione una opción, para actuar en consecuencia.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.StopAllSounds">
            <summary>
            Detiene todos los sonidos y la música que se estén reproduciendo.
            </summary>
        </member>
        <member name="T:Kriptok.Scenes.SceneHandler.SceneMenuBuilder">
            <summary>
            Representa una clase para construir menues simples.
            </summary>
        </member>
        <member name="P:Kriptok.Scenes.SceneHandler.SceneMenuBuilder.OnChangeOption">
            <summary>
            Método que se dispara al mover el cursor a otra opción del menú.
            </summary>
        </member>
        <member name="P:Kriptok.Scenes.SceneHandler.SceneMenuBuilder.Location">
            <summary>
            Ubicación donde empezar a renderizar el menú.
            </summary>
        </member>
        <member name="P:Kriptok.Scenes.SceneHandler.SceneMenuBuilder.Font">
            <summary>
            Fuente que utiliza el menú.
            </summary>
        </member>
        <member name="P:Kriptok.Scenes.SceneHandler.SceneMenuBuilder.CloseOnSelection">
            <summary>
            Indica si debe eliminar las opciones luego de seleccionar una opción.
            </summary>
        </member>
        <member name="P:Kriptok.Scenes.SceneHandler.SceneMenuBuilder.SelectedOption">
            <summary>
            Opción en la que arranca el cursor del menú.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.SceneMenuBuilder.Add(System.String,System.Action)">
            <summary>
            Agrega una opción al menú.
            </summary>            
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.SceneMenuBuilder.GetItems">
            <summary>
            Obtiene las opciones.
            </summary>            
        </member>
        <member name="M:Kriptok.Scenes.SceneHandler.SceneMenuBuilder.OnCursorMove(System.Action{System.Int32,System.Int32})">
            <summary>
            Permite establecer una acción a realizar cuando se mueve el cursor de una opción a otra.
            </summary>            
        </member>
        <member name="T:Kriptok.Scenes.SceneHandler.MenuArrow">
            <summary>
            Cursor que indica la opción seleccionada.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneHandler.MenuArrow.builder">
            <summary>
            Referencia al constructor que generó el menú.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.PlayCursorMoveSound(Kriptok.Scenes.SceneHandler)">
            <summary>
            Reproduce un sonido de la librería interna para mover cursores en menúes.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.PlayMenuOKSound(Kriptok.Scenes.SceneHandler)">
            <summary>
            Reproduce un sonido de la librería interna para seleccionar una opción de menú.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartSubScreen(Kriptok.Scenes.SceneHandler,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Inicializa una sub-región de pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartScroll(Kriptok.Scenes.SceneHandler,Kriptok.Regions.Scroll.Base.ScrollLayerBase)">
            <summary>
            Inicializa un modo de Scroll con la "capa" indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartScroll(Kriptok.Scenes.SceneHandler,System.Drawing.Rectangle,Kriptok.Regions.Scroll.Base.ScrollLayerBase)">
            <summary>
            Inicializa un modo de Scroll con la "capa" indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartScroll(Kriptok.Scenes.SceneHandler,System.Drawing.Rectangle,Kriptok.Mapping.Tiles.TileMapInfo)">
            <summary>
            Establece el modo de renderización Scroll para la región con un mapa de tiles.
            </summary>  
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartScroll3D(Kriptok.Scenes.SceneHandler,Kriptok.Regions.Scroll.Base.ScrollLayerBase)">
            <summary>
            Inicializa un modo de Scroll tridimencional con la "capa" indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartScroll3D(Kriptok.Scenes.SceneHandler,System.Drawing.Rectangle,Kriptok.Regions.Scroll.Base.ScrollLayerBase)">
            <summary>
            Inicializa un modo de Scroll tridimencional con la "capa" indicada por parámetro.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartAxonometric``1(Kriptok.Scenes.SceneHandler,System.Drawing.Rectangle,Kriptok.Mapping.Tiles.Editor.TileMapX)">
            <summary>
            Establece el modo de renderización Scroll para la región con un mapa de tiles.
            </summary>  
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartAxonometric(Kriptok.Scenes.SceneHandler,Kriptok.Regions.Scroll.Base.ScrollLayerBase)">
            <summary>
            Inicia un modo de renderización en perspectiva axonométrica para toda la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartAxonometric``1(Kriptok.Scenes.SceneHandler,``0)">
            <summary>
            Inicia un entorno de scroll axonométrico.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartAxonometric(Kriptok.Scenes.SceneHandler,System.Drawing.Rectangle,Kriptok.Regions.Scroll.Base.ScrollLayerBase)">
            <summary>
            Inicia un modo de renderización en perspectiva axonométrica en la región de pantalla indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartMode7(Kriptok.Scenes.SceneHandler,Kriptok.Common.Resource,System.Action{Kriptok.Regions.Pseudo3D.Mode7.PlotMode7Region})">
            <summary>
            Inicializa una interfaz Mode7 en toda la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartPseudo3D(Kriptok.Scenes.SceneHandler,System.Action{Kriptok.Regions.Pseudo3D.Base.BufferedPseudo3DRegion})">
            <summary>
            Inicializa la perspectiva pseudo 3D en toda la pantalla.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartFull3D(Kriptok.Scenes.SceneHandler,System.Drawing.Rectangle)">
            <summary>
            Inicializa un modo 3D en el área del rectángulo indicada.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.SceneHandlerExtensions.StartFull3D(Kriptok.Scenes.SceneHandler)">
            <summary>
            Inicializa un modo 3D en toda la pantalla.
            </summary>        
        </member>
        <member name="T:Kriptok.Scenes.SceneInitializer">
            <summary>
            Representa las acciones que puede realizar una escena al iniciar.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.SceneInitializer.scene">
            <summary>
            Escena a la que pertenece.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.SceneInitializer.#ctor(Kriptok.Scenes.SceneBase)">
            <summary>
            Constructor interno, para asegurar que no se pueda heredar la clase.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.#ctor">
            <summary>
            Constructor interno, para asegurar que no se pueda heredar la clase fuera de esta librería.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.ConsoleBeep(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Reproduce un sonido de la consola.
            </summary>
            <param name="frequency">Valor entre 37 - 32767.</param>
            <param name="duration">Duración en milisegundos.</param>
            <param name="async">Indica si lo debe ejecutar de forma sincrónica o asincrónica.</param>
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.FindFirst``1">
            <summary>
            Busca el primer objeto vivo del tipo indicado.
            </summary>        
        </member>
        <member name="M:Kriptok.Scenes.FrameHandler.FindAll``1">
            <summary>
            Devuelve todos los objetos vivos del tipo indicado.
            </summary>
        </member>
        <member name="P:Kriptok.Scenes.FrameHandler.ScreenRegion">
            <summary>
            Obtiene una referencia a la región de la pantalla completa.
            </summary>
        </member>
        <member name="T:Kriptok.Scenes.ProcessHandler">
            <summary>
            Esta clase se utiliza para controlar el flujo de un proceso, que es en escencia un objeto
            que actua asincrónicamente.
            </summary>
        </member>
        <member name="F:Kriptok.Scenes.ProcessHandler.process">
            <summary>
            Proceso utilizado por la escena para definir comportamiento.
            </summary>
        </member>
        <member name="M:Kriptok.Scenes.ProcessHandler.#ctor(Kriptok.Entities.Base.ProcessBase)">
            <summary>
            Constructor interno, para asegurar que no se pueda heredar la clase.
            </summary>
        </member>
        <member name="T:Kriptok.Scenes.SceneHandlerSurfaceExtensions">
            <summary>
            Funcionalidades extendidas para la clase <see cref="T:Kriptok.Scenes.SceneHandler"/>.
            </summary>
        </member>
        <member name="T:Kriptok.IO.Config">
            <summary>
            Acceso a opciones de configuración del juego.
            </summary>
        </member>
        <member name="F:Kriptok.IO.Config.loaded">
            <summary>
            Configuración cargada.
            </summary>
        </member>
        <member name="F:Kriptok.IO.Config.Current">
            <summary>
            Configuración cargada actualmente.
            </summary>
        </member>
        <member name="M:Kriptok.IO.Config.Get``1">
            <summary>
            Obtiene la configuración cargada
            </summary>        
        </member>
        <member name="M:Kriptok.IO.Config.Load``1(System.String)">
            <summary>
            Carga la configuración del juego de un archivo indicado por parámetro.
            
            Si el archivo no existe, lo crea.
            </summary>        
        </member>
        <member name="M:Kriptok.IO.MaxScore.CheckAndSave(System.Int32)">
            <summary>
            Actualiza el "máximo puntaje", siempre y cuando sea mayor que el actual.
            Luego devuelve el valor máximo.
            </summary>        
        </member>
        <member name="T:Kriptok.IO.Memory`1">
            <summary>
            Utilizada para guardar un archivo con datos del juego para continuar después.
            </summary>    
        </member>
        <member name="T:Kriptok.Engine">
            <summary>
            Clase utilizada para inicializar un juego.
            </summary>
        </member>
        <member name="M:Kriptok.Engine.Start(Kriptok.Scenes.SceneBase,System.Action{Kriptok.Startup})">
            <summary>
            Inicializa el formulario principal del juego con las opciones indicadas.
            </summary>
        </member>
        <member name="M:Kriptok.Engine.Start(Kriptok.Scenes.SceneBase,Kriptok.Startup)">
            <summary>
            Inicializa el formulario principal del juego con el objeto "inicializador" indicado.
            </summary>
            <param name="initializer">Objeto inicial del juego. Encargado de poner el juego en marcha.</param>
            <param name="options">Opciones de inicializador del formulario.</param>
        </member>
        <member name="M:Kriptok.Engine.Show(Kriptok.Scenes.SceneBase,System.Action{Kriptok.Startup})">
            <summary>
            Abre la pantalla, pero no para jugar. Utilizado para demos y utilitarios.
            </summary>        
        </member>
        <member name="T:Kriptok.Startup">
            <summary>
            Opciones de configuración de la aplicación.
            </summary>
        </member>
        <member name="P:Kriptok.Startup.Title">
            <summary>
            Título que debe mostrar el formulario en "modo ventana", y/o en la barra de tareas.
            </summary>
        </member>
        <member name="P:Kriptok.Startup.FullScreen">
            <summary>
            Indica si se debe mostrar en modo "pantalla completa".
            </summary>
        </member>
        <member name="P:Kriptok.Startup.TimerInterval">
            <summary>
            Intervalo de tiempo (en milisegundos) entre frames.
            </summary>
        </member>
        <member name="M:Kriptok.Startup.OpenMidiNotePlayer">
            <summary>
            Abre un canal de repdoducción de notas Midi.
            </summary>
        </member>
        <member name="M:Kriptok.Startup.ExtractMidiPlayer(System.Boolean)">
            <summary>
            Extrae el reproductor de música Midi.
            </summary>
        </member>
        <member name="F:Kriptok.Consts.DefaultFastPixelFormat">
            <summary>
            Formato gráfico por defecto para los "backbuffers".
            
            Debería ser el que renderice más rápido, y no tomar en cuenta
            transparencias.
            
            En el caso en que sea necesario, como en modos "scroll", utilizar el
            que corresponda, pero dejar el default como el que consuma menos recursos.
            </summary>
        </member>
        <member name="T:Kriptok.Consts.Plot">
            <summary>
            Constantes relacinadas al ploteo de pixels en pantalla.
            </summary>
        </member>
    </members>
</doc>
